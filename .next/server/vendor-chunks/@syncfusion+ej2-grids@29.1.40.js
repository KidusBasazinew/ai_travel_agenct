"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@syncfusion+ej2-grids@29.1.40";
exports.ids = ["vendor-chunks/@syncfusion+ej2-grids@29.1.40"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/clipboard.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/clipboard.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Clipboard: () => (/* binding */ Clipboard)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar Clipboard = /** @class */ (function () {\n    /**\n     * Constructor for the Grid clipboard module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the serviceLocator\n     * @hidden\n     */\n    function Clipboard(parent, serviceLocator) {\n        this.copyContent = '';\n        this.isSelect = false;\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.addEventListener();\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Clipboard.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.contentReady, this.initialEnd, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.keyPressed, this.keyDownHandler, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.click, this.clickHandler, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.onEmpty, this.initialEnd, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'keydown', this.pasteHandler, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Clipboard.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.keyPressed, this.keyDownHandler);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.contentReady, this.initialEnd);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.click, this.clickHandler);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.onEmpty, this.initialEnd);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'keydown', this.pasteHandler);\n    };\n    Clipboard.prototype.clickHandler = function (e) {\n        var target = e.target;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        target = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-rowcell');\n    };\n    Clipboard.prototype.pasteHandler = function (e) {\n        var _this = this;\n        var grid = this.parent;\n        var isMacLike = /(Mac)/i.test(navigator.platform);\n        var selectedRowCellIndexes = this.parent.getSelectedRowCellIndexes();\n        if (!grid.isEdit && e.keyCode === 67 && isMacLike && e.metaKey) {\n            this.copy();\n        }\n        if (selectedRowCellIndexes.length && e.keyCode === 86 && ((!isMacLike && e.ctrlKey) || (isMacLike && e.metaKey)) && !grid.isEdit) {\n            var target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.activeElement, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.rowCell);\n            if (!this.clipBoardTextArea || !target || !grid.editSettings.allowEditing || grid.editSettings.mode !== 'Batch' ||\n                grid.selectionSettings.mode !== 'Cell' || grid.selectionSettings.cellSelectionMode === 'Flow') {\n                return;\n            }\n            this.activeElement = document.activeElement;\n            var x_1 = window.scrollX;\n            var y_1 = window.scrollY;\n            this.clipBoardTextArea.focus();\n            setTimeout(function () {\n                _this.activeElement.focus();\n                window.scrollTo(x_1, y_1);\n                _this.paste(_this.clipBoardTextArea.value, selectedRowCellIndexes[0].rowIndex, selectedRowCellIndexes[0].cellIndexes[0]);\n            }, isMacLike ? 100 : 10);\n        }\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    Clipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        var grid = this.parent;\n        var cIdx = colIndex;\n        var rIdx = rowIndex;\n        var col;\n        var value;\n        var isAvail;\n        var rows = data.split('\\n');\n        var cols;\n        for (var r = 0; r < rows.length; r++) {\n            cols = rows[parseInt(r.toString(), 10)].split('\\t');\n            cIdx = colIndex;\n            if ((r === rows.length - 1 && rows[parseInt(r.toString(), 10)] === '') || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(grid.getRowByIndex(rIdx))) {\n                cIdx++;\n                break;\n            }\n            for (var c = 0; c < cols.length; c++) {\n                isAvail = grid.getCellFromIndex(rIdx, cIdx);\n                if (!isAvail) {\n                    cIdx++;\n                    break;\n                }\n                col = grid.getColumnByIndex(cIdx);\n                value = col.getParser() ? col.getParser()(cols[parseInt(c.toString(), 10)]) : cols[parseInt(c.toString(), 10)];\n                if (col.allowEditing && !col.isPrimaryKey) {\n                    var args = {\n                        column: col,\n                        data: value,\n                        rowIndex: rIdx\n                    };\n                    this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.beforePaste, args);\n                    rIdx = args.rowIndex;\n                    if (!args.cancel) {\n                        if (grid.editModule) {\n                            if (col.type === 'number') {\n                                this.parent.editModule.updateCell(rIdx, col.field, parseFloat(args.data));\n                            }\n                            else {\n                                grid.editModule.updateCell(rIdx, col.field, args.data);\n                            }\n                        }\n                    }\n                }\n                cIdx++;\n            }\n            rIdx++;\n        }\n        grid.selectionModule.selectCellsByRange({ rowIndex: rowIndex, cellIndex: colIndex }, { rowIndex: rIdx - 1, cellIndex: cIdx - 1 });\n        var cell = this.parent.getCellFromIndex(rIdx - 1, cIdx - 1);\n        if (cell) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(cell, ['e-focus', 'e-focused'], []);\n        }\n        this.clipBoardTextArea.value = '';\n    };\n    Clipboard.prototype.initialEnd = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.contentReady, this.initialEnd);\n        this.clipBoardTextArea = this.parent.createElement('textarea', {\n            className: 'e-clipboard',\n            attrs: { tabindex: '-1', 'aria-label': this.l10n.getConstant('ClipBoard') }\n        });\n        this.clipBoardTextArea.style.opacity = '0';\n        this.parent.element.appendChild(this.clipBoardTextArea);\n    };\n    Clipboard.prototype.keyDownHandler = function (e) {\n        if (e.action === 'ctrlPlusC') {\n            this.copy();\n        }\n        else if (e.action === 'ctrlShiftPlusH') {\n            this.copy(true);\n        }\n    };\n    Clipboard.prototype.setCopyData = function (withHeader) {\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this.copyContent = '';\n            var rows = this.parent.getDataRows();\n            if (this.parent.selectionSettings && this.parent.selectionSettings.allowColumnSelection && this.parent.selectionModule &&\n                this.parent.selectionModule.selectedColumnsIndexes.length) {\n                if (withHeader) {\n                    var selectedColumns = this.parent.selectionModule.selectedColumnsIndexes;\n                    var headerColumns = [];\n                    for (var i = 0; i < selectedColumns.length; i++) {\n                        var colIndex = selectedColumns[parseInt(i.toString(), 10)];\n                        var headerCell = this.parent.getColumnHeaderByIndex(colIndex);\n                        if (headerCell && !headerCell.classList.contains('e-hide')) {\n                            headerColumns.push(headerCell);\n                        }\n                    }\n                    this.getCopyData(headerColumns, false, '\\t', withHeader);\n                    this.copyContent += '\\n';\n                }\n                for (var j = 0; j < rows.length; j++) {\n                    var columnCells = [];\n                    if (j > 0) {\n                        this.copyContent += '\\n';\n                    }\n                    columnCells.push.apply(columnCells, [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-columnselection:not(.e-hide)')));\n                    this.getCopyData(columnCells, false, '\\t', withHeader);\n                }\n            }\n            else {\n                if (this.parent.selectionSettings.mode !== 'Cell') {\n                    var selectedIndexes = this.parent.getSelectedRowIndexes().sort(function (a, b) { return a - b; });\n                    if (withHeader) {\n                        var headerTextArray = [];\n                        for (var i = 0; i < this.parent.getVisibleColumns().length; i++) {\n                            headerTextArray[parseInt(i.toString(), 10)] = this.parent\n                                .getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                        }\n                        this.getCopyData(headerTextArray, false, '\\t', withHeader);\n                        this.copyContent += '\\n';\n                    }\n                    if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && selectedIndexes.length > rows.length) {\n                        selectedIndexes = [];\n                        for (var i = 0; i < rows.length; i++) {\n                            var row = rows[parseInt(i.toString(), 10)];\n                            if (row.getAttribute('aria-selected') === 'true') {\n                                selectedIndexes.push(parseInt(row.getAttribute('data-rowindex'), 10));\n                            }\n                        }\n                    }\n                    for (var i = 0; i < selectedIndexes.length; i++) {\n                        if (i > 0) {\n                            this.copyContent += '\\n';\n                        }\n                        var leftCols = [];\n                        var idx = selectedIndexes[parseInt(i.toString(), 10)];\n                        if (!(0,_base_util__WEBPACK_IMPORTED_MODULE_2__.isGroupAdaptive)(this.parent) && (this.parent.enableVirtualization ||\n                            (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) ||\n                            (this.parent.groupSettings.columns.length && this.parent.groupSettings.enableLazyLoading))) {\n                            idx = rows.map(function (m) { return m.getAttribute('data-rowindex'); }).indexOf(selectedIndexes[parseInt(i.toString(), 10)].toString());\n                        }\n                        var currentRow = rows[parseInt(idx.toString(), 10)];\n                        if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(currentRow))) {\n                            leftCols.push.apply(leftCols, [].slice.call(currentRow.querySelectorAll('.e-rowcell:not(.e-hide)')));\n                            this.getCopyData(leftCols, false, '\\t', withHeader);\n                        }\n                    }\n                }\n                else if (this.parent.selectionModule && this.parent.selectionModule.selectedRowCellIndexes.length) {\n                    var obj = this.checkBoxSelection();\n                    if (obj.status) {\n                        if (withHeader) {\n                            var headers = [];\n                            for (var i = 0; i < obj.colIndexes.length; i++) {\n                                var colHeader = this.parent\n                                    .getColumnHeaderByIndex(obj.colIndexes[parseInt(i.toString(), 10)]);\n                                if (!colHeader.classList.contains('e-hide')) {\n                                    headers.push(colHeader);\n                                }\n                            }\n                            this.getCopyData(headers, false, '\\t', withHeader);\n                            this.copyContent += '\\n';\n                        }\n                        for (var i = 0; i < obj.rowIndexes.length; i++) {\n                            if (i > 0) {\n                                this.copyContent += '\\n';\n                            }\n                            var cells = [].slice.call(rows[obj.rowIndexes[parseInt(i.toString(), 10)]].\n                                querySelectorAll('.e-cellselectionbackground:not(.e-hide)'));\n                            this.getCopyData(cells, false, '\\t', withHeader);\n                        }\n                    }\n                    else {\n                        this.getCopyData([].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground')), true, '\\n', withHeader);\n                    }\n                }\n            }\n            var args = {\n                data: this.copyContent,\n                cancel: false\n            };\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.beforeCopy, args);\n            if (args.cancel) {\n                return;\n            }\n            this.clipBoardTextArea.value = this.copyContent = args.data;\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                this.clipBoardTextArea.select();\n            }\n            else {\n                this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n            }\n            this.isSelect = true;\n        }\n    };\n    Clipboard.prototype.getCopyData = function (cells, isCell, splitKey, withHeader) {\n        var isElement = typeof cells[0] !== 'string';\n        for (var j = 0; j < cells.length; j++) {\n            if (withHeader && isCell) {\n                var colIdx = parseInt(cells[parseInt(j.toString(), 10)].\n                    getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.ariaColIndex), 10) - 1;\n                this.copyContent += this.parent.getColumns()[parseInt(colIdx.toString(), 10)].headerText + '\\n';\n            }\n            if (isElement) {\n                if (!cells[parseInt(j.toString(), 10)].classList.contains('e-hide')) {\n                    this.copyContent += cells[parseInt(j.toString(), 10)].innerText;\n                }\n            }\n            else {\n                this.copyContent += cells[parseInt(j.toString(), 10)];\n            }\n            if (j < cells.length - 1) {\n                this.copyContent += splitKey;\n            }\n        }\n    };\n    /**\n     * Copy selected rows or cells data into clipboard.\n     *\n     * @returns {void}\n     * @param {boolean} withHeader - Specifies whether the column header data need to be copied or not.\n     */\n    Clipboard.prototype.copy = function (withHeader) {\n        if (document.queryCommandSupported('copy') && this.clipBoardTextArea) {\n            this.setCopyData(withHeader);\n            document.execCommand('copy');\n            this.clipBoardTextArea.blur();\n        }\n        if (this.isSelect) {\n            window.getSelection().removeAllRanges();\n            this.isSelect = false;\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Clipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Clipboard.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.clipBoardTextArea) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.clipBoardTextArea);\n            this.clipBoardTextArea = null;\n        }\n    };\n    Clipboard.prototype.checkBoxSelection = function () {\n        var gridObj = this.parent;\n        var obj = { status: false };\n        if (gridObj.selectionSettings.mode === 'Cell') {\n            var rowCellIndxes = gridObj.getSelectedRowCellIndexes();\n            var str = void 0;\n            var rowIndexes = [];\n            var i = void 0;\n            for (i = 0; i < rowCellIndxes.length; i++) {\n                if (rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.length) {\n                    rowIndexes.push(rowCellIndxes[parseInt(i.toString(), 10)].rowIndex);\n                }\n                if (rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.length) {\n                    if (!str) {\n                        str = JSON.stringify(rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.sort());\n                    }\n                    if (str !== JSON.stringify(rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.sort())) {\n                        break;\n                    }\n                }\n            }\n            rowIndexes.sort(function (a, b) { return a - b; });\n            if (i === rowCellIndxes.length) {\n                obj = { status: true, rowIndexes: rowIndexes, colIndexes: rowCellIndxes[0].cellIndexes };\n            }\n        }\n        return obj;\n    };\n    return Clipboard;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/clipboard.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Data: () => (/* binding */ Data)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/manager.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/query.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/adaptors.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _services_value_formatter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../services/value-formatter */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js\");\n/* harmony import */ var _common_checkbox_filter_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/checkbox-filter-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/common/checkbox-filter-base.js\");\n\n\n\n\n\n\n/**\n * Grid data module is used to generate query and data source.\n *\n * @hidden\n */\nvar Data = /** @class */ (function () {\n    /**\n     * Constructor for data module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the service locator\n     * @hidden\n     */\n    function Data(parent, serviceLocator) {\n        this.dataState = { isPending: false, resolver: null, group: [] };\n        this.foreignKeyDataState = { isPending: false, resolver: null };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.initDataManager();\n        if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n            return;\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.rowsAdded, this.addRows, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.rowPositionChanged, this.reorderRows, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.rowsRemoved, this.removeRows, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataSourceModified, this.initDataManager, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.destroy, this.destroy, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.updateData, this.crudActions, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.addDeleteAction, this.getData, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.autoCol, this.refreshFilteredCols, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.columnsPrepared, this.refreshFilteredCols, this);\n    }\n    Data.prototype.reorderRows = function (e) {\n        if (this.parent.getDataModule().isRemote()) {\n            this.parent.getCurrentViewRecords().splice(e.toIndex, 0, this.parent.getCurrentViewRecords().splice(e.fromIndex, 1)[0]);\n        }\n        else {\n            this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n        }\n    };\n    Data.prototype.getModuleName = function () {\n        return 'data';\n    };\n    /**\n     * The function used to initialize dataManager and external query\n     *\n     * @returns {void}\n     */\n    Data.prototype.initDataManager = function () {\n        var gObj = this.parent;\n        this.dataManager = gObj.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager ? gObj.dataSource :\n            ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.dataSource) ? new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager() : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager(gObj.dataSource));\n        if (gObj.isAngular && !(gObj.query instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query)) {\n            gObj.setProperties({ query: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query() }, true);\n        }\n        else {\n            this.isQueryInvokedFromData = true;\n            if (!(gObj.query instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query)) {\n                gObj.query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query();\n            }\n        }\n    };\n    /**\n     * The function is used to generate updated Query from Grid model.\n     *\n     * @param {boolean} skipPage - specifies the boolean to skip the page\n     * @param {boolean} isAutoCompleteCall - specifies for auto complete call\n     * @returns {Query} returns the Query\n     * @hidden\n     */\n    Data.prototype.generateQuery = function (skipPage, isAutoCompleteCall) {\n        var gObj = this.parent;\n        var query = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.getQuery()) ? gObj.getQuery().clone() : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query();\n        if (this.parent.columnQueryMode === 'ExcludeHidden') {\n            query.select(this.parent.getColumns().filter(function (column) { return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined); }).map(function (column) { return column.field; }));\n        }\n        else if (this.parent.columnQueryMode === 'Schema') {\n            var selectQueryFields = [];\n            var columns = this.parent.columns;\n            for (var i = 0; i < columns.length; i++) {\n                selectQueryFields.push(columns[parseInt(i.toString(), 10)].field);\n            }\n            query.select(selectQueryFields);\n        }\n        this.filterQuery(query);\n        this.searchQuery(query);\n        this.aggregateQuery(query);\n        this.sortQuery(query);\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.isGroupAdaptive)(this.parent)) {\n            this.virtualGroupPageQuery(query);\n        }\n        else {\n            this.pageQuery(query, skipPage);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isAutoCompleteCall) || !isAutoCompleteCall) {\n            this.groupQuery(query);\n        }\n        return query;\n    };\n    /**\n     * @param {Query} query - specifies the query\n     * @returns {Query} - returns the query\n     * @hidden\n     */\n    Data.prototype.aggregateQuery = function (query) {\n        var rows = this.parent.aggregates;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            for (var j = 0; j < row.columns.length; j++) {\n                var cols = row.columns[parseInt(j.toString(), 10)];\n                var types = cols.type instanceof Array ? cols.type : [cols.type];\n                for (var k = 0; k < types.length; k++) {\n                    query.aggregate(types[parseInt(k.toString(), 10)].toLowerCase(), cols.field);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.virtualGroupPageQuery = function (query) {\n        var fName = 'fn';\n        if (query.queries.length) {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[parseInt(i.toString(), 10)][\"\" + fName] === 'onPage') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.pageQuery = function (query, skipPage) {\n        var gObj = this.parent;\n        var fName = 'fn';\n        var args = { query: query, skipPage: false };\n        gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.setVirtualPageQuery, args);\n        if (args.skipPage) {\n            return query;\n        }\n        if ((gObj.allowPaging || gObj.enableVirtualization || gObj.enableInfiniteScrolling) && skipPage !== true) {\n            gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n            if (gObj.pageSettings.pageCount <= 0) {\n                gObj.pageSettings.pageCount = 8;\n            }\n            if (gObj.pageSettings.pageSize <= 0) {\n                gObj.pageSettings.pageSize = 12;\n            }\n            if (query.queries.length) {\n                for (var i = 0; i < query.queries.length; i++) {\n                    if (query.queries[parseInt(i.toString(), 10)][\"\" + fName] === 'onPage') {\n                        query.queries.splice(i, 1);\n                    }\n                }\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.infiniteScrollModule) && gObj.enableInfiniteScrolling) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.infinitePageQuery, query);\n            }\n            else {\n                query.page(gObj.pageSettings.currentPage, gObj.allowPaging && gObj.pagerModule &&\n                    (gObj.pagerModule.pagerObj.isAllPage && !gObj.isManualRefresh) &&\n                    (!this.dataManager.dataSource.offline && !(this.dataManager.adaptor instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.RemoteSaveAdaptor)) ?\n                    null : gObj.pageSettings.pageSize);\n            }\n        }\n        return query;\n    };\n    Data.prototype.groupQuery = function (query) {\n        var gObj = this.parent;\n        if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n            if (this.parent.groupSettings.enableLazyLoading) {\n                query.lazyLoad.push({ key: 'isLazyLoad', value: this.parent.groupSettings.enableLazyLoading });\n            }\n            var columns = gObj.groupSettings.columns;\n            for (var i = 0, len = columns.length; i < len; i++) {\n                var column = this.getColumnByField(columns[parseInt(i.toString(), 10)]);\n                if (!column) {\n                    this.parent.log('initial_action', { moduleName: 'group', columnName: columns[parseInt(i.toString(), 10)] });\n                }\n                var isGrpFmt = column.enableGroupByFormat;\n                var format = column.format;\n                if (isGrpFmt) {\n                    query.group(columns[parseInt(i.toString(), 10)], this.formatGroupColumn.bind(this), format);\n                }\n                else {\n                    query.group(columns[parseInt(i.toString(), 10)], null);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.sortQuery = function (query) {\n        var gObj = this.parent;\n        if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n            var columns = gObj.sortSettings.columns;\n            var sortGrp = [];\n            for (var i = columns.length - 1; i > -1; i--) {\n                var col = this.getColumnByField(columns[parseInt(i.toString(), 10)].field);\n                if (col) {\n                    col.setSortDirection(columns[parseInt(i.toString(), 10)].direction);\n                }\n                else {\n                    this.parent.log('initial_action', { moduleName: 'sort', columnName: columns[parseInt(i.toString(), 10)].field });\n                    return query;\n                }\n                var fn = columns[parseInt(i.toString(), 10)].direction;\n                if (col.sortComparer) {\n                    this.parent.log('grid_sort_comparer');\n                    fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[parseInt(i.toString(), 10)].direction;\n                }\n                if (gObj.groupSettings.columns.indexOf(columns[parseInt(i.toString(), 10)].field) === -1) {\n                    if (col.isForeignColumn() || col.sortComparer) {\n                        query.sortByForeignKey(col.field, fn, undefined, columns[parseInt(i.toString(), 10)].direction.toLowerCase());\n                    }\n                    else {\n                        query.sortBy(col.field, fn);\n                    }\n                }\n                else {\n                    sortGrp.push({ direction: fn, field: col.field });\n                }\n            }\n            for (var i = 0, len = sortGrp.length; i < len; i++) {\n                if (typeof sortGrp[parseInt(i.toString(), 10)].direction === 'string') {\n                    query.sortBy(sortGrp[parseInt(i.toString(), 10)].field, sortGrp[parseInt(i.toString(), 10)].direction);\n                }\n                else {\n                    var col = this.getColumnByField(sortGrp[parseInt(i.toString(), 10)].field);\n                    query.sortByForeignKey(sortGrp[parseInt(i.toString(), 10)].field, sortGrp[parseInt(i.toString(), 10)].direction, undefined, col.getSortDirection().toLowerCase());\n                }\n            }\n        }\n        return query;\n    };\n    /**\n     * @param {Query} query - specifies the query\n     * @param {Column} fcolumn - specifies the forein key column model\n     * @param {boolean} isForeignKey - Confirms whether the column is a foreign key or not\n     * @returns {Query} - returns the query\n     * @hidden\n     */\n    Data.prototype.searchQuery = function (query, fcolumn, isForeignKey) {\n        var sSettings = this.parent.searchSettings;\n        var fields = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sSettings.fields) && sSettings.fields.length) ? sSettings.fields\n            : this.getSearchColumnFieldNames();\n        var predicateList = [];\n        var needForeignKeySearch = false;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.searchSettings.key) && this.parent.searchSettings.key.length) {\n            needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) { return fields.indexOf(col.field) > -1; });\n            var adaptor = !isForeignKey ? this.dataManager.adaptor : fcolumn.dataSource.adaptor;\n            if (needForeignKeySearch || (adaptor.getModuleName &&\n                adaptor.getModuleName() === 'ODataV4Adaptor')) {\n                fields = isForeignKey ? [fcolumn.foreignKeyValue] : fields;\n                for (var i = 0; i < fields.length; i++) {\n                    var column = isForeignKey ? fcolumn : this.getColumnByField(fields[parseInt(i.toString(), 10)]);\n                    if (column.isForeignColumn() && !isForeignKey) {\n                        predicateList = this.fGeneratePredicate(column, predicateList);\n                    }\n                    else {\n                        predicateList.push(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate(fields[parseInt(i.toString(), 10)], sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n                    }\n                }\n                var predList = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate.or(predicateList);\n                predList.key = sSettings.key;\n                query.where(predList);\n            }\n            else {\n                query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n            }\n        }\n        return query;\n    };\n    Data.prototype.filterQuery = function (query, column, skipFoerign) {\n        var gObj = this.parent;\n        var predicateList = [];\n        var actualFilter = [];\n        var foreignColumn = this.parent.getForeignKeyColumns();\n        var foreignColEmpty;\n        if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n            var columns = column ? column : gObj.filterSettings.columns;\n            var colType = {};\n            for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n                var col = _a[_i];\n                colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n            }\n            var foreignCols = [];\n            var defaultFltrCols = [];\n            for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n                var col = columns_1[_b];\n                var gridColumn = col.isForeignKey ? gObj.getColumnByUid(col.uid) : gObj.getColumnByField(col.field);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.type) && gridColumn && (gridColumn.type === 'date' || gridColumn.type === 'datetime' || gridColumn.type === 'dateonly')) {\n                    col.type = col.isForeignKey ? gObj.getColumnByUid(col.uid).type : gObj.getColumnByField(col.field).type;\n                }\n                if (col.isForeignKey) {\n                    foreignCols.push(col);\n                }\n                else {\n                    defaultFltrCols.push(col);\n                }\n            }\n            if (defaultFltrCols.length) {\n                for (var i = 0, len = defaultFltrCols.length; i < len; i++) {\n                    defaultFltrCols[parseInt(i.toString(), 10)].uid = defaultFltrCols[parseInt(i.toString(), 10)].uid ||\n                        this.parent.grabColumnByFieldFromAllCols(defaultFltrCols[parseInt(i.toString(), 10)]\n                            .field, defaultFltrCols[parseInt(i.toString(), 10)].isForeignKey).uid;\n                }\n                var excelPredicate = _common_checkbox_filter_base__WEBPACK_IMPORTED_MODULE_6__.CheckBoxFilterBase.getPredicate(defaultFltrCols);\n                for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n                    var prop = _d[_c];\n                    predicateList.push(excelPredicate[\"\" + prop]);\n                }\n            }\n            if (foreignCols.length) {\n                for (var _e = 0, foreignCols_1 = foreignCols; _e < foreignCols_1.length; _e++) {\n                    var col = foreignCols_1[_e];\n                    col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field, col.isForeignKey).uid;\n                    var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n                    if (!column_1) {\n                        this.parent.log('initial_action', { moduleName: 'filter', columnName: col.field });\n                    }\n                    if (column_1.isForeignColumn() && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.getColumnByForeignKeyValue)(col.field, foreignColumn) && !skipFoerign) {\n                        actualFilter.push(col);\n                        if (!column_1.columnData.length) {\n                            foreignColEmpty = true;\n                        }\n                        predicateList = this.fGeneratePredicate(column_1, predicateList);\n                    }\n                    else {\n                        var excelPredicate = _common_checkbox_filter_base__WEBPACK_IMPORTED_MODULE_6__.CheckBoxFilterBase.getPredicate(columns);\n                        for (var _f = 0, _g = Object.keys(excelPredicate); _f < _g.length; _f++) {\n                            var prop = _g[_f];\n                            predicateList.push(excelPredicate[\"\" + prop]);\n                        }\n                    }\n                }\n            }\n            if (predicateList.length && !foreignColEmpty) {\n                query.where(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Predicate.and(predicateList));\n            }\n            else {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.showEmptyGrid, {});\n            }\n        }\n        return query;\n    };\n    Data.prototype.fGeneratePredicate = function (col, predicateList) {\n        var fPredicate = {};\n        if (col) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.generateQuery, { predicate: fPredicate, column: col });\n            if (fPredicate.predicate.predicates.length) {\n                predicateList.push(fPredicate.predicate);\n            }\n        }\n        return predicateList;\n    };\n    /**\n     * The function is used to get dataManager promise by executing given Query.\n     *\n     * @param {object} args - specifies the object\n     * @param {string} args.requestType - Defines the request type\n     * @param {string[]} args.foreignKeyData - Defines the foreignKeyData.string\n     * @param {Object} args.data - Defines the data.\n     * @param {number} args.index - Defines the index .\n     * @param {Query} query - Defines the query which will execute along with data processing.\n     * @returns {Promise<Object>} - returns the object\n     * @hidden\n     */\n    Data.prototype.getData = function (args, query) {\n        var _this = this;\n        if (args === void 0) { args = { requestType: '' }; }\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ?\n            args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n        this.parent.log('datasource_syntax_mismatch', { dataState: this.parent });\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            var def = this.eventPromise(args, query, key);\n            return def.promise;\n        }\n        else {\n            var crud = void 0;\n            switch (args.requestType) {\n                case 'delete':\n                    query = query ? query : this.generateQuery();\n                    // eslint-disable-next-line no-case-declarations\n                    var len = Object.keys(args.data).length;\n                    if (len === 1) {\n                        crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n                    }\n                    else {\n                        var changes = {\n                            addedRecords: [],\n                            deletedRecords: [],\n                            changedRecords: []\n                        };\n                        changes.deletedRecords = args.data;\n                        crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n                    }\n                    break;\n                case 'save':\n                    query = query ? query : this.generateQuery();\n                    args.index = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.index) ? 0 : args.index;\n                    crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n                    break;\n            }\n            var promise = 'promise';\n            args[\"\" + promise] = crud;\n            // eslint-disable-next-line no-prototype-builtins\n            if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n                return crud.then(function () {\n                    return _this.insert(query, args);\n                });\n            }\n            else {\n                return this.insert(query, args);\n            }\n        }\n    };\n    Data.prototype.insert = function (query, args) {\n        if (args.requestType === 'save') {\n            args.query = query;\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.recordAdded, args);\n        }\n        return this.executeQuery(query);\n    };\n    Data.prototype.executeQuery = function (query) {\n        var _this = this;\n        if (this.dataManager.ready) {\n            var deferred_1 = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Deferred();\n            var ready = this.dataManager.ready;\n            ready.then(function () {\n                _this.dataManager.executeQuery(query).then(function (result) {\n                    deferred_1.resolve(result);\n                });\n            }).catch(function (e) {\n                deferred_1.reject(e);\n            });\n            return deferred_1.promise;\n        }\n        else {\n            return this.dataManager.executeQuery(query);\n        }\n    };\n    Data.prototype.formatGroupColumn = function (value, field) {\n        var serviceLocator = this.serviceLocator;\n        var column = this.getColumnByField(field);\n        var date = value;\n        if (!column.type) {\n            column.type = date.getDay ? (date.getHours() > 0 || date.getMinutes() > 0 ||\n                date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date') : typeof (value);\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.getFormatter())) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.setFormatter)(serviceLocator, column);\n        }\n        var formatVal = _services_value_formatter__WEBPACK_IMPORTED_MODULE_7__.ValueFormatter.prototype.toView(value, column.getFormatter());\n        return formatVal;\n    };\n    Data.prototype.crudActions = function (args) {\n        var query = this.generateQuery();\n        var promise = null;\n        var pr = 'promise';\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ? args.foreignKeyData :\n            this.parent.getPrimaryKeyFieldNames());\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            this.eventPromise(args, query, key);\n        }\n        switch (args.requestType) {\n            case 'save':\n                promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n                break;\n        }\n        args[\"\" + pr] = promise ? promise : args[\"\" + pr];\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.crudAction, args);\n    };\n    /**\n     * @param {object} changes - specifies the changes\n     * @param {string} key - specifies the key\n     * @param {object} original - specifies the original data\n     * @param {Query} query - specifies the query\n     * @returns {Promise<Object>} returns the object\n     * @hidden\n     */\n    Data.prototype.saveChanges = function (changes, key, original, query) {\n        if (query === void 0) { query = this.generateQuery(); }\n        query.requiresCount();\n        if ('result' in this.parent.dataSource) {\n            var deff = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Deferred();\n            var args = {\n                requestType: 'batchsave', changes: changes, key: key, query: query,\n                endEdit: deff.resolve\n            };\n            this.setState({ isPending: true, resolver: deff.resolve });\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataSourceChanged, args);\n            return deff.promise;\n        }\n        else {\n            var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n            return promise;\n        }\n    };\n    Data.prototype.getKey = function (keys) {\n        if (keys && keys.length) {\n            return keys[0];\n        }\n        return undefined;\n    };\n    /**\n     * @returns {boolean} returns whether its remote data\n     * @hidden\n     */\n    Data.prototype.isRemote = function () {\n        return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined &&\n            this.dataManager.dataSource.url !== '';\n    };\n    Data.prototype.addRows = function (e) {\n        for (var i = e.records.length; i > 0; i--) {\n            if (this.parent.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager && this.dataManager.dataSource.offline) {\n                this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n            }\n            else if (((!this.parent.getDataModule().isRemote()) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource))) &&\n                (!this.parent.dataSource.result)) {\n                this.parent.dataSource['splice'](e.toIndex, 0, e.records[i - 1]);\n            }\n        }\n    };\n    Data.prototype.removeRows = function (e) {\n        var json = this.dataManager.dataSource.json;\n        if (this.parent.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager && this.dataManager.dataSource.offline) {\n            this.dataManager.dataSource.json = json.filter(function (value) { return e.records.indexOf(value) === -1; });\n        }\n        else if (((!this.parent.getDataModule().isRemote()) && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource))) &&\n            (!this.parent.dataSource.result)) {\n            this.parent.dataSource = json.filter(function (value) { return e.records.indexOf(value) === -1; });\n        }\n    };\n    Data.prototype.getColumnByField = function (field) {\n        var col;\n        return (this.parent.columnModel).some(function (column) {\n            col = column;\n            return column.field === field;\n        }) && col;\n    };\n    Data.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.rowsAdded, this.addRows);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.rowsRemoved, this.removeRows);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataSourceModified, this.initDataManager);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.destroy, this.destroy);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.updateData, this.crudActions);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.addDeleteAction, this.getData);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.autoCol, this.refreshFilteredCols);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.columnsPrepared, this.refreshFilteredCols);\n    };\n    Data.prototype.getState = function () {\n        return this.dataState;\n    };\n    Data.prototype.setState = function (state) {\n        return this.dataState = state;\n    };\n    Data.prototype.getForeignKeyDataState = function () {\n        return this.foreignKeyDataState;\n    };\n    Data.prototype.setForeignKeyDataState = function (state) {\n        this.foreignKeyDataState = state;\n    };\n    Data.prototype.getStateEventArgument = function (query) {\n        var adaptr = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.UrlAdaptor();\n        var dm = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager({ url: '', adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.UrlAdaptor });\n        var state = adaptr.processQuery(dm, query);\n        var data = JSON.parse(state.data);\n        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(data, state.pvtData);\n    };\n    Data.prototype.eventPromise = function (args, query, key) {\n        var _this = this;\n        var dataArgs = args;\n        var state = this.getStateEventArgument(query);\n        var def = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Deferred();\n        var deff = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.Deferred();\n        if ((args.requestType !== undefined || (this.parent.groupSettings.disablePageWiseAggregates && query.queries.some(function (query) { return query.fn === 'onGroup'; })))\n            && this.dataState.isDataChanged !== false) {\n            state.action = args;\n            if (args.requestType === 'save' || args.requestType === 'delete' || args.requestType === 'batchsave') {\n                var editArgs_1 = args;\n                editArgs_1.key = key;\n                var promise = 'promise';\n                editArgs_1[\"\" + promise] = deff.promise;\n                editArgs_1.state = state;\n                this.setState({ isPending: true, resolver: deff.resolve });\n                dataArgs.endEdit = deff.resolve;\n                dataArgs.cancelEdit = deff.reject;\n                this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataSourceChanged, editArgs_1);\n                deff.promise.then(function () {\n                    _this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                    if (editArgs_1.requestType === 'save') {\n                        _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.recordAdded, editArgs_1);\n                    }\n                    _this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataStateChange, state);\n                })\n                    .catch(function () { return void 0; });\n            }\n            else {\n                this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataStateChange, state);\n            }\n        }\n        else {\n            this.setState({});\n            def.resolve(this.parent.dataSource);\n        }\n        return def;\n    };\n    /**\n     * Gets the columns where searching needs to be performed from the Grid.\n     *\n     * @returns {string[]} returns the searched column field names\n     */\n    Data.prototype.getSearchColumnFieldNames = function () {\n        var colFieldNames = [];\n        var columns = this.parent.getColumns();\n        for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n            var col = columns_2[_i];\n            if (col.allowSearching && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.field)) {\n                colFieldNames.push(col.field);\n            }\n        }\n        return colFieldNames;\n    };\n    Data.prototype.refreshFilteredCols = function () {\n        if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.refreshFilteredColsUid)(this.parent, this.parent.filterSettings.columns);\n        }\n    };\n    return Data;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/logger.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/logger.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger),\n/* harmony export */   detailLists: () => (/* binding */ detailLists)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/util.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/manager.js\");\n/**\n *\n * `Logger` class\n */\n\n\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation/grid';\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/';\nvar WARNING = '[EJ2Grid.Warning]';\nvar ERROR = '[EJ2Grid.Error]';\nvar INFO = '[EJ2Grid.Info]';\nvar Logger = /** @class */ (function () {\n    function Logger(parent) {\n        this.parent = parent;\n        this.parent.on('initial-end', this.patchadaptor, this);\n    }\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                // eslint-disable-next-line no-console\n                console[item.logType](item.generateMessage(args, this.parent, cOp.options));\n            }\n        }\n    };\n    Logger.prototype.patchadaptor = function () {\n        var adaptor = this.parent.getDataModule().dataManager.adaptor;\n        var original = adaptor.beforeSend;\n        if (original) {\n            adaptor.beforeSend = function (dm, request, settings) {\n                original.call(adaptor, dm, request, settings);\n            };\n        }\n    };\n    Logger.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-end', this.patchadaptor);\n    };\n    return Logger;\n}());\n\nvar detailLists = {\n    // eslint-disable-next-line camelcase\n    module_missing: {\n        type: 'module_missing',\n        logType: 'warn',\n        check: function (args, parent) {\n            var injected = parent.getInjectedModules().map(function (m) { return m.prototype.getModuleName(); });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var modules = parent.requiredModules().map(function (m) { return m.member; })\n                .filter(function (name) { return injected.indexOf(name) === -1; });\n            return { success: modules.filter(function (m) { return m !== 'resize'; }).length > 0, options: modules };\n        },\n        generateMessage: function (args, parent, modules) {\n            modules = modules.filter(function (m) { return m !== 'resize'; })\n                .reduce(function (prev, cur) { return prev + (\"* \" + cur + \"\\n\"); }, '');\n            return WARNING + ': MODULES MISSING\\n' + 'The following modules are not injected:.\\n' +\n                (\"\" + modules) +\n                (\"Refer to \" + BASE_DOC_URL + \"/module.html for documentation on importing feature modules.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    promise_enabled: {\n        type: 'promise_enabled',\n        logType: 'error',\n        check: function () {\n            return { success: typeof Promise === 'undefined' };\n        },\n        generateMessage: function () {\n            return ERROR + ': PROMISE UNDEFINED\\n' +\n                'Promise object is not present in the global environment,' +\n                'please use polyfil to support Promise object in your environment.\\n' +\n                (\"Refer to \" + DOC_URL + \"/base/browser.html?#required-polyfills for more information.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    primary_column_missing: {\n        type: 'primary_column_missing',\n        logType: 'warn',\n        check: function (args, parent) {\n            return { success: parent.enableColumnVirtualization\n                    ? parent.getPrimaryKeyFieldNames().length === 0\n                    : parent.getColumns().filter(function (column) { return column.isPrimaryKey; }).length === 0 };\n        },\n        generateMessage: function () {\n            return WARNING + ': PRIMARY KEY MISSING\\n' + 'Editing is enabled but primary key column is not specified.\\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/api-column.html?#isprimarykey for documentation on providing primary key columns.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    selection_key_missing: {\n        type: 'selection_key_missing',\n        logType: 'warn',\n        check: function (args, parent) {\n            return { success: parent.selectionSettings.persistSelection &&\n                    parent.getColumns().filter(function (column) { return column.isPrimaryKey; }).length === 0 };\n        },\n        generateMessage: function () {\n            return WARNING + ': PRIMARY KEY MISSING\\n' +\n                'selectionSettings.persistSelection property is enabled. It requires one primary key column to persist selection.\\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/api-column.html?#isprimarykey for documentation on providing primary key columns.\");\n        }\n    },\n    actionfailure: {\n        type: 'actionfailure',\n        logType: 'error',\n        check: function () {\n            return { success: true };\n        },\n        generateMessage: function (args, parent) {\n            var message = '';\n            var formatError = formatErrorHandler(args, parent);\n            var ajaxError = ajaxErrorHandler(args, parent);\n            if (ajaxError !== '') {\n                message = ajaxError;\n            }\n            else if (formatError !== '') {\n                message = formatError;\n            }\n            else {\n                message = args.error;\n            }\n            return WARNING + ': ' + message;\n        }\n    },\n    // eslint-disable-next-line camelcase\n    locale_missing: {\n        type: 'locale_missing',\n        logType: 'warn',\n        check: function (args, parent) {\n            var lObj = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataUtil.getObject(\"locale.\" + parent.locale + \".grid\", _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n);\n            return { success: parent.locale !== 'en-US' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lObj) };\n        },\n        generateMessage: function (args, parent) {\n            return WARNING + ': LOCALE CONFIG MISSING\\n' + (\"Locale configuration for '\" + parent.locale + \"' is not provided.\\n\") +\n                (\"Refer to \" + BASE_DOC_URL + \"/globalization-and-localization.html?#localization \\n             for documentation on setting locale configuration.\");\n        }\n    },\n    limitation: {\n        type: 'limitation',\n        logType: 'warn',\n        check: function (args, parent) {\n            var name = args;\n            var opt;\n            switch (name) {\n                case 'freeze':\n                    opt = {\n                        success: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(parent.detailTemplate) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(parent.childGrid),\n                        options: { name: 'freeze' }\n                    };\n                    break;\n                case 'virtualization':\n                    opt = {\n                        success: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(parent.detailTemplate) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(parent.childGrid),\n                        options: { name: 'virtualization' }\n                    };\n                    break;\n                default:\n                    opt = { success: false };\n                    break;\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, options) {\n            var name = options.name;\n            var opt;\n            switch (name) {\n                case 'freeze':\n                    opt = 'Frozen rows and columns do not support the following features:\\n' +\n                        '* Details Template\\n' +\n                        '* Hierarchy Grid\\n';\n                    break;\n                case 'virtualization':\n                    opt = 'Virtualization does not support the following features.\\n' +\n                        '* Details Template.\\n' +\n                        '* Hierarchy Grid.\\n';\n                    break;\n                default:\n                    opt = '';\n                    break;\n            }\n            return WARNING + (\": \" + name.toUpperCase() + \" LIMITATIONS\\n\") + opt;\n        }\n    },\n    // eslint-disable-next-line camelcase\n    check_datasource_columns: {\n        type: 'check_datasource_columns',\n        logType: 'warn',\n        check: function (args, parent) {\n            return { success: !(parent.columns.length ||\n                    (parent.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager) ||\n                    (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.dataSource) && parent.dataSource.length)) };\n        },\n        generateMessage: function () {\n            return WARNING + ': GRID CONFIG MISSING\\n' + 'dataSource and columns are not provided in the grid. ' +\n                'At least one of either must be provided for grid configuration.\\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/columns.html for documentation on configuring the grid data and columns.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    virtual_height: {\n        type: 'virtual_height',\n        logType: 'error',\n        check: function (args, parent) {\n            return { success: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parent.height) || parent.height === 'auto' };\n        },\n        generateMessage: function () {\n            return ERROR + ': GRID HEIGHT MISSING \\n' + 'height property is required to use virtualization.\\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/virtual.html for documentation on configuring the virtual grid.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    grid_remote_edit: {\n        type: 'grid_remote_edit',\n        logType: 'error',\n        check: function (args) {\n            return { success: Array.isArray(args) || Array.isArray(args.result) };\n        },\n        generateMessage: function () {\n            return ERROR + ': RETRUN VALUE MISSING  \\n' +\n                'Remote service returns invalid data. \\n' +\n                (\"Refer to \" + BASE_DOC_URL + \"/edit.html for documentation on configuring editing with remote data.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    grid_sort_comparer: {\n        type: 'grid_sort_comparer',\n        logType: 'warn',\n        check: function (args, parent) {\n            return { success: parent.getDataModule().isRemote() };\n        },\n        generateMessage: function () {\n            return WARNING + ': SORT COMPARER NOT WORKING  \\n' + 'Sort comparer will not work with remote data.' +\n                (\"Refer to \" + BASE_DOC_URL + \"/sorting/#custom-sort-comparer for documentation on using the sort comparer.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    resize_min_max: {\n        type: 'resize_min_max',\n        logType: 'info',\n        check: function (args) {\n            return { success: (args.column.minWidth && args.column.minWidth >= args.width) ||\n                    (args.column.maxWidth && args.column.maxWidth <= args.width) };\n        },\n        generateMessage: function () {\n            return INFO + ': RESIZING COLUMN REACHED MIN OR MAX  \\n' + 'The column resizing width is at its min or max.';\n        }\n    },\n    // eslint-disable-next-line camelcase\n    action_disabled_column: {\n        type: 'action_disabled_column',\n        logType: 'info',\n        check: function (args) {\n            var success = true;\n            var fn;\n            switch (args.moduleName) {\n                case 'reorder':\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.destColumn)) {\n                        fn = \"reordering action is disabled for the \" + args.column.headerText + \" column\";\n                    }\n                    else {\n                        fn = \"reordering action is disabled for the \" + (args.column.allowReordering ?\n                            args.destColumn.headerText : args.column.headerText) + \" column\";\n                    }\n                    break;\n                case 'group':\n                    fn = \"grouping action is disabled for the \" + args.columnName + \" column.\";\n                    break;\n                case 'filter':\n                    fn = \"filtering action is disabled for the \" + args.columnName + \" column.\";\n                    break;\n                case 'sort':\n                    fn = \"sorting action is disabled for the \" + args.columnName + \" column.\";\n                    break;\n            }\n            return { success: success, options: { fn: fn } };\n        },\n        generateMessage: function (args, parent, options) {\n            return INFO + (\": ACTION DISABLED \\n \" + options.fn);\n        }\n    },\n    // eslint-disable-next-line camelcase\n    exporting_begin: {\n        type: 'exporting_begin',\n        logType: 'info',\n        check: function (args) {\n            return { success: true, options: { args: args } };\n        },\n        generateMessage: function (args, parent, options) {\n            return INFO + (\": EXPORTING INPROGRESS \\n Grid \" + options.args + \"ing is in progress\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    exporting_complete: {\n        type: 'exporting_complete',\n        logType: 'info',\n        check: function (args) {\n            return { success: true, options: { args: args } };\n        },\n        generateMessage: function (args, parent, options) {\n            return INFO + (\": EXPORTING COMPLETED \\n Grid \" + options.args + \"ing is complete\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    foreign_key_failure: {\n        type: 'foreign_key_failure',\n        logType: 'error',\n        check: function () {\n            return { success: true };\n        },\n        generateMessage: function () {\n            return ERROR + ': FOREIGNKEY CONFIG \\n  Grid foreign key column needs a valid data source/service.' +\n                (\"Refer to \" + BASE_DOC_URL + \"/columns/#foreign-key-column for documentation on configuring foreign key columns.\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    initial_action: {\n        type: 'initial_action',\n        logType: 'error',\n        check: function (args) {\n            var success = true;\n            var fn;\n            switch (args.moduleName) {\n                case 'group':\n                    fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" +\n                        'Please provide a valid field name to group the column';\n                    break;\n                case 'filter':\n                    fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" +\n                        'Please provide a valid field name to filter the column.';\n                    break;\n                case 'sort':\n                    fn = \"The \" + args.columnName + \" column is not available in the grid's column model.\" +\n                        'Please provide a valid field name to sort the column.';\n                    break;\n            }\n            return { success: success, options: { fn: fn } };\n        },\n        generateMessage: function (args, parent, options) {\n            return ERROR + (\": INITIAL ACTION FAILURE \\n \" + options.fn);\n        }\n    },\n    // eslint-disable-next-line camelcase\n    frozen_rows_columns: {\n        type: 'frozen_rows_columns',\n        logType: 'error',\n        check: function (args, parent) {\n            return { success: parent.getColumns().length <= parent.frozenColumns\n                    || (parent.currentViewData.length && parent.frozenRows >= parent.currentViewData.length) };\n        },\n        generateMessage: function (args, parent) {\n            return ERROR + (\": OUT OF RANGE ERROR-\\n \" + (parent.getColumns().length <= parent.frozenColumns ? 'FROZEN COLUMNS,' : '')) +\n                ((parent.frozenRows >= parent.currentViewData.length ? 'FROZEN ROWS' : '') + \" invalid\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    column_type_missing: {\n        type: 'column_type_missing',\n        logType: 'error',\n        check: function (args) {\n            return { success: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.column.type), options: args.column.headerText };\n        },\n        generateMessage: function (args, parent, options) {\n            return ERROR + (\": COLUMN TYPE MISSING-\\n  \" + options + \" column type was invalid or not defined.\") +\n                (\"Please go through below help link: \" + DOC_URL + \"/grid/columns/#column-type\");\n        }\n    },\n    // eslint-disable-next-line camelcase\n    datasource_syntax_mismatch: {\n        type: 'datasource_syntax_mismatch',\n        logType: 'warn',\n        check: function (args) {\n            return { success: args.dataState.dataSource && !(args.dataState.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_2__.DataManager ||\n                    'result' in args.dataState.dataSource || args.dataState.dataSource instanceof Array) &&\n                    !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.dataState.dataStateChange)) };\n        },\n        generateMessage: function () {\n            return WARNING + ': DATASOURCE SYNTAX WARNING\\n' +\n                'DataSource should be in the form of {result: Object[], count: number}' +\n                'when dataStateChangeEvent used';\n        }\n    }\n};\nvar formatErrorHandler = function (args) {\n    var error = args.error;\n    if (error.indexOf && error.indexOf('Format options') !== 0) {\n        return '';\n    }\n    return 'INVALID FORMAT\\n' +\n        'For more information, refer to the following documentation links:\\n' +\n        (\"Number format: \" + DOC_URL + \"/common/internationalization#supported-format-string\\n\") +\n        (\"Date format: \" + DOC_URL + \"/common/internationalization#manipulating-datetime\\n\") +\n        (\"Message: \" + error);\n};\nvar ajaxErrorHandler = function (args) {\n    var error = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataUtil.getObject('error.error', args);\n    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(error)) {\n        return '';\n    }\n    var jsonResult = '';\n    try {\n        jsonResult = JSON.parse(error.responseText);\n    }\n    catch (_a) {\n        jsonResult = '';\n    }\n    return 'XMLHTTPREQUEST FAILED\\n' +\n        (\"Url: \" + error.responseURL + \"\\n\") +\n        (\"Status: \" + error.status + \" - \" + error.statusText + \"\\n\") +\n        (\"\" + (jsonResult !== '' ? 'Message: ' + jsonResult : ''));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/logger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/print.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/print.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Print: () => (/* binding */ Print),\n/* harmony export */   getCloneProperties: () => (/* binding */ getCloneProperties)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_grid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/grid */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/manager.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n/**\n * @returns {string[]} returns the cloned property\n * @hidden\n */\nfunction getCloneProperties() {\n    return ['aggregates', 'allowGrouping', 'allowFiltering', 'allowMultiSorting', 'allowReordering', 'allowSorting',\n        'allowTextWrap', 'childGrid', 'columns', 'currentViewData', 'dataSource', 'detailTemplate', 'enableAltRow',\n        'enableColumnVirtualization', 'filterSettings', 'gridLines',\n        'groupSettings', 'height', 'locale', 'pageSettings', 'printMode', 'query', 'queryString', 'enableRtl',\n        'rowHeight', 'rowTemplate', 'sortSettings', 'textWrapSettings', 'allowPaging', 'hierarchyPrintMode', 'searchSettings',\n        'queryCellInfo', 'beforeDataBound', 'enableHtmlSanitizer'];\n}\n/**\n *\n * The `Print` module is used to handle print action.\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for the Grid print module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {Scroll} scrollModule - specifies the scroll module\n     * @hidden\n     */\n    function Print(parent, scrollModule) {\n        this.isAsyncPrint = false;\n        this.defered = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Deferred();\n        this.parent = parent;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.contentReady, this.isContentReady(), this);\n        this.actionBeginFunction = this.actionBegin.bind(this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionBegin, this.actionBeginFunction);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.onEmpty, this.onEmpty.bind(this));\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.hierarchyPrint, this.hierarchyPrint, this);\n        this.scrollModule = scrollModule;\n    }\n    Print.prototype.isContentReady = function () {\n        var _this = this;\n        if (this.isPrintGrid() && (this.parent.hierarchyPrintMode === 'None' || !this.parent.childGrid)) {\n            return this.contentReady;\n        }\n        return function () {\n            _this.defered.promise.then(function () {\n                _this.contentReady();\n            });\n            if (_this.isPrintGrid()) {\n                _this.hierarchyPrint();\n            }\n        };\n    };\n    Print.prototype.hierarchyPrint = function () {\n        this.removeColGroup(this.parent);\n        var printGridObj = window.printGridObj;\n        if (printGridObj && !printGridObj.element.querySelector('[aria-busy=true')) {\n            printGridObj.printModule.defered.resolve();\n        }\n    };\n    /**\n     * By default, prints all the Grid pages and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./printmode/).\n     *\n     * @returns {void}\n     */\n    Print.prototype.print = function () {\n        this.renderPrintGrid();\n    };\n    Print.prototype.onEmpty = function () {\n        if (this.isPrintGrid()) {\n            this.contentReady();\n        }\n    };\n    Print.prototype.actionBegin = function () {\n        if (this.isPrintGrid()) {\n            this.isAsyncPrint = true;\n        }\n    };\n    Print.prototype.renderPrintGrid = function () {\n        var gObj = this.parent;\n        var element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            id: this.parent.element.id + '_print', className: gObj.element.className + ' e-print-grid'\n        });\n        element.classList.remove('e-gridhover');\n        document.body.appendChild(element);\n        var printGrid = new _base_grid__WEBPACK_IMPORTED_MODULE_3__.Grid((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.getPrintGridModel)(gObj, gObj.hierarchyPrintMode));\n        for (var i = 0; i < printGrid.columns.length; i++) {\n            printGrid.columns[parseInt(i.toString(), 10)] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, printGrid.columns[parseInt(i.toString(), 10)]);\n            if (!gObj.getFrozenColumns() && gObj.isFrozenGrid()) {\n                printGrid.columns[parseInt(i.toString(), 10)].freeze = undefined;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.parent.isAngular) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            printGrid.viewContainerRef = this.parent.viewContainerRef;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        printGrid.load = function () { };\n        printGrid.query = gObj.getQuery().clone();\n        window.printGridObj = printGrid;\n        printGrid.isPrinting = true;\n        var modules = printGrid.getInjectedModules();\n        var injectedModues = gObj.getInjectedModules();\n        if (!modules || modules.length !== injectedModues.length) {\n            printGrid.setInjectedModules(injectedModues);\n        }\n        gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.printGridInit, { element: element, printgrid: printGrid });\n        this.parent.log('exporting_begin', this.getModuleName());\n        printGrid.registeredTemplate = this.parent.registeredTemplate;\n        printGrid.isVue = this.parent.isVue;\n        if (this.parent.isVue) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            printGrid.vueInstance = this.parent.vueInstance;\n        }\n        printGrid.printGridParent = gObj;\n        printGrid.appendTo(element);\n        if (!gObj.isVue3) {\n            printGrid.trigger = gObj.trigger;\n        }\n    };\n    Print.prototype.contentReady = function () {\n        var _this = this;\n        if (this.isPrintGrid()) {\n            var gObj = this.parent;\n            if (this.isAsyncPrint) {\n                this.printGrid();\n                return;\n            }\n            var args = {\n                requestType: 'print',\n                element: gObj.element,\n                selectedRows: gObj.getContentTable().querySelectorAll('tr[aria-selected=\"true\"]'),\n                cancel: false,\n                hierarchyPrintMode: gObj.hierarchyPrintMode\n            };\n            if (!this.isAsyncPrint) {\n                gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_2__.beforePrint, args);\n            }\n            if (args.cancel) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(gObj.element);\n                return;\n            }\n            if (!this.isAsyncPrint) {\n                if (this.parent.printGridParent && this.parent.printGridParent.isReact) {\n                    this.parent.printGridParent.renderTemplates(function () {\n                        _this.printGrid();\n                    });\n                }\n                else {\n                    this.printGrid();\n                }\n            }\n        }\n    };\n    Print.prototype.printGrid = function () {\n        var gObj = this.parent;\n        // Height adjustment on print grid\n        if (gObj.height !== 'auto') { // if scroller enabled\n            var cssProps = this.scrollModule.getCssProperties();\n            var contentDiv = gObj.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_5__.content);\n            var headerDiv = gObj.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_5__.gridHeader);\n            contentDiv.style.height = 'auto';\n            contentDiv.style.overflowY = 'auto';\n            headerDiv.style[cssProps.padding] = '';\n            headerDiv.firstElementChild.style[cssProps.border] = '';\n        }\n        // Grid alignment adjustment on grouping\n        if (gObj.allowGrouping) {\n            if (!gObj.groupSettings.columns.length) {\n                gObj.element.querySelector('.e-groupdroparea').style.display = 'none';\n            }\n            else {\n                this.removeColGroup(gObj);\n            }\n        }\n        // hide horizontal scroll\n        for (var _i = 0, _a = [].slice.call(gObj.element.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_5__.content)); _i < _a.length; _i++) {\n            var element = _a[_i];\n            element.style.overflowX = 'hidden';\n        }\n        // Hide the waiting popup\n        var waitingPop = [].slice.call(gObj.element.getElementsByClassName('e-spin-show'));\n        for (var _b = 0, _c = [].slice.call(waitingPop); _b < _c.length; _b++) {\n            var element = _c[_b];\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(element, ['e-spin-hide'], ['e-spin-show']);\n        }\n        this.printGridElement(gObj);\n        gObj.isPrinting = false;\n        delete window.printGridObj;\n        var args = {\n            element: gObj.element\n        };\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_2__.printComplete, args);\n        gObj.destroy();\n        this.parent.log('exporting_complete', this.getModuleName());\n    };\n    Print.prototype.printGridElement = function (gObj) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(gObj.element, ['e-print-grid-layout'], ['e-print-grid']);\n        if (gObj.isPrinting) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.detach)(gObj.element);\n        }\n        this.printWind = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.printWind)) {\n            this.printWind.moveTo(0, 0);\n            this.printWind.resizeTo(screen.availWidth, screen.availHeight);\n            this.printWind = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.print)(gObj.element, this.printWind);\n        }\n    };\n    Print.prototype.removeColGroup = function (gObj) {\n        var depth = gObj.groupSettings.columns.length;\n        var element = gObj.element;\n        var id = '#' + gObj.element.id;\n        if (!depth) {\n            return;\n        }\n        var groupCaption = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.e-groupcaption', element);\n        var colSpan = gObj.groupSettings.enableLazyLoading ? (parseInt(groupCaption[0].getAttribute('colspan'), 10) -\n            (gObj.groupSettings.columns.length - 1)).toString() : groupCaption[depth - 1].getAttribute('colspan');\n        for (var i = 0; i < groupCaption.length; i++) {\n            groupCaption[parseInt(i.toString(), 10)].setAttribute('colspan', colSpan);\n        }\n        var colGroups = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)(\"colgroup\" + id + \"colgroup\", element);\n        var contentColGroups = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.e-content colgroup', element);\n        var footerColGroups = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.e-summarycontent colgroup', element);\n        this.hideColGroup(colGroups, depth);\n        this.hideColGroup(contentColGroups, depth);\n        this.hideColGroup(footerColGroups, depth);\n    };\n    Print.prototype.hideColGroup = function (colGroups, depth) {\n        for (var i = 0; i < colGroups.length; i++) {\n            for (var j = 0; j < depth; j++) {\n                colGroups[parseInt(i.toString(), 10)].children[parseInt(j.toString(), 10)].style.display = 'none';\n            }\n        }\n    };\n    /**\n     * To destroy the print\n     *\n     * @returns {boolean} returns the isPrintGrid or not\n     * @hidden\n     */\n    Print.prototype.isPrintGrid = function () {\n        return this.parent.element.id.indexOf('_print') > 0 && this.parent.isPrinting;\n    };\n    /**\n     * To destroy the print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_2__.contentReady, this.contentReady.bind(this));\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionBegin, this.actionBeginFunction);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_2__.onEmpty, this.onEmpty.bind(this));\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_2__.hierarchyPrint, this.hierarchyPrint);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    Print.printGridProp = getCloneProperties().concat([_base_constant__WEBPACK_IMPORTED_MODULE_2__.beforePrint, _base_constant__WEBPACK_IMPORTED_MODULE_2__.printComplete, _base_constant__WEBPACK_IMPORTED_MODULE_2__.load]);\n    return Print;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/print.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/scroll.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/scroll.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scroll: () => (/* binding */ Scroll)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _services_width_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/width-controller */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n\n\n/**\n * The `Scroll` module is used to handle scrolling behaviour.\n */\nvar Scroll = /** @class */ (function () {\n    /**\n     * Constructor for the Grid scrolling.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @hidden\n     */\n    function Scroll(parent) {\n        //To maintain scroll state on grid actions.\n        this.previousValues = { top: 0, left: 0 };\n        this.oneTimeReady = true;\n        this.parent = parent;\n        this.widthService = new _services_width_controller__WEBPACK_IMPORTED_MODULE_1__.ColumnWidthService(parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Scroll.prototype.getModuleName = function () {\n        return 'scroll';\n    };\n    /**\n     * @param {boolean} uiupdate - specifies the uiupdate\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.setWidth = function (uiupdate) {\n        this.parent.element.style.width = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.parent.width);\n        if (uiupdate) {\n            this.widthService.setWidthToColumns();\n        }\n        if (this.parent.toolbarModule && this.parent.toolbarModule.toolbar &&\n            this.parent.toolbarModule.toolbar.element) {\n            var tlbrElement = this.parent.toolbarModule.toolbar.element;\n            var tlbrLeftElement = tlbrElement.querySelector('.e-toolbar-left');\n            var tlbrCenterElement = tlbrElement.querySelector('.e-toolbar-center');\n            var tlbrRightElement = tlbrElement.querySelector('.e-toolbar-right');\n            var tlbrItems = tlbrElement.querySelector('.e-toolbar-items');\n            var tlbrLeftWidth = tlbrLeftElement ? tlbrLeftElement.clientWidth : 0;\n            var tlbrCenterWidth = tlbrCenterElement ? tlbrCenterElement.clientWidth : 0;\n            var tlbrRightWidth = tlbrRightElement ? tlbrRightElement.clientWidth : 0;\n            var tlbrItemsWidth = tlbrItems ? tlbrItems.clientWidth : 0;\n            var tlbrWidth = tlbrElement ? tlbrElement.clientWidth : 0;\n            if (!this.parent.enableAdaptiveUI || tlbrLeftWidth > tlbrWidth || tlbrCenterWidth > tlbrWidth || tlbrRightWidth > tlbrWidth ||\n                tlbrItemsWidth > tlbrWidth) {\n                this.parent.toolbarModule.toolbar.refreshOverflow();\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.setHeight = function () {\n        var mHdrHeight = 0;\n        var content = this.parent.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content);\n        var height = this.parent.height;\n        if (this.parent.enableColumnVirtualization && this.parent.isFrozenGrid() && this.parent.height !== 'auto'\n            && this.parent.height.toString().indexOf('%') < 0) {\n            height = parseInt(height, 10) - Scroll.getScrollBarWidth();\n        }\n        if (!this.parent.enableVirtualization && this.parent.frozenRows && this.parent.height !== 'auto' &&\n            this.parent.height !== '100%') {\n            var tbody = this.parent.getHeaderContent()\n                .querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody + ':not(.e-masked-tbody)');\n            mHdrHeight = tbody ? tbody.offsetHeight : 0;\n            if (tbody && mHdrHeight) {\n                var add = tbody.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.addedRow).length;\n                var height_1 = add * this.parent.getRowHeight();\n                mHdrHeight -= height_1;\n            }\n            else if (!this.parent.isInitialLoad && this.parent.loadingIndicator.indicatorType === 'Shimmer'\n                && this.parent.getHeaderContent().querySelector('.e-masked-table')) {\n                height = parseInt(height, 10) - (this.parent.frozenRows * this.parent.getRowHeight());\n            }\n            content.style.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(parseInt(height, 10) - mHdrHeight);\n        }\n        else {\n            content.style.height = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(height);\n        }\n        this.ensureOverflow(content);\n        if (this.parent.isFrozenGrid()) {\n            this.refresh();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.setPadding = function () {\n        var content = this.parent.getHeaderContent();\n        var scrollWidth = Scroll.getScrollBarWidth() - this.getThreshold();\n        var cssProps = this.getCssProperties();\n        content.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent).style[cssProps.border] = scrollWidth > 0 ? '1px' : '0px';\n        content.style[cssProps.padding] = scrollWidth > 0 ? scrollWidth + 'px' : '0px';\n    };\n    /**\n     * @param {boolean} rtl - specifies the rtl\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.removePadding = function (rtl) {\n        var cssProps = this.getCssProperties(rtl);\n        var hDiv = this.parent.getHeaderContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent);\n        hDiv.style[cssProps.border] = '';\n        hDiv.parentElement.style[cssProps.padding] = '';\n        var footerDiv = this.parent.getFooterContent();\n        if (footerDiv && footerDiv.classList.contains('e-footerpadding')) {\n            footerDiv.classList.remove('e-footerpadding');\n        }\n    };\n    /**\n     * Refresh makes the Grid adoptable with the height of parent container.\n     *\n     * > The [`height`](./#height) must be set to 100%.\n     *\n     * @returns {void}\n     */\n    Scroll.prototype.refresh = function () {\n        if (this.parent.height !== '100%') {\n            return;\n        }\n        var content = this.parent.getContent();\n        this.parent.element.style.height = '100%';\n        var height = this.widthService.getSiblingsHeight(content);\n        content.style.height = 'calc(100% - ' + height + 'px)'; //Set the height to the  '.' + literals.gridContent;\n    };\n    Scroll.prototype.getThreshold = function () {\n        /* Some browsers places the scroller outside the content,\n         * hence the padding should be adjusted.*/\n        var appName = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name;\n        if (appName === 'mozilla') {\n            return 0.5;\n        }\n        return 1;\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.onEmpty, this.wireEvents, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.contentReady, this.wireEvents, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.uiUpdate, this.onPropertyChanged, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.textWrapRefresh, this.wireEvents, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.headerRefreshed, this.setScrollLeft, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.onEmpty, this.wireEvents);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.contentReady, this.wireEvents);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.uiUpdate, this.onPropertyChanged);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.textWrapRefresh, this.wireEvents);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.headerRefreshed, this.setScrollLeft);\n        this.unwireEvents();\n    };\n    Scroll.prototype.unwireEvents = function () {\n        if (this.parent.frozenRows && this.header) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.header, 'touchstart pointerdown', this.setPageXY);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.header, 'touchmove pointermove', this.onTouchScroll);\n        }\n        var mScrollBar = this.parent.getContent() ? this.parent.getContent().querySelector('.e-movablescrollbar') : null;\n        if (this.parent.isFrozenGrid() && this.parent.enableColumnVirtualization) {\n            if (mScrollBar) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(mScrollBar, 'scroll', this.onCustomScrollbarScroll);\n            }\n            if (this.content) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.content, 'scroll', this.onCustomScrollbarScroll);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.content, 'touchstart pointerdown', this.setPageXY);\n                if (!(/macintosh|ipad/.test(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent.toLowerCase()) && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice)) {\n                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.content, 'touchmove pointermove', this.onTouchScroll);\n                }\n            }\n            if (this.header) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.header, 'scroll', this.onCustomScrollbarScroll);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.header, 'touchstart pointerdown', this.setPageXY);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.header, 'touchmove pointermove', this.onTouchScroll);\n            }\n        }\n        if (this.content) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.content, 'scroll', this.contentScrollHandler);\n        }\n        if (this.header) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.header, 'scroll', this.headerScrollHandler);\n        }\n        this.contentScrollHandler = null;\n        this.headerScrollHandler = null;\n        if (this.parent.aggregates.length && this.parent.getFooterContent()) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getFooterContent().firstChild, 'scroll', this.onContentScroll);\n        }\n    };\n    Scroll.prototype.setScrollLeft = function () {\n        this.parent.getHeaderContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent).scrollLeft = this.previousValues.left;\n    };\n    Scroll.prototype.onContentScroll = function (scrollTarget) {\n        var _this = this;\n        var element = scrollTarget;\n        var isHeader = element.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent);\n        return function (e) {\n            if (_this.content.querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody) === null || _this.parent.isPreventScrollEvent) {\n                return;\n            }\n            var target = e.target;\n            if (_this.parent.frozenRows) {\n                if (_this.content.scrollTop > 0 && _this.parent.frozenRows) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.parent.element], 'e-top-shadow');\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.parent.element], 'e-top-shadow');\n                }\n            }\n            if (_this.parent.element.querySelectorAll('.e-leftfreeze,.e-fixedfreeze,.e-rightfreeze').length) {\n                var errorFreeze = _this.parent.getContent().querySelectorAll('.e-freezeerror:not([style*=\"display: none\"])');\n                var errorFixed = _this.parent.getContent().querySelectorAll('.e-fixederror:not([style*=\"display: none\"])');\n                var scrollLeft = _this.parent.enableRtl ? Math.abs(target.scrollLeft) : target.scrollLeft;\n                var isStartOfScroll = scrollLeft <= 1;\n                if (!isStartOfScroll && _this.parent.getVisibleFrozenLeftCount()) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.parent.element], 'e-left-shadow');\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.parent.element], 'e-left-shadow');\n                }\n                var scrollRight = _this.parent.enableRtl ? Math.abs(target.scrollLeft) : target.scrollLeft;\n                var isEndOfScroll = Math.round(scrollRight + target.clientWidth) >= target.scrollWidth - 1;\n                if (isEndOfScroll && _this.parent.getVisibleFrozenRightCount()) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([_this.parent.element], 'e-right-shadow');\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([_this.parent.element], 'e-right-shadow');\n                }\n                var rows = [].slice.call(_this.parent.getContent().querySelectorAll('.e-row:not(.e-hiddenrow)'));\n                if (((rows.length === 1 && errorFreeze.length) ||\n                    (_this.parent.element.querySelector('.e-freeze-autofill:not([style*=\"display: none\"])')) ||\n                    errorFixed.length) && target.scrollLeft !== _this.previousValues.left) {\n                    target.scrollLeft = _this.previousValues.left;\n                    return;\n                }\n                if (rows.length !== 1 && (errorFreeze.length || errorFixed.length) && target.scrollTop !== _this.previousValues.top) {\n                    target.scrollTop = _this.previousValues.top;\n                    return;\n                }\n            }\n            var left = target.scrollLeft;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.parent.infiniteScrollModule) && _this.parent.enableInfiniteScrolling && (!_this.parent.isEdit\n                || (_this.parent.editSettings.showAddNewRow && !_this.parent.element.querySelector('.e-editedrow')))) {\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.infiniteScrollHandler, { target: e.target, isLeft: _this.previousValues.left !== left });\n            }\n            if (_this.parent.groupSettings.columns.length && _this.parent.groupSettings.enableLazyLoading) {\n                var isDown = _this.previousValues.top < _this.parent.getContent().firstElementChild.scrollTop;\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.lazyLoadScrollHandler, { scrollDown: isDown });\n            }\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.virtualScrollEdit, {});\n            var isFooter = target.classList.contains('e-summarycontent');\n            if (_this.previousValues.left === left) {\n                _this.previousValues.top = !isHeader ? _this.previousValues.top : target.scrollTop;\n                return;\n            }\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.closeFilterDialog, e);\n            element.scrollLeft = left;\n            if (isFooter) {\n                _this.header.scrollLeft = left;\n            }\n            _this.previousValues.left = left;\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.scroll, { left: left });\n        };\n    };\n    Scroll.prototype.onCustomScrollbarScroll = function (cont, hdr) {\n        var _this = this;\n        var content = cont;\n        var header = hdr;\n        return function (e) {\n            if (_this.content.querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody) === null) {\n                return;\n            }\n            var target = e.target;\n            var left = target.scrollLeft;\n            if (_this.previousValues.left === left) {\n                return;\n            }\n            content.scrollLeft = left;\n            header.scrollLeft = left;\n            _this.previousValues.left = left;\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.scroll, { left: left });\n            if (_this.parent.isDestroyed) {\n                return;\n            }\n        };\n    };\n    Scroll.prototype.onTouchScroll = function (scrollTarget) {\n        var _this = this;\n        var element = scrollTarget;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            var isFrozen = _this.parent.isFrozenGrid();\n            var pageXY = _this.getPointXY(e);\n            var left = element.scrollLeft + (_this.pageXY.x - pageXY.x);\n            var mHdr = _this.parent.getHeaderContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent);\n            var mCont = _this.parent.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content);\n            if (_this.previousValues.left === left || (left < 0 || (mHdr.scrollWidth - mHdr.clientWidth) < left)) {\n                return;\n            }\n            e.preventDefault();\n            mHdr.scrollLeft = left;\n            mCont.scrollLeft = left;\n            if (isFrozen && _this.parent.enableColumnVirtualization) {\n                var scrollBar = _this.parent.getContent().querySelector('.e-movablescrollbar');\n                scrollBar.scrollLeft = left;\n            }\n            _this.pageXY.x = pageXY.x;\n            _this.previousValues.left = left;\n        };\n    };\n    Scroll.prototype.setPageXY = function () {\n        var _this = this;\n        return function (e) {\n            if (e.pointerType === 'mouse') {\n                return;\n            }\n            _this.pageXY = _this.getPointXY(e);\n        };\n    };\n    Scroll.prototype.getPointXY = function (e) {\n        var pageXY = { x: 0, y: 0 };\n        if (e.touches && e.touches.length) {\n            pageXY.x = e.touches[0].pageX;\n            pageXY.y = e.touches[0].pageY;\n        }\n        else {\n            pageXY.x = e.pageX;\n            pageXY.y = e.pageY;\n        }\n        return pageXY;\n    };\n    Scroll.prototype.getScrollbleParent = function (node) {\n        if (node === null) {\n            return null;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parent = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(node.tagName) ? node.scrollingElement : node;\n        var overflowY = document.defaultView.getComputedStyle(parent, null).overflowY;\n        if (parent.scrollHeight > parent.clientHeight && overflowY !== 'hidden'\n            && overflowY !== 'visible' || node.tagName === 'HTML' || node.tagName === 'BODY') {\n            return node;\n        }\n        else {\n            return this.getScrollbleParent(node.parentNode);\n        }\n    };\n    /**\n     * @param {boolean} isAdd - specifies whether adding/removing the event\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.addStickyListener = function (isAdd) {\n        this.parentElement = this.getScrollbleParent(this.parent.element.parentElement);\n        if (isAdd && this.parentElement) {\n            this.eventElement = this.parentElement.tagName === 'HTML' || this.parentElement.tagName === 'BODY' ? document :\n                this.parentElement;\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.eventElement, 'scroll', this.makeStickyHeader, this);\n        }\n        else if (this.eventElement) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.eventElement, 'scroll', this.makeStickyHeader);\n            this.eventElement = null;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.resizeFrozenRowBorder = function () {\n        var div;\n        if (!this.parent.element.querySelector('.e-frozenrow-border')) {\n            div = this.parent.createElement('div', { className: 'e-frozenrow-border' });\n            this.parent.element.insertBefore(div, this.parent.element.querySelector('.e-gridcontent'));\n        }\n        else {\n            div = this.parent.element.querySelector('.e-frozenrow-border');\n        }\n        var scrollWidth = this.parent.height !== 'auto' ? Scroll.getScrollBarWidth() : 0;\n        div.style.width = (this.parent.element.offsetWidth - scrollWidth) - 0.5 + 'px';\n    };\n    Scroll.prototype.wireEvents = function () {\n        var _this = this;\n        if (this.oneTimeReady) {\n            var frzCols = this.parent.isFrozenGrid();\n            this.content = this.parent.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content);\n            this.header = this.parent.getHeaderContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent);\n            var mScrollBar = this.parent.getContent().querySelector('.e-movablescrollbar');\n            if (this.parent.frozenRows && this.header && this.content) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.header, 'touchstart pointerdown', this.setPageXY(), this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.header, 'touchmove pointermove', this.onTouchScroll(this.content), this);\n            }\n            if (frzCols && mScrollBar && this.parent.enableColumnVirtualization) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(mScrollBar, 'scroll', this.onCustomScrollbarScroll(this.content, this.header), this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.content, 'scroll', this.onCustomScrollbarScroll(mScrollBar, this.header), this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.header, 'scroll', this.onCustomScrollbarScroll(mScrollBar, this.content), this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.header, 'touchstart pointerdown', this.setPageXY(), this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.header, 'touchmove pointermove', this.onTouchScroll(this.content), this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.content, 'touchstart pointerdown', this.setPageXY(), this);\n                if (!(/macintosh|ipad/.test(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent.toLowerCase()) && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice)) {\n                    _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.content, 'touchmove pointermove', this.onTouchScroll(this.header), this);\n                }\n            }\n            this.contentScrollHandler = this.onContentScroll(this.header);\n            this.headerScrollHandler = this.onContentScroll(this.content);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.content, 'scroll', this.contentScrollHandler, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.header, 'scroll', this.headerScrollHandler, this);\n            if (this.parent.aggregates.length) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.getFooterContent().firstChild, 'scroll', this.onContentScroll(this.content), this);\n            }\n            if (this.parent.enableStickyHeader) {\n                this.addStickyListener(true);\n            }\n            this.refresh();\n            this.oneTimeReady = false;\n        }\n        var table = this.parent.getContentTable();\n        var sLeft;\n        var sHeight;\n        var clientHeight;\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.getUpdateUsingRaf)(function () {\n            sLeft = _this.header.scrollLeft;\n            sHeight = table.scrollHeight;\n            clientHeight = _this.parent.getContent().clientHeight;\n        }, function () {\n            var args = { cancel: false };\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.checkScrollReset, args);\n            if (sHeight < clientHeight && _this.parent.height !== 'auto') {\n                _this.setLastRowCell();\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.lastRowCellBorderUpdated, args);\n            }\n            if (_this.parent.frozenRows) {\n                _this.resizeFrozenRowBorder();\n            }\n            if (!_this.parent.enableVirtualization && !_this.parent.enableInfiniteScrolling) {\n                if (!args.cancel) {\n                    _this.header.scrollLeft = _this.previousValues.left;\n                    _this.content.scrollLeft = _this.previousValues.left;\n                    _this.content.scrollTop = _this.previousValues.top;\n                }\n            }\n            if (!_this.parent.enableColumnVirtualization) {\n                _this.content.scrollLeft = sLeft;\n                if (_this.parent.isFrozenGrid()) {\n                    _this.previousValues.left = sLeft;\n                }\n            }\n        });\n        this.parent.isPreventScrollEvent = false;\n    };\n    /**\n     * @returns {void} returns void\n     * @hidden\n     */\n    Scroll.prototype.setLastRowCell = function () {\n        var table = this.parent.getContentTable();\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(table.querySelectorAll('td'), 'e-lastrowcell');\n        if (table.querySelector('tr:nth-last-child(2)')) {\n            if (this.parent.editSettings.showAddNewRow && this.parent.editSettings.newRowPosition === 'Bottom') {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(table.querySelector('tr:nth-last-child(2)').querySelectorAll('td'), 'e-lastrowcell');\n            }\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(table.querySelectorAll('tr:last-child td'), 'e-lastrowcell');\n        if (this.parent.isSpan) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)(table.querySelectorAll('.e-row-span-lastrowcell'), 'e-lastrowcell');\n        }\n    };\n    /**\n     * @param {boolean} rtl - specifies the rtl\n     * @returns {ScrollCss} returns the ScrollCss\n     * @hidden\n     */\n    Scroll.prototype.getCssProperties = function (rtl) {\n        var css = {};\n        var enableRtl = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rtl) ? this.parent.enableRtl : rtl;\n        css.border = enableRtl ? 'borderLeftWidth' : 'borderRightWidth';\n        css.padding = enableRtl ? 'paddingLeft' : 'paddingRight';\n        return css;\n    };\n    Scroll.prototype.ensureOverflow = function (content) {\n        content.style.overflowY = this.parent.height === 'auto' ? 'auto' : 'scroll';\n    };\n    Scroll.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        this.setPadding();\n        this.oneTimeReady = true;\n        if (this.parent.height === 'auto') {\n            this.removePadding();\n        }\n        this.wireEvents();\n        this.setHeight();\n        var width = 'width';\n        this.setWidth(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.properties[\"\" + width]));\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.makeStickyHeader = function () {\n        if (this.parent.enableStickyHeader && this.parent.element && this.parent.getContent()) {\n            var contentRect = this.parent.getContent().getClientRects()[0];\n            if (contentRect) {\n                var windowScale = window.devicePixelRatio;\n                var headerEle = this.parent.getHeaderContent();\n                var toolbarEle = this.parent.element.querySelector('.e-toolbar');\n                var groupHeaderEle = this.parent.element.querySelector('.e-groupdroparea');\n                var height = headerEle.offsetHeight + (toolbarEle ? toolbarEle.offsetHeight : 0) +\n                    (groupHeaderEle ? groupHeaderEle.offsetHeight : 0);\n                var parentTop = this.parentElement.getClientRects()[0].top;\n                var top_1 = contentRect.top - (parentTop < 0 ? 0 : parentTop);\n                var left = contentRect.left;\n                var colMenuEle = document.body.querySelector('#' + this.parent.element.id + '_columnmenu');\n                if (windowScale !== 1) {\n                    top_1 = Math.ceil(top_1);\n                }\n                if (top_1 < height && contentRect.bottom > 0) {\n                    headerEle.classList.add('e-sticky');\n                    var elemTop = 0;\n                    if (groupHeaderEle && this.parent.groupSettings.showDropArea) {\n                        this.setSticky(groupHeaderEle, elemTop, contentRect.width, left, true);\n                        elemTop += groupHeaderEle.getClientRects()[0].height;\n                    }\n                    if (toolbarEle) {\n                        this.setSticky(toolbarEle, elemTop, contentRect.width, left, true);\n                        elemTop += toolbarEle.getClientRects()[0].height;\n                    }\n                    this.setSticky(headerEle, elemTop, contentRect.width, left, true);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(colMenuEle)) {\n                        colMenuEle.style.position = 'fixed';\n                        colMenuEle.style.top = height + 'px';\n                    }\n                }\n                else {\n                    if (headerEle.classList.contains('e-sticky')) {\n                        this.setSticky(headerEle, null, null, null, false);\n                        if (toolbarEle) {\n                            this.setSticky(toolbarEle, null, null, null, false);\n                        }\n                        if (groupHeaderEle) {\n                            this.setSticky(groupHeaderEle, null, null, null, false);\n                        }\n                        var ccDlg = this.parent.element.querySelector('.e-ccdlg');\n                        if (ccDlg) {\n                            ccDlg.classList.remove('e-sticky');\n                        }\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(colMenuEle)) {\n                            colMenuEle.style.position = 'absolute';\n                            var topStyle = contentRect.top - parentTop;\n                            colMenuEle.style.top = topStyle + 'px';\n                        }\n                    }\n                }\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.stickyScrollComplete, {});\n            }\n        }\n    };\n    Scroll.prototype.setSticky = function (ele, top, width, left, isAdd) {\n        if (isAdd) {\n            ele.classList.add('e-sticky');\n        }\n        else {\n            ele.classList.remove('e-sticky');\n        }\n        ele.style.width = width != null ? width + 'px' : '';\n        ele.style.top = top != null ? top + 'px' : '';\n        ele.style.left = left !== null ? parseInt(ele.style.left, 10) !== left ? left + 'px' : ele.style.left : '';\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Scroll.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridHeader) && !gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridContent))) {\n            return;\n        }\n        this.removeEventListener();\n        //Remove Dom event\n        var cont = this.parent.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(cont, 'scroll', this.onContentScroll);\n        if (this.parent.enableStickyHeader) {\n            this.addStickyListener(false);\n        }\n        //Remove padding\n        this.removePadding();\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.parent.getHeaderContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent)], _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([cont], _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content);\n        //Remove height\n        cont.style.height = '';\n        //Remove width\n        this.parent.element.style.width = '';\n    };\n    /**\n     * Function to get the scrollbar width of the browser.\n     *\n     * @returns {number} return the width\n     * @hidden\n     */\n    Scroll.getScrollBarWidth = function () {\n        return (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.getScrollBarWidth)();\n    };\n    return Scroll;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/scroll.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/search.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/search.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Search: () => (/* binding */ Search)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n\n\n\n/**\n * The `Search` module is used to handle search action.\n */\nvar Search = /** @class */ (function () {\n    /**\n     * Constructor for Grid search module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @hidden\n     */\n    function Search(parent) {\n        //Internal variables\n        /** @hidden */\n        this.headerFocus = false;\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * Checks if the input string contains non-numeric characters.\n     *\n     * @param {string} searchString - The string to be checked for non-numeric characters.\n     * @returns {boolean} - `true` if the input string contains non-numeric characters, `false` otherwise.\n     */\n    Search.prototype.hasNonNumericCharacters = function (searchString) {\n        var decimalFound = false;\n        for (var _i = 0, searchString_1 = searchString; _i < searchString_1.length; _i++) {\n            var char = searchString_1[_i];\n            if ((char < '0' || char > '9') && char !== '.') {\n                return true;\n            }\n            if (char === '.') {\n                if (decimalFound) {\n                    // If decimal is found more than once, it's not valid\n                    return true;\n                }\n                decimalFound = true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Searches Grid records by given key.\n     *\n     * > You can customize the default search action by using [`searchSettings`](./searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    Search.prototype.search = function (searchString) {\n        var gObj = this.parent;\n        searchString = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(searchString) ? '' : searchString;\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.isActionPrevent)(gObj)) {\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.preventBatch, { instance: this, handler: this.search, arg1: searchString });\n            return;\n        }\n        if (searchString !== gObj.searchSettings.key) {\n            this.headerFocus = false;\n            // Check searchString is number and parseFloat to remove trailing zeros\n            if (searchString !== '' && !this.hasNonNumericCharacters(searchString)) {\n                var parts = searchString.split('.');\n                if (searchString === '.' || (searchString.indexOf('.') === -1) || (parts[0].startsWith('0') && parts[0].length > 1)) {\n                    gObj.searchSettings.key = searchString.toString();\n                }\n                else {\n                    gObj.searchSettings.key = parseFloat(searchString).toString();\n                }\n            }\n            else {\n                gObj.searchSettings.key = searchString.toString();\n            }\n            gObj.dataBind();\n        }\n        else if (this.refreshSearch) {\n            gObj.refresh();\n        }\n        else {\n            this.headerFocus = false;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.inBoundModelChanged, this.onPropertyChanged, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.searchComplete, this.onSearchComplete, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.destroy, this.destroy, this);\n        this.actionCompleteFunc = this.onActionComplete.bind(this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionComplete, this.actionCompleteFunc);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.cancelBegin, this.cancelBeginEvent, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_2__.inBoundModelChanged, this.onPropertyChanged);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_2__.searchComplete, this.onSearchComplete);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_2__.destroy, this.destroy);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionComplete, this.actionCompleteFunc);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_2__.cancelBegin, this.cancelBeginEvent);\n    };\n    /**\n     * To destroy the print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {NotifyArgs} e - specfies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.properties.key)) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.modelChanged, {\n                requestType: 'searching', type: _base_constant__WEBPACK_IMPORTED_MODULE_2__.actionBegin, searchString: this.parent.searchSettings.key\n            });\n        }\n        else {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.modelChanged, {\n                requestType: 'searching', type: _base_constant__WEBPACK_IMPORTED_MODULE_2__.actionBegin\n            });\n        }\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onSearchComplete = function (e) {\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionComplete, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(e, {\n            searchString: this.parent.searchSettings.key, requestType: 'searching', type: _base_constant__WEBPACK_IMPORTED_MODULE_2__.actionComplete\n        }));\n    };\n    /**\n     * The function used to store the requestType\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     * @hidden\n     */\n    Search.prototype.onActionComplete = function (e) {\n        if (this.refreshSearch && e.requestType === 'refresh' && this.headerFocus) {\n            this.headerFocus = false;\n            this.parent.focusModule.focus();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.parent.focusModule.currentInfo.element], ['e-focused']);\n        }\n        this.refreshSearch = e.requestType !== 'searching';\n    };\n    Search.prototype.cancelBeginEvent = function (e) {\n        if (e.requestType === 'searching') {\n            this.parent.setProperties({ searchSettings: { key: '' } }, true);\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Search.prototype.getModuleName = function () {\n        return 'search';\n    };\n    return Search;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Selection: () => (/* binding */ Selection)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/manager.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for the Grid selection module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {SelectionSettings} selectionSettings - specifies the selectionsettings\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function Selection(parent, selectionSettings, locator) {\n        //Internal letiables\n        /**\n         * @hidden\n         */\n        this.selectedRowIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRowCellIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRecords = [];\n        /**\n         * @hidden\n         */\n        this.preventFocus = false;\n        /**\n         *  @hidden\n         */\n        this.selectedColumnsIndexes = [];\n        this.checkBoxState = false;\n        this.isMultiShiftRequest = false;\n        this.isMultiCtrlRequest = false;\n        this.isMultiCtrlRequestCell = false;\n        this.enableSelectMultiTouch = false;\n        this.clearRowCheck = false;\n        this.selectRowCheck = false;\n        /**\n         * @hidden\n         */\n        this.selectedRowState = {};\n        this.unSelectedRowState = {};\n        this.totalRecordsCount = 0;\n        this.chkAllCollec = [];\n        this.isCheckedOnAdd = false;\n        this.persistSelectedData = [];\n        this.virtualSelectedData = [];\n        this.deSelectedData = [];\n        this.isHdrSelectAllClicked = false;\n        this.needColumnSelection = false;\n        this.isCancelDeSelect = false;\n        this.isPreventCellSelect = false;\n        this.disableUI = false;\n        this.isPersisted = false;\n        this.cmdKeyPressed = false;\n        this.cellselected = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n        this.initialRowSelection = false;\n        this.isPrevRowSelection = false;\n        this.isKeyAction = false;\n        this.isRowDragSelected = false;\n        this.isPartialSelection = false;\n        this.rmtHdrChkbxClicked = false;\n        this.isCheckboxReset = false;\n        this.isRowDeselect = false;\n        /**\n         * @hidden\n         */\n        this.autoFillRLselection = true;\n        this.isFocusLastCell = false;\n        this.bottom = '0 0 2px 0';\n        this.top = '2px 0 0 0';\n        /* eslint-disable */\n        this.right_bottom = '0 2px 2px 0';\n        this.bottom_left = '0 0 2px 2px';\n        this.top_right = '2px 2px 0 0';\n        this.top_left = '2px 0 0 2px';\n        this.top_bottom = '2px 0 2px 0';\n        this.top_right_bottom = '2px 2px 2px 0';\n        this.top_bottom_left = '2px 0 2px 2px';\n        this.top_right_left = '2px 2px 0 2px';\n        this.right_bottom_left = '0 2px 2px 2px';\n        this.all_border = '2px';\n        this.parent = parent;\n        this.selectionSettings = selectionSettings;\n        this.factory = locator.getService('rendererFactory');\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.wireEvents();\n    }\n    Selection.prototype.initializeSelection = function () {\n        this.parent.log('selection_key_missing');\n        this.render();\n    };\n    /**\n     * The function used to trigger onActionBegin\n     *\n     * @param {Object} args - specifies the args\n     * @param {string} type - specifies the type\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.onActionBegin = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n    };\n    Selection.prototype.fDataUpdate = function (args) {\n        if (!this.isMultiSelection && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.cellIndex) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.rowIndex))) {\n            var rowObj = this.getRowObj((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.rowIndex) ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.cellIndex) ?\n                this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n            args.foreignKeyData = rowObj.foreignKeyData;\n        }\n        return args;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {Object} args - specifies the args\n     * @param {string} type - specifies the type\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.onActionComplete = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n        this.isMultiSelection = false;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    /**\n     * To destroy the selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.gridHeader) && !gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.gridContent))) {\n            return;\n        }\n        this.hidePopUp();\n        this.clearSelection();\n        this.destroyAutoFillElements();\n        this.removeEventListener();\n        this.unWireEvents();\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n    };\n    Selection.prototype.isEditing = function () {\n        return (this.parent.editSettings.mode === 'Normal' || (this.parent.editSettings.mode === 'Batch' && this.parent.editModule &&\n            this.parent.editModule.formObj && !this.parent.editModule.formObj.validate())) &&\n            (this.parent.isEdit && !this.parent.editSettings.showAddNewRow) && !this.parent.isPersistSelection;\n    };\n    Selection.prototype.getCurrentBatchRecordChanges = function () {\n        var gObj = this.parent;\n        if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n            var currentRecords = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.iterateExtend)(this.parent.getCurrentViewRecords());\n            currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ?\n                currentRecords.concat(this.parent.editModule.getBatchChanges()[_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.addedRecords]) :\n                this.parent.editModule.getBatchChanges()[_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.addedRecords].concat(currentRecords);\n            var deletedRecords = this.parent.editModule.getBatchChanges()[_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.deletedRecords];\n            var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < (deletedRecords.length); i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (deletedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey] === currentRecords[parseInt(j.toString(), 10)][\"\" + primaryKey]) {\n                        currentRecords.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n            return currentRecords;\n        }\n        else if (this.parent.enableVirtualization && this.parent.groupSettings.columns.length && !this.parent.isPersistSelection) {\n            var selectedGroupedData = gObj.getCurrentViewRecords().filter(function (col) { return col['key'] === undefined; });\n            return selectedGroupedData;\n        }\n        else {\n            return gObj.getCurrentViewRecords();\n        }\n    };\n    /**\n     * Selects a row by the given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Selection.prototype.selectRow = function (index, isToggle) {\n        if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n            this.addRowsToSelection([index]);\n            return;\n        }\n        var gObj = this.parent;\n        var selectedRow = gObj.getRowByIndex(index);\n        var rowObj = selectedRow && gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid'));\n        if (this.isPartialSelection && rowObj && rowObj.isDataRow && !rowObj.isSelectable) {\n            return;\n        }\n        var selectData;\n        var isRemoved = false;\n        if (gObj.enableVirtualization && index > -1) {\n            var e = { selectedIndex: index, isAvailable: true };\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.selectVirtualRow, e);\n            if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')))) {\n                selectData = gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n            }\n            else {\n                if (e.isAvailable && !gObj.selectionSettings.persistSelection) {\n                    var prevSelectedData = this.parent.getSelectedRecords();\n                    if (prevSelectedData.length > 0) {\n                        this.clearRowSelection();\n                    }\n                }\n                return;\n            }\n        }\n        else {\n            selectData = this.getRowObj(index).data;\n        }\n        if (!this.isRowType() || !selectedRow || this.isEditing()) {\n            // if (this.isEditing()) {\n            //     gObj.selectedRowIndex = index;\n            // }\n            return;\n        }\n        var isRowSelected = selectedRow.hasAttribute('aria-selected');\n        this.activeTarget();\n        if (!isToggle || !this.selectedRowIndexes.length) {\n            isToggle = false;\n        }\n        else {\n            var isCheckboxModeResetOnRowClick = this.selectionSettings.checkboxMode === 'ResetOnRowClick';\n            var isSelectionTypeMultiple = !this.parent.isCheckBoxSelection && this.selectionSettings.type === 'Multiple';\n            if ((!isCheckboxModeResetOnRowClick && !isSelectionTypeMultiple) ||\n                (this.selectedRowIndexes.length === 1 && (isCheckboxModeResetOnRowClick || isSelectionTypeMultiple))) {\n                isToggle = !(this.isKeyAction && this.parent.isCheckBoxSelection) ? this.selectedRowIndexes.indexOf(index) !== -1 : false;\n            }\n            else {\n                isToggle = false;\n            }\n        }\n        this.isKeyAction = false;\n        var args;\n        var can = 'cancel';\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                isShiftPressed: this.isMultiShiftRequest, row: selectedRow,\n                previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, cancel: false, isInteracted: this.isInteracted,\n                isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n        }\n        else {\n            if (this.selectionSettings.checkboxMode !== 'ResetOnRowClick' && this.selectionSettings.persistSelection) {\n                this.rowDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDeselecting, [rowObj.index], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], this.actualTarget);\n                if (this.isCancelDeSelect) {\n                    return;\n                }\n                if (!this.parent.isCheckBoxSelection) {\n                    this.selectedRowIndexes = [];\n                    this.selectedRecords = [];\n                    this.isRowSelected = false;\n                    this.selectRowIndex(-1);\n                }\n                this.rowDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDeselected, [rowObj.index], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], this.actualTarget, undefined, undefined, undefined);\n            }\n            this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n        }\n    };\n    Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n        var _this = this;\n        return function (args) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args) && args[\"\" + can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.index = index;\n            _this.toggle = isToggle;\n            _this.data = selectData;\n            _this.removed = isRemoved;\n            if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n                _this.clearSelectedRow(index);\n                _this.selectRowCallBack();\n            }\n            else if (!isRowSelected && _this.selectionSettings.persistSelection && _this.parent.isCheckBoxSelection &&\n                _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                _this.selectRowCallBack();\n            }\n            if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n                _this.isCheckboxReset = true;\n                _this.clearSelection();\n            }\n            if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' ||\n                (!_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection)) {\n                _this.selectRowCheck = true;\n                _this.clearRow();\n            }\n        };\n    };\n    Selection.prototype.selectRowCallBack = function () {\n        var gObj = this.parent;\n        var args;\n        var index = this.index;\n        var isToggle = this.toggle;\n        var selectData = this.data;\n        var isRemoved = this.removed;\n        var selectedRow = gObj.getRowByIndex(index);\n        if (!isToggle && !isRemoved) {\n            if (this.selectedRowIndexes.indexOf(index) <= -1) {\n                this.updateRowSelection(selectedRow, index);\n            }\n            this.selectRowIndex(index);\n        }\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index,\n                row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, isInteracted: this.isInteracted,\n                isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked, rowIndexes: index\n            };\n            this.onActionComplete(args, _base_constant__WEBPACK_IMPORTED_MODULE_3__.rowSelected);\n        }\n        this.isInteracted = false;\n        this.updateRowProps(index);\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @returns {void}\n     */\n    Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n        this.selectRowIndex(endIndex);\n    };\n    Selection.prototype.selectedDataUpdate = function (selectedData, foreignKeyData, selectedRows, rowIndexes, selectableRowIndex) {\n        for (var i = 0, len = rowIndexes.length; i < len; i++) {\n            var currentRow = this.parent.getDataRows()[rowIndexes[parseInt(i.toString(), 10)]];\n            if (this.parent.enableVirtualization) {\n                currentRow = this.parent.getRowByIndex(rowIndexes[parseInt(i.toString(), 10)]);\n            }\n            var rowObj = this.getRowObj(currentRow);\n            if (rowObj && rowObj.isDataRow && rowObj.isSelectable) {\n                selectedData.push(rowObj.data);\n                selectedRows.push(currentRow);\n                foreignKeyData.push(rowObj.foreignKeyData);\n            }\n            else {\n                if (this.isPartialSelection && selectableRowIndex) {\n                    selectableRowIndex.splice(selectableRowIndex.indexOf(rowIndexes[parseInt(i.toString(), 10)]), 1);\n                }\n            }\n        }\n    };\n    /**\n     * Selects a collection of rows by index.\n     *\n     * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n     * @returns {void}\n     */\n    Selection.prototype.selectRows = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var selectableRowIndex = rowIndexes.slice();\n        var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var can = 'cancel';\n        var selectedData = [];\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, rowIndexes, selectableRowIndex);\n        this.activeTarget();\n        var args = {\n            cancel: false,\n            rowIndexes: selectableRowIndex, row: selectedRows, rowIndex: rowIndex, target: this.actualTarget,\n            prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n            isInteracted: this.isInteracted, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n        };\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowSelecting, this.fDataUpdate(args), function (args) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args) && args[\"\" + can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            if (!(_this.selectionSettings.persistSelection && gObj.allowRowDragAndDrop && _this.isDragged)) {\n                _this.clearRow();\n            }\n            _this.selectRowIndex(selectableRowIndex.slice(-1)[0]);\n            var selectRowFn = function (index, preventFocus) {\n                _this.updateRowSelection(gObj.getRowByIndex(index), index, preventFocus);\n                _this.updateRowProps(rowIndex);\n            };\n            if (!_this.isSingleSel()) {\n                for (var _i = 0, selectableRowIndex_1 = selectableRowIndex; _i < selectableRowIndex_1.length; _i++) {\n                    var rowIdx = selectableRowIndex_1[_i];\n                    selectRowFn(rowIdx, gObj.enableVirtualization ? true : false);\n                }\n            }\n            else {\n                selectRowFn(rowIndex);\n            }\n            if (_this.checkVirtualCheckBox() && !_this.parent.isPersistSelection) {\n                if (selectableRowIndex.length === _this.totalRecordsCount) {\n                    _this.virtualSelectedData = _this.virtualCheckBoxData().slice();\n                    _this.selectedRowIndexes = Object.keys(_this.virtualSelectedData).map(function (key) { return parseInt(key, 10); });\n                    _this.setCheckAllState();\n                }\n                else {\n                    var selectionData = selectableRowIndex.filter(function (index) {\n                        return _this.selectedRowIndexes.indexOf(index) === -1;\n                    });\n                    if (selectionData.length > 0) {\n                        var allData = _this.virtualCheckBoxData().slice();\n                        for (var i = 0; i < selectionData.length; i++) {\n                            var record = allData[selectionData[i]];\n                            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(record)) {\n                                _this.virtualSelectedData.push(record);\n                                _this.selectedRowIndexes.push(selectionData[i]);\n                            }\n                        }\n                        _this.setCheckAllState();\n                    }\n                }\n            }\n            args = {\n                rowIndexes: selectableRowIndex, row: selectedRows, rowIndex: rowIndex, target: _this.actualTarget,\n                prevRow: gObj.getRows()[_this.prevRowIndex], previousRowIndex: _this.prevRowIndex,\n                data: _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n            if (_this.isRowSelected) {\n                _this.onActionComplete(args, _base_constant__WEBPACK_IMPORTED_MODULE_3__.rowSelected);\n            }\n            _this.isInteracted = false;\n        });\n    };\n    /**\n     * Select rows with existing row selection by passing row indexes.\n     *\n     * @param {number} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addRowsToSelection = function (rowIndexes) {\n        var gObj = this.parent;\n        var can = 'cancel';\n        var target = this.target;\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var selectedData = [];\n        var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n        var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) :\n            gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n        if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n            return;\n        }\n        var args;\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (this.isMultiCtrlRequest && !checkboxColumn.length) {\n            this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, indexes);\n        }\n        for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n            var rowIndex = rowIndexes_1[_i];\n            var rowObj = this.getRowObj(rowIndex);\n            var isUnSelected = this.selectedRowIndexes.indexOf(rowIndex) > -1;\n            if (this.isPartialSelection && rowObj && rowObj.isDataRow && !rowObj.isSelectable) {\n                continue;\n            }\n            this.selectRowIndex(rowIndex);\n            if (isUnSelected && ((checkboxColumn.length ? true : this.selectionSettings.enableToggle) || this.isMultiCtrlRequest)) {\n                this.isAddRowsToSelection = true;\n                this.rowDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n                if (this.isCancelDeSelect) {\n                    return;\n                }\n                if (this.checkVirtualCheckBox() && !this.parent.isPersistSelection) {\n                    this.virtualSelectedData.splice(this.virtualSelectedData.indexOf(rowObj.data), 1);\n                }\n                this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(rowIndex), 1);\n                this.selectedRecords.splice(this.selectedRecords.indexOf(selectedRow), 1);\n                this.selectRowIndex(this.selectedRowIndexes.length ? this.selectedRowIndexes[this.selectedRowIndexes.length - 1] : -1);\n                selectedRow.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n                this.rowDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, undefined, undefined, undefined);\n                this.isInteracted = false;\n                this.isMultiSelection = false;\n                this.isAddRowsToSelection = false;\n                this.isHdrSelectAllClicked = false;\n            }\n            else {\n                this.activeTarget();\n                args = {\n                    cancel: false,\n                    data: selectedData.length ? selectedData : rowObj.data, rowIndex: rowIndex, row: selectedRows.length ? selectedRows :\n                        selectedRow, target: this.actualTarget, prevRow: gObj.getRows()[this.prevRowIndex],\n                    previousRowIndex: this.prevRowIndex, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                    foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData, isInteracted: this.isInteracted,\n                    isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                };\n                this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowSelecting, this.fDataUpdate(args));\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args) && args[\"\" + can] === true) {\n                    this.disableInteracted();\n                    return;\n                }\n                if (this.isSingleSel()) {\n                    this.clearRow();\n                }\n                this.updateRowSelection(selectedRow, rowIndex);\n            }\n            if (!isUnSelected) {\n                args = {\n                    data: selectedData.length ? selectedData : rowObj.data, rowIndex: rowIndex, row: selectedRows.length ? selectedRows :\n                        selectedRow, target: this.actualTarget, prevRow: gObj.getRows()[this.prevRowIndex],\n                    previousRowIndex: this.prevRowIndex, foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData,\n                    isInteracted: this.isInteracted, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                };\n                this.onActionComplete(args, _base_constant__WEBPACK_IMPORTED_MODULE_3__.rowSelected);\n            }\n            this.isInteracted = false;\n            this.updateRowProps(rowIndex);\n            if (this.isSingleSel()) {\n                break;\n            }\n        }\n    };\n    Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n        var indexes = [];\n        // eslint-disable-next-line prefer-const\n        var _a = (startIndex <= endIndex) ?\n            { i: startIndex, max: endIndex } : { i: endIndex, max: startIndex }, i = _a.i, max = _a.max;\n        for (; i <= max; i++) {\n            indexes.push(i);\n        }\n        if (startIndex > endIndex) {\n            indexes.reverse();\n        }\n        return indexes;\n    };\n    Selection.prototype.clearRow = function () {\n        this.clearRowCheck = true;\n        this.clearRowSelection();\n    };\n    Selection.prototype.clearRowCallBack = function () {\n        if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n            return;\n        }\n        this.selectedRowIndexes = [];\n        this.selectedRecords = [];\n        this.selectRowIndex(-1);\n        if (this.isSingleSel() && this.parent.isPersistSelection) {\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.clearSelectedRow = function (index) {\n        if (this.toggle) {\n            var selectedEle = this.parent.getRowByIndex(index);\n            if (!this.disableUI) {\n                selectedEle.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n            }\n            this.removed = true;\n            this.updatePersistCollection(selectedEle, false);\n            this.updateCheckBoxes(selectedEle);\n            this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n            this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n        }\n    };\n    Selection.prototype.updateRowProps = function (startIndex) {\n        this.prevRowIndex = startIndex;\n        this.isRowSelected = this.selectedRowIndexes.length && true;\n    };\n    Selection.prototype.getPkValue = function (pkField, data) {\n        return pkField ? (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.isComplexField)(pkField) ? (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getObject)(pkField, data) : data[\"\" + pkField] : data[\"\" + pkField];\n    };\n    Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n        var _this = this;\n        if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection &&\n            this.parent.getPrimaryKeyFieldNames().length > 0) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedRow)) {\n            if (!this.parent.isPersistSelection) {\n                this.ensureCheckboxFieldSelection();\n            }\n            var rowObj = this.getRowObj(selectedRow);\n            var pKey_1 = rowObj.data ? this.getPkValue(this.primaryKey, rowObj.data) : null;\n            if (pKey_1 === null) {\n                return;\n            }\n            rowObj.isSelected = chkState;\n            if ((chkState && !this.isPartialSelection) || (this.isPartialSelection && rowObj.isSelectable && rowObj.isSelected)) {\n                this.selectedRowState[\"\" + pKey_1] = chkState;\n                delete (this.unSelectedRowState[\"\" + pKey_1]);\n                if (!this.persistSelectedData.some(function (data) { return _this.getPkValue(_this.primaryKey, data) === pKey_1; })) {\n                    this.persistSelectedData.push(rowObj.data);\n                }\n            }\n            else {\n                this.updatePersistDelete(pKey_1);\n            }\n        }\n    };\n    Selection.prototype.updatePersistDelete = function (pKey, isPartialSelection) {\n        var _this = this;\n        delete (this.selectedRowState[\"\" + pKey]);\n        if (this.rmtHdrChkbxClicked) {\n            this.unSelectedRowState[\"\" + pKey] = true;\n        }\n        var index;\n        var isPresent = this.persistSelectedData.some(function (data, i) {\n            index = i;\n            return _this.getPkValue(_this.primaryKey, data) === pKey;\n        });\n        if (isPresent) {\n            this.persistSelectedData.splice(index, 1);\n            if (isPartialSelection) {\n                this.parent.partialSelectedRecords.splice(index, 1);\n            }\n        }\n    };\n    Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row)) {\n            var chkBox = row.querySelector('.e-checkselect');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(chkBox)) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.removeAddCboxClasses)(chkBox.nextElementSibling, chkState);\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setChecked)(chkBox, chkState);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.checkedTarget) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.checkedTarget)\n                    && !this.checkedTarget.classList.contains('e-checkselectall'))) {\n                    this.setCheckAllState(rowIndex);\n                }\n            }\n        }\n    };\n    Selection.prototype.updateRowSelection = function (selectedRow, startIndex, preventFocus) {\n        if (!selectedRow) {\n            return;\n        }\n        if (this.selectedRowIndexes.indexOf(startIndex) === -1) {\n            if (this.checkVirtualCheckBox() && !this.parent.isPersistSelection) {\n                this.virtualSelectedData.push(this.parent.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data);\n            }\n            this.selectedRowIndexes.push(startIndex);\n            this.selectedRecords.push(selectedRow);\n        }\n        selectedRow.setAttribute('aria-selected', 'true');\n        this.updatePersistCollection(selectedRow, true);\n        this.updateCheckBoxes(selectedRow, true);\n        this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n        if (!this.preventFocus && !(this.parent.isFocusFirstCell || this.isFocusLastCell)) {\n            var target = this.focus.getPrevIndexes().cellIndex ?\n                selectedRow.cells[this.focus.getPrevIndexes().cellIndex] :\n                selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n            if (this.parent.contextMenuModule && this.mouseButton === 2) {\n                target = this.parent.contextMenuModule.cell;\n            }\n            if (!target || preventFocus) {\n                return;\n            }\n            this.focus.onClick({ target: target }, true);\n        }\n        else {\n            if (this.parent.isFocusFirstCell || this.isFocusLastCell) {\n                this.parent.isFocusFirstCell = false;\n                var selector = this.isFocusLastCell ? 'last-child' : 'first-child';\n                var target = selectedRow.querySelector('.e-selectionbackground.e-rowcell:not(.e-hide, .e-detailrowcollapse, .e-detailrowexpand, .e-rowdragdrop, .e-gridchkbox):' + selector);\n                this.isFocusLastCell = false;\n                if (target) {\n                    this.focus.onClick({ target: target }, true, true);\n                }\n            }\n        }\n    };\n    /**\n     * Deselects the currently selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearSelection = function () {\n        this.checkSelectAllClicked = true;\n        if (this.selectionSettings.persistSelection && this.persistSelectedData.length) {\n            this.deSelectedData = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.iterateExtend)(this.persistSelectedData);\n        }\n        if (!this.parent.isPersistSelection || (this.parent.isPersistSelection && !this.parent.isEdit) ||\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall'))) {\n            var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n            if (span.classList.contains('e-rowselect')) {\n                span.classList.remove('e-spanclicked');\n            }\n            if (this.parent.isPersistSelection) {\n                this.persistSelectedData = [];\n                this.selectedRowState = {};\n                this.parent.partialSelectedRecords = [];\n                this.parent.disableSelectedRecords = [];\n                var rowObjects = this.parent.getRowsObject();\n                for (var i = 0; i < rowObjects.length; i++) {\n                    if (rowObjects[i].isDataRow) {\n                        if (rowObjects[i].isSelectable) {\n                            this.parent.partialSelectedRecords.push(rowObjects[i].data);\n                        }\n                        else {\n                            this.parent.disableSelectedRecords.push(rowObjects[i].data);\n                        }\n                    }\n                }\n            }\n            this.clearRowSelection();\n            this.clearCellSelection();\n            this.clearColumnSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n            this.enableSelectMultiTouch = false;\n            this.isInteracted = false;\n            this.checkSelectAllClicked = false;\n            this.isHdrSelectAllClicked = false;\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearRowSelection = function () {\n        var _this = this;\n        if (this.isRowSelected) {\n            var rows_1 = this.parent.getDataRows();\n            var data_1 = [];\n            var row_1 = [];\n            var rowIndex_1 = [];\n            var foreignKeyData_1 = [];\n            var target_1 = this.target;\n            this.isRowDeselect = true;\n            for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n                var currentRow = void 0;\n                if (this.parent.enableVirtualization || (this.parent.enableInfiniteScrolling\n                    && this.parent.infiniteScrollSettings.enableCache)) {\n                    currentRow = this.parent.getRowByIndex(this.selectedRowIndexes[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    currentRow = this.parent.editSettings.mode === 'Batch' ?\n                        this.parent.getRows()[this.selectedRowIndexes[parseInt(i.toString(), 10)]]\n                        : this.parent.getDataRows()[this.selectedRowIndexes[parseInt(i.toString(), 10)]];\n                }\n                var rowObj = this.getRowObj(currentRow);\n                if (rowObj) {\n                    data_1.push(rowObj.data);\n                    row_1.push(currentRow);\n                    rowIndex_1.push(this.selectedRowIndexes[parseInt(i.toString(), 10)]);\n                    foreignKeyData_1.push(rowObj.foreignKeyData);\n                }\n            }\n            if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                this.isRowClicked = this.checkSelectAllClicked ? true : false;\n            }\n            this.rowDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, null, function () {\n                if (_this.isCancelDeSelect && (_this.isRowClicked || _this.checkSelectAllClicked || (_this.isInteracted &&\n                    !_this.parent.isPersistSelection))) {\n                    if (_this.parent.isPersistSelection) {\n                        if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate' || _this.parent.isPersistSelection) {\n                            for (var i = 0; i < _this.selectedRecords.length; i++) {\n                                _this.updatePersistCollection(_this.selectedRecords[parseInt(i.toString(), 10)], true);\n                            }\n                        }\n                        else {\n                            _this.parent.checkAllRows = 'Check';\n                            _this.updatePersistSelectedData(true);\n                        }\n                    }\n                    if (_this.clearRowCheck) {\n                        _this.clearRowCallBack();\n                        _this.clearRowCheck = false;\n                        if (_this.selectRowCheck) {\n                            _this.selectRowCallBack();\n                            _this.selectRowCheck = false;\n                        }\n                    }\n                    return;\n                }\n                var element = [].slice.call(rows_1.filter(function (record) { return record.hasAttribute('aria-selected'); }));\n                for (var j = 0; j < element.length; j++) {\n                    if (!_this.disableUI) {\n                        element[parseInt(j.toString(), 10)].removeAttribute('aria-selected');\n                        _this.addRemoveClassesForRow(element[parseInt(j.toString(), 10)], false, true, 'e-selectionbackground', 'e-active');\n                    }\n                    // tslint:disable-next-line:align\n                    if (!_this.isPrevRowSelection) {\n                        _this.updatePersistCollection(element[parseInt(j.toString(), 10)], false);\n                    }\n                    _this.updateCheckBoxes(element[parseInt(j.toString(), 10)]);\n                }\n                if ((_this.parent.enableVirtualization || (_this.parent.enableInfiniteScrolling\n                    && _this.parent.infiniteScrollSettings.enableCache)) && _this.selectedRecords.length && !element.length\n                    && !_this.parent.selectionSettings.persistSelection && !_this.disableUI\n                    && !_this.parent.isCheckBoxSelection) {\n                    _this.addRemoveClassesForRow(null, false, true);\n                }\n                _this.virtualSelectedData = [];\n                _this.selectedRowIndexes = [];\n                _this.selectedRecords = [];\n                _this.isRowSelected = false;\n                _this.selectRowIndex(-1);\n                _this.isPrevRowSelection = false;\n                _this.rowDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, null, undefined, null);\n                if (_this.clearRowCheck) {\n                    _this.clearRowCallBack();\n                    _this.clearRowCheck = false;\n                    if (_this.selectRowCheck) {\n                        _this.selectRowCallBack();\n                        _this.selectRowCheck = false;\n                    }\n                }\n            }, null);\n            this.isRowDeselect = false;\n        }\n        else {\n            if (this.clearRowCheck) {\n                this.clearRowCallBack();\n                this.clearRowCheck = false;\n                if (this.selectRowCheck) {\n                    this.selectRowCallBack();\n                    this.selectRowCheck = false;\n                }\n            }\n        }\n    };\n    Selection.prototype.rowDeselect = function (type, rowIndex, data, row, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n        var _this = this;\n        if ((this.selectionSettings.persistSelection && (this.isRowClicked || !this.isRowDeselect || this.checkSelectAllClicked || (this.focus['activeKey'] &&\n            this.focus.currentInfo.element.classList.contains('e-gridchkbox') && this.focus['activeKey'] === 'space'))) ||\n            !this.selectionSettings.persistSelection) {\n            var cancl_1 = 'cancel';\n            var isSingleDeSel = rowIndex.length === 1 && this.deSelectedData.length === 1;\n            var rowDeselectObj = {\n                rowIndex: rowIndex[0], data: this.selectionSettings.persistSelection && (this.parent.checkAllRows === 'Uncheck' &&\n                    !isSingleDeSel) && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.deSelectedData : data,\n                foreignKeyData: foreignKeyData, cancel: false, isInteracted: this.isInteracted,\n                isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            if (type === 'rowDeselected') {\n                delete rowDeselectObj.cancel;\n            }\n            var rowInString = 'row';\n            var target_2 = 'target';\n            var rowidx = 'rowIndex';\n            var rowidxex = 'rowIndexes';\n            var dataTxt = 'data';\n            var foreignKey = 'foreignKeyData';\n            rowDeselectObj[\"\" + rowInString] = row;\n            rowDeselectObj[\"\" + target_2] = this.actualTarget;\n            var isHeaderCheckBxClick = this.actualTarget && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.actualTarget, 'thead'));\n            if (isHeaderCheckBxClick || rowIndex.length > 1) {\n                rowDeselectObj[\"\" + rowidx] = rowIndex[0];\n                rowDeselectObj[\"\" + rowidxex] = rowIndex;\n            }\n            else if (rowIndex.length === 1) {\n                rowDeselectObj[\"\" + dataTxt] = rowDeselectObj[\"\" + dataTxt][0];\n                rowDeselectObj[\"\" + rowInString] = rowDeselectObj[\"\" + rowInString][0];\n                rowDeselectObj[\"\" + foreignKey] = rowDeselectObj[\"\" + foreignKey][0];\n                if (this.isAddRowsToSelection) {\n                    rowDeselectObj[\"\" + rowidxex] = rowIndex;\n                }\n            }\n            this.parent.trigger(type, rowDeselectObj, function (args) {\n                _this.isCancelDeSelect = args[\"\" + cancl_1];\n                if (!_this.isCancelDeSelect || (!_this.isRowClicked && !_this.isInteracted && !_this.checkSelectAllClicked)) {\n                    _this.updatePersistCollection(row[0], false);\n                    _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n                }\n                if (rowDeselectCallBack !== undefined) {\n                    rowDeselectCallBack();\n                }\n            });\n        }\n        else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n            if (rowDeselectCallBack !== undefined) {\n                rowDeselectCallBack();\n            }\n        }\n    };\n    Selection.prototype.getRowObj = function (row) {\n        if (row === void 0) { row = this.currentIndex; }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row)) {\n            return {};\n        }\n        if (typeof row === 'number') {\n            row = this.parent.getRowByIndex(row);\n        }\n        if (row) {\n            return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n        }\n        return {};\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Selection.prototype.selectCell = function (cellIndex, isToggle) {\n        if (!this.isCellType() || (this.isCellType() && (this.parent.enableVirtualization ||\n            (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache)))) {\n            return;\n        }\n        var gObj = this.parent;\n        var args;\n        var selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n        this.currentIndex = cellIndex.rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (!this.isCellType() || !selectedCell || this.isEditing()) {\n            return;\n        }\n        var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n        isToggle = !isToggle ? isToggle : (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(this.prevCIdxs) &&\n            cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex &&\n            isCellSelected);\n        if (!isToggle) {\n            args = {\n                data: selectedData, cellIndex: cellIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ?\n                    this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                cancel: false\n            };\n            var currentCell = 'currentCell';\n            args[\"\" + currentCell] = selectedCell;\n            var previousRowCellIndex = 'previousRowCellIndex';\n            args[\"\" + previousRowCellIndex] = this.prevECIdxs;\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n            this.cellselected = true;\n        }\n        else {\n            this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n        }\n    };\n    Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n        var _this = this;\n        return function (cellSelectingArgs) {\n            var cncl = 'cancel';\n            var currentCell = 'currentCell';\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellSelectingArgs) && cellSelectingArgs[\"\" + cncl] === true) {\n                return;\n            }\n            if (!isToggle) {\n                cellSelectingArgs[\"\" + currentCell] = cellSelectingArgs[\"\" + currentCell] ? cellSelectingArgs[\"\" + currentCell] : selectedCell;\n            }\n            _this.clearCell();\n            if (!isToggle) {\n                _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isToggle) {\n                var args = {\n                    data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,\n                    selectedRowCellIndex: _this.selectedRowCellIndexes,\n                    previousRowCell: _this.prevECIdxs ?\n                        _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[\"\" + previousRowCellIndex] = _this.prevECIdxs;\n                _this.updateCellProps(cellIndex, cellIndex);\n                _this.onActionComplete(args, _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelected);\n            }\n        };\n    };\n    Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n        return this.parent.getCellFromIndex(rIdx, cIdx);\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @returns {void}\n     */\n    Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        var _this = this;\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.parent.isSpan ? (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getCellFromRow)(this.parent, startIndex.rowIndex, startIndex.cellIndex) :\n            gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n        var min;\n        var max;\n        var stIndex = startIndex;\n        var edIndex = endIndex = endIndex ? endIndex : startIndex;\n        var cellIndexes;\n        this.currentIndex = startIndex.rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var args = {\n            data: selectedData, cellIndex: startIndex, currentCell: selectedCell,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[\"\" + previousRowCellIndex] = this.prevECIdxs;\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellSelectingArgs) && cellSelectingArgs[\"\" + cncl] === true) {\n                return;\n            }\n            _this.clearCell();\n            if (startIndex.rowIndex > endIndex.rowIndex) {\n                var temp = startIndex;\n                startIndex = endIndex;\n                endIndex = temp;\n            }\n            for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n                if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n                    min = i === startIndex.rowIndex ? (startIndex.cellIndex) : 0;\n                    max = i === endIndex.rowIndex ? (endIndex.cellIndex) : _this.getLastColIndex(i);\n                }\n                else {\n                    min = startIndex.cellIndex;\n                    max = endIndex.cellIndex;\n                }\n                cellIndexes = [];\n                for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n                    selectedCell = _this.parent.isSpan ? (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getCellFromRow)(gObj, i, j) : gObj.getCellFromIndex(i, j);\n                    if (!selectedCell) {\n                        continue;\n                    }\n                    cellIndexes.push(j);\n                    _this.updateCellSelection(selectedCell);\n                    _this.addAttribute(selectedCell);\n                }\n                _this.selectedRowCellIndexes.push({ rowIndex: i, cellIndexes: cellIndexes });\n            }\n            var cellSelectedArgs = {\n                data: selectedData, cellIndex: edIndex, currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n                selectedRowCellIndex: _this.selectedRowCellIndexes,\n                previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectedArgs[\"\" + previousRowCellIndex] = _this.prevECIdxs;\n            if (!_this.isDragged) {\n                _this.onActionComplete(cellSelectedArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelected);\n                _this.cellselected = true;\n            }\n            _this.updateCellProps(stIndex, edIndex);\n        });\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @returns {void}\n     */\n    Selection.prototype.selectCells = function (rowCellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n        this.currentIndex = rowCellIndexes[0].rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var cellSelectArgs = {\n            data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n            currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n            isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        cellSelectArgs[\"\" + previousRowCellIndex] = this.prevECIdxs;\n        this.onActionBegin(cellSelectArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelecting);\n        for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n            for (var j = 0, cellLen = rowCellIndexes[parseInt(i.toString(), 10)].cellIndexes.length; j < cellLen; j++) {\n                selectedCell = gObj.getCellFromIndex(rowCellIndexes[parseInt(i.toString(), 10)].rowIndex, rowCellIndexes[parseInt(i.toString(), 10)].cellIndexes[parseInt(j.toString(), 10)]);\n                if (!selectedCell) {\n                    continue;\n                }\n                this.updateCellSelection(selectedCell);\n                this.addAttribute(selectedCell);\n                this.addRowCellIndex({ rowIndex: rowCellIndexes[parseInt(i.toString(), 10)].rowIndex,\n                    cellIndex: rowCellIndexes[parseInt(i.toString(), 10)].cellIndexes[parseInt(j.toString(), 10)] });\n            }\n        }\n        this.updateCellProps({ rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] }, { rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] });\n        var cellSelectedArgs = {\n            data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n            currentCell: selectedCell, selectedRowCellIndex: this.selectedRowCellIndexes,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var prvRowCellIndex = 'previousRowCellIndex';\n        cellSelectedArgs[\"\" + prvRowCellIndex] = this.prevECIdxs;\n        this.onActionComplete(cellSelectedArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelected);\n    };\n    /**\n     * Select cells with existing cell selection by passing row and column index.\n     *\n     * @param {IIndex} cellIndexes - Defines the collection of row and column index.\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addCellsToSelection = function (cellIndexes) {\n        if (!this.isCellType() || (this.isCellType() && (this.parent.enableVirtualization ||\n            (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache)))) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell;\n        var index;\n        this.currentIndex = cellIndexes[0].rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        this.hideAutoFill();\n        var rowObj;\n        rowObj = gObj.getRowsObject()[cellIndexes[0].rowIndex];\n        if (gObj.groupSettings.columns.length > 0) {\n            rowObj = gObj.getRowObjectFromUID(this.target.parentElement.getAttribute('data-uid'));\n        }\n        var foreignKeyData = [];\n        for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n            var cellIndex = cellIndexes_1[_i];\n            for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n                if (this.selectedRowCellIndexes[parseInt(i.toString(), 10)].rowIndex === cellIndex.rowIndex) {\n                    index = i;\n                    break;\n                }\n            }\n            selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            var idx = cellIndex.cellIndex;\n            if (gObj.groupSettings.columns.length > 0) {\n                foreignKeyData.push(rowObj.cells[idx + gObj.groupSettings.columns.length].foreignKeyData);\n            }\n            else {\n                foreignKeyData.push(rowObj.cells[parseInt(idx.toString(), 10)].foreignKeyData);\n            }\n            var args = {\n                cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                isShiftPressed: this.isMultiShiftRequest,\n                currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                previousRowCell: this.prevECIdxs ?\n                    gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var prvRowCellIndex = 'previousRowCellIndex';\n            args[\"\" + prvRowCellIndex] = this.prevECIdxs;\n            var isUnSelected = index > -1;\n            if (isUnSelected) {\n                var selectedCellIdx = this.selectedRowCellIndexes[parseInt(index.toString(), 10)].cellIndexes;\n                if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1 || (this.selectionSettings.mode === 'Both' &&\n                    selectedCell.classList.contains('e-gridchkbox') && !selectedCell.getAttribute('aria-selected'))) {\n                    this.cellDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellDeselecting, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                    selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n                    if (selectedCellIdx.length === 0) {\n                        this.selectedRowCellIndexes.splice(index, 1);\n                    }\n                    selectedCell.classList.remove('e-cellselectionbackground');\n                    selectedCell.removeAttribute('aria-selected');\n                    this.cellDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellDeselected, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                }\n                else {\n                    isUnSelected = false;\n                    this.onActionBegin(args, _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelecting);\n                    this.addRowCellIndex({ rowIndex: cellIndex.rowIndex, cellIndex: cellIndex.cellIndex });\n                    this.updateCellSelection(selectedCell);\n                    this.addAttribute(selectedCell);\n                }\n            }\n            else {\n                this.onActionBegin(args, _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelecting);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args) && args[\"\" + cncl] === true) {\n                    return;\n                }\n                this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isUnSelected) {\n                var cellSelectedArgs = {\n                    data: selectedData, cellIndex: cellIndexes[0], currentCell: selectedCell,\n                    previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) :\n                        undefined, selectedRowCellIndex: this.selectedRowCellIndexes\n                };\n                cellSelectedArgs[\"\" + prvRowCellIndex] = this.prevECIdxs;\n                this.onActionComplete(cellSelectedArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelected);\n                this.cellselected = true;\n            }\n            this.updateCellProps(cellIndex, cellIndex);\n        }\n    };\n    Selection.prototype.getColIndex = function (rowIndex, index) {\n        var col = this.parent.getColumnByIndex(index);\n        var cells = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getCellsByTableName)(this.parent, col, rowIndex);\n        if (cells) {\n            for (var m = 0; m < cells.length; m++) {\n                var colIndex = parseInt(cells[parseInt(m.toString(), 10)].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n                if (colIndex === index) {\n                    return m;\n                }\n            }\n        }\n        return -1;\n    };\n    Selection.prototype.getLastColIndex = function (rowIndex) {\n        var cells = this.parent.getDataRows()[parseInt(rowIndex.toString(), 10)].querySelectorAll('td.e-rowcell');\n        return parseInt(cells[cells.length - 1].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n    };\n    Selection.prototype.clearCell = function () {\n        this.clearCellSelection();\n    };\n    Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n        var cancl = 'cancel';\n        if (cells && cells.length > 0) {\n            for (var _i = 0, cells_1 = cells; _i < cells_1.length; _i++) {\n                var cell = cells_1[_i];\n                if (cell && cell.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.gridChkBox)) {\n                    this.updateCheckBoxes((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(cell, 'tr'));\n                }\n            }\n        }\n        var args = {\n            cells: cells, data: data, cellIndexes: cellIndexes, foreignKeyData: foreignKeyData, cancel: false\n        };\n        this.parent.trigger(type, args);\n        this.isPreventCellSelect = args[\"\" + cancl];\n    };\n    Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowIndex)) {\n            this.addRowCellIndex({ rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        selectedCell.classList.add('e-cellselectionbackground');\n        if (selectedCell.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.gridChkBox)) {\n            this.updateCheckBoxes((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(selectedCell, 'tr'), true);\n        }\n        this.addAttribute(selectedCell);\n    };\n    Selection.prototype.addAttribute = function (cell) {\n        this.target = cell;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell)) {\n            cell.setAttribute('aria-selected', 'true');\n            if (!this.preventFocus) {\n                this.focus.onClick({ target: cell }, true);\n            }\n        }\n    };\n    Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n        this.prevCIdxs = startIndex;\n        this.prevECIdxs = endIndex;\n        this.isCellSelected = this.selectedRowCellIndexes.length && true;\n    };\n    Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n        var isRowAvail;\n        var index;\n        for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n            if (this.selectedRowCellIndexes[parseInt(i.toString(), 10)].rowIndex === rowCellIndex.rowIndex) {\n                isRowAvail = true;\n                index = i;\n                break;\n            }\n        }\n        if (isRowAvail) {\n            if (this.selectedRowCellIndexes[parseInt(index.toString(), 10)].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n                this.selectedRowCellIndexes[parseInt(index.toString(), 10)].cellIndexes.push(rowCellIndex.cellIndex);\n            }\n        }\n        else {\n            this.selectedRowCellIndexes.push({ rowIndex: rowCellIndex.rowIndex, cellIndexes: [rowCellIndex.cellIndex] });\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearCellSelection = function () {\n        if (this.isCellSelected) {\n            var gObj = this.parent;\n            var selectedCells = this.getSelectedCellsElement();\n            var rowCell = this.selectedRowCellIndexes;\n            var data = [];\n            var cells = [];\n            var foreignKeyData = [];\n            var currentViewData = this.getCurrentBatchRecordChanges();\n            this.hideAutoFill();\n            for (var i = 0, len = rowCell.length; i < len; i++) {\n                data.push(currentViewData[rowCell[parseInt(i.toString(), 10)].rowIndex]);\n                var rowObj = this.getRowObj(rowCell[parseInt(i.toString(), 10)].rowIndex);\n                for (var j = 0, cLen = rowCell[parseInt(i.toString(), 10)].cellIndexes.length; j < cLen; j++) {\n                    if (rowObj.cells) {\n                        foreignKeyData.push(rowObj.cells[rowCell[parseInt(i.toString(), 10)]\n                            .cellIndexes[parseInt(j.toString(), 10)]].foreignKeyData);\n                    }\n                    cells.push(gObj.getCellFromIndex(rowCell[parseInt(i.toString(), 10)].rowIndex, rowCell[parseInt(i.toString(), 10)].cellIndexes[parseInt(j.toString(), 10)]));\n                }\n            }\n            this.cellDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellDeselecting, rowCell, data, cells, foreignKeyData);\n            if (this.isPreventCellSelect === true) {\n                return;\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                selectedCells[parseInt(i.toString(), 10)].classList.remove('e-cellselectionbackground');\n                selectedCells[parseInt(i.toString(), 10)].removeAttribute('aria-selected');\n            }\n            if (this.bdrElement) {\n                this.showHideBorders('none');\n            }\n            this.selectedRowCellIndexes = [];\n            this.isCellSelected = false;\n            if (!this.isDragged && this.cellselected) {\n                this.cellDeselect(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cellDeselected, rowCell, data, cells, foreignKeyData);\n            }\n        }\n    };\n    Selection.prototype.getSelectedCellsElement = function () {\n        var gObj = this.parent;\n        var rows = gObj.getDataRows();\n        var cells = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            cells = cells.concat([].slice.call(rows[parseInt(i.toString(), 10)].getElementsByClassName('e-cellselectionbackground')));\n        }\n        return cells;\n    };\n    Selection.prototype.mouseMoveHandler = function (e) {\n        e.preventDefault();\n        this.stopTimer();\n        var gBRect = this.parent.element.getBoundingClientRect();\n        var x1 = this.x;\n        var y1 = this.y;\n        var position = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getPosition)(e);\n        var x2 = position.x - gBRect.left;\n        var y2 = position.y - gBRect.top;\n        var tmp;\n        var target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'tr');\n        this.isDragged = true;\n        if (!this.isCellDrag) {\n            if (!target) {\n                target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n            }\n            if (x1 > x2) {\n                tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n            }\n            if (y1 > y2) {\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n            this.element.style.left = x1 + 'px';\n            this.element.style.top = y1 + 'px';\n            this.element.style.width = x2 - x1 + 'px';\n            this.element.style.height = y2 - y1 + 'px';\n        }\n        if (target && !e.ctrlKey && !e.shiftKey) {\n            var rowIndex = parseInt(target.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n            if (!this.isCellDrag) {\n                this.hideAutoFill();\n                this.selectRowsByRange(this.startDIndex, rowIndex);\n                this.isRowDragSelected = true;\n            }\n            else {\n                var td = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell);\n                if (td) {\n                    this.startAFCell = this.startCell;\n                    this.endAFCell = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell);\n                    if (rowIndex > -1) {\n                        this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1);\n                    }\n                }\n            }\n        }\n        if (!e.ctrlKey && !e.shiftKey && !this.parent.enableVirtualization && !this.parent.enableInfiniteScrolling &&\n            !this.parent.enableColumnVirtualization && !this.parent.groupSettings.columns.length && this.isCellDrag) {\n            this.updateScrollPosition(e, position, this.parent.getContent());\n        }\n    };\n    Selection.prototype.updateScrollPosition = function (mouseEvent, position, scrollElement) {\n        var _this = this;\n        var clientRect = scrollElement.getBoundingClientRect();\n        if (clientRect.left >= position.x - 20 -\n            (this.parent.enableRtl && this.parent.height !== 'auto' ? (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)() : 0)) {\n            this.timer1 = window.setInterval(function () { _this.setScrollPosition(scrollElement.firstElementChild, _this.parent.enableRtl ? 'right' : 'left', mouseEvent); }, 200);\n        }\n        else if (clientRect.left + scrollElement.clientWidth - 20 -\n            (!this.parent.enableRtl && this.parent.height !== 'auto' ? (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)() : 0) < position.x) {\n            this.timer1 = window.setInterval(function () { _this.setScrollPosition(scrollElement.firstElementChild, _this.parent.enableRtl ? 'left' : 'right', mouseEvent); }, 200);\n        }\n        if (clientRect.top >= position.y - (this.parent.getRowHeight() * 0.5)) {\n            this.timer2 = window.setInterval(function () { _this.setScrollPosition(scrollElement.firstElementChild, 'up', mouseEvent); }, 200);\n        }\n        else if (clientRect.top + scrollElement.clientHeight - (this.parent.getRowHeight() * 0.5) -\n            (scrollElement.firstElementChild.scrollWidth > scrollElement.firstElementChild.offsetWidth ?\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)() : 0) <= position.y) {\n            this.timer2 = window.setInterval(function () { _this.setScrollPosition(scrollElement.firstElementChild, 'down', mouseEvent); }, 200);\n        }\n    };\n    Selection.prototype.stopTimer = function () {\n        if (this.timer1) {\n            window.clearInterval(this.timer1);\n            this.timer1 = null;\n        }\n        if (this.timer2) {\n            window.clearInterval(this.timer2);\n            this.timer2 = null;\n        }\n        this.preventFocus = false;\n    };\n    Selection.prototype.setScrollPosition = function (scrollElement, direction, mouseEvent) {\n        var rowIndex = -1;\n        var columnIndex = -1;\n        if (this.endAFCell || this.prevECIdxs) {\n            rowIndex = this.endAFCell ? parseInt(this.endAFCell.getAttribute('index'), 10) : this.prevECIdxs.rowIndex;\n            columnIndex = this.endAFCell ? parseInt(this.endAFCell.getAttribute('aria-colindex'), 10) - 1 : this.prevECIdxs.cellIndex;\n        }\n        switch (direction) {\n            case 'up':\n                if (mouseEvent && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(mouseEvent.target, '.e-headercontent')) {\n                    return;\n                }\n                if (this.isAutoFillSel && this.startAFCell && this.selectedRowCellIndexes.length &&\n                    ((this.selectedRowCellIndexes.length === 1 && this.startAFCell !== this.startCell) ||\n                        (this.selectedRowCellIndexes.length > 1 && this.startAFCell.getBoundingClientRect().top > 0))) {\n                    rowIndex = parseInt(this.startAFCell.getAttribute('index'), 10);\n                }\n                rowIndex -= 1;\n                if (this.parent.frozenRows) {\n                    rowIndex += this.parent.frozenRows + 1;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                rowIndex < 1 ? scrollElement.scrollTop = 0 : scrollElement.scrollTop -= this.parent.getRowByIndex(rowIndex)\n                    .offsetHeight;\n                break;\n            case 'down':\n                if (this.isAutoFillSel && this.startAFCell && this.startAFCell !== this.startCell) {\n                    rowIndex = parseInt(this.startAFCell.getAttribute('index'), 10);\n                }\n                if (rowIndex < this.parent.getRows().length - 1) {\n                    rowIndex += 1;\n                    if (this.isAutoFillSel && this.startAFCell && this.startAFCell !== this.startCell) {\n                        this.startAFCell = this.parent.getCellFromIndex(rowIndex, this.selectedRowCellIndexes[0].cellIndexes[0]);\n                    }\n                    scrollElement.scrollTop += this.parent.getRowByIndex(rowIndex).offsetHeight;\n                }\n                else {\n                    scrollElement.scrollTop = scrollElement.scrollHeight;\n                }\n                break;\n            case 'left':\n                if (columnIndex > 0 && rowIndex > -1) {\n                    if (this.isAutoFillSel && this.startAFCell && this.selectedRowCellIndexes.length &&\n                        ((this.selectedRowCellIndexes[0].cellIndexes.length > 0 && this.startAFCell !== this.startCell) ||\n                            (this.selectedRowCellIndexes[0].cellIndexes.length > 1 &&\n                                ((!this.parent.enableRtl && this.startAFCell.getBoundingClientRect().left > 0) || (this.parent.enableRtl &&\n                                    this.startAFCell.getBoundingClientRect().left < this.parent.element.offsetWidth))))) {\n                        columnIndex = parseInt(this.startAFCell.getAttribute('aria-colindex'), 10) - 1;\n                    }\n                    var nextElement_1 = this.findNextCell(scrollElement, direction, columnIndex, rowIndex);\n                    columnIndex = nextElement_1 ? parseInt(nextElement_1.getAttribute('aria-colindex'), 10) - 1 : -1;\n                    if (this.parent.enableRtl && nextElement_1) {\n                        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                        columnIndex < 1 ? scrollElement.scrollLeft = scrollElement.scrollWidth :\n                            scrollElement.scrollLeft += nextElement_1.offsetWidth;\n                    }\n                    else if (nextElement_1) {\n                        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                        columnIndex < 1 ? scrollElement.scrollLeft = 0 : scrollElement.scrollLeft -= nextElement_1.offsetWidth;\n                    }\n                }\n                break;\n            case 'right':\n                if (this.isAutoFillSel && this.startAFCell && this.startAFCell !== this.startCell) {\n                    columnIndex = parseInt(this.startAFCell.getAttribute('aria-colindex'), 10) - 1;\n                }\n                // eslint-disable-next-line no-case-declarations\n                var currentElement = this.parent.getCellFromIndex(rowIndex, columnIndex);\n                // eslint-disable-next-line no-case-declarations\n                var nextElement = this.findNextCell(scrollElement, direction, columnIndex, rowIndex);\n                if (nextElement && this.isAutoFillSel && this.startAFCell && this.startAFCell !== this.startCell) {\n                    this.startAFCell = this.parent.getCellFromIndex(this.selectedRowCellIndexes[0].rowIndex, parseInt(nextElement.getAttribute('aria-colindex'), 10) - 1);\n                }\n                columnIndex = nextElement ? parseInt(nextElement.getAttribute('aria-colindex'), 10) - 1 : -1;\n                if (this.parent.enableRtl && nextElement) {\n                    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                    columnIndex < this.parent.columns.length - 1 ? scrollElement.scrollLeft -= currentElement.offsetWidth :\n                        scrollElement.scrollLeft = -scrollElement.scrollWidth;\n                }\n                else if (nextElement) {\n                    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                    columnIndex < this.parent.columns.length - 1 ? scrollElement.scrollLeft += currentElement.offsetWidth :\n                        scrollElement.scrollLeft = scrollElement.scrollWidth;\n                }\n                if (this.isAutoFillSel && (columnIndex === this.parent.columns.length - 1 || columnIndex === -1) &&\n                    this.startAFCell && this.endAFCell) {\n                    this.positionAFBorders();\n                    scrollElement.scrollLeft = this.parent.enableRtl ? -scrollElement.scrollWidth : scrollElement.scrollWidth;\n                }\n                break;\n        }\n        if (rowIndex > -1 && rowIndex < this.parent.getRows().length && columnIndex > -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var mouseEvent_1 = { target: this.parent.getCellFromIndex(rowIndex, columnIndex) };\n            if (this.isAutoFillSel && mouseEvent_1.target.classList.contains('e-cellselectionbackground') &&\n                ((direction === 'down' && parseInt(mouseEvent_1.target.getAttribute('index'), 10) === this.parent.getRows().length - 1) ||\n                    (direction === 'right' && parseInt(mouseEvent_1.target.getAttribute('aria-colindex'), 10) - 1 === this.parent.columns.length - 1))) {\n                return;\n            }\n            this.endAFCell = mouseEvent_1.target;\n            this.preventFocus = true;\n            this.selectLikeExcel(mouseEvent_1, rowIndex, columnIndex);\n        }\n    };\n    Selection.prototype.findNextCell = function (scrollElement, direction, columnIndex, rowIndex) {\n        var nextElement = this.parent.getCellFromIndex(rowIndex, direction === 'left' ? columnIndex - 1 : columnIndex + 1);\n        if (nextElement && nextElement.classList.contains('e-hide')) {\n            var siblingEles = nextElement.closest('tr').querySelectorAll('.e-rowcell:not(.e-hide)');\n            var nextEleInd = Array.from(siblingEles).indexOf(nextElement.nextElementSibling);\n            if (nextEleInd > 0 && nextEleInd < siblingEles.length - 1) {\n                nextElement = siblingEles[nextEleInd + (direction === 'left' ? -1 : 1)];\n                return nextElement;\n            }\n            else {\n                scrollElement.scrollLeft = 0;\n                return null;\n            }\n        }\n        return nextElement;\n    };\n    Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n        if (!this.isAutoFillSel) {\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.drawBorders();\n        }\n        else { //Autofill\n            this.showAFBorders();\n            this.selectLikeAutoFill(e);\n        }\n    };\n    Selection.prototype.setFrozenBorders = function (parentEle, border, bdrStr) {\n        var width = border.style.borderWidth.toString().split(' ');\n        var strCell = ['', 'e-leftfreeze', 'e-unfreeze', 'e-leftfreeze', 'e-unfreeze', 'e-rightfreeze', 'e-rightfreeze'];\n        var cells = [].slice.call(parentEle.querySelectorAll('.e-cellselectionbackground' + '.' + strCell[\"\" + bdrStr])).\n            filter(function (ele) { return ele.style.display === ''; });\n        var fixedCells = [].slice.call(parentEle.querySelectorAll('.e-cellselectionbackground.e-fixedfreeze')).\n            filter(function (ele) { return ele.style.display === ''; });\n        var isRtl = this.parent.enableRtl;\n        if (cells.length) {\n            var firstRowIdx = cells[0].getAttribute('index');\n            var firstColIdx = cells[0].getAttribute('aria-colindex');\n            var lastRowIdx = cells[cells.length - 1].getAttribute('index');\n            var lastColIdx = cells[cells.length - 1].getAttribute('aria-colindex');\n            for (var i = 0; i < cells.length; i++) {\n                if (cells[parseInt(i.toString(), 10)].getAttribute('index') === firstRowIdx && (width.length === 1 || (width.length === 3\n                    && parseInt(width[0], 10) === 2) || (width.length === 4 && parseInt(width[0], 10) === 2))) {\n                    cells[parseInt(i.toString(), 10)].classList.add('e-xlsel-top-border');\n                }\n                if (cells[parseInt(i.toString(), 10)].getAttribute('aria-colindex') === firstColIdx && (width.length === 1 ||\n                    (width.length === 3 && parseInt(width[1], 10) === 2) || (width.length === 4 && (((!isRtl &&\n                    parseInt(width[3], 10) === 2)) || (isRtl && parseInt(width[1], 10) === 2))))) {\n                    cells[parseInt(i.toString(), 10)].classList.add(isRtl ? 'e-xlsel-right-border' : 'e-xlsel-left-border');\n                }\n                if (cells[parseInt(i.toString(), 10)].getAttribute('index') === lastRowIdx && (width.length === 1 ||\n                    (width.length === 3 && parseInt(width[2], 10) === 2) || (width.length === 4 && parseInt(width[2], 10) === 2))) {\n                    cells[parseInt(i.toString(), 10)].classList.add('e-xlsel-bottom-border');\n                }\n                if (cells[parseInt(i.toString(), 10)].getAttribute('aria-colindex') === lastColIdx && (width.length === 1 ||\n                    (width.length === 3 && parseInt(width[1], 10) === 2) || (width.length === 4 && ((!isRtl &&\n                    parseInt(width[1], 10) === 2)) || (isRtl && parseInt(width[3], 10) === 2)))) {\n                    cells[parseInt(i.toString(), 10)].classList.add(isRtl ? 'e-xlsel-left-border' : 'e-xlsel-right-border');\n                }\n            }\n        }\n        if (fixedCells.length) {\n            var firstRowIdx = fixedCells[0].getAttribute('index');\n            var firstColIdx = (parseInt(fixedCells[0].getAttribute('aria-colindex'), 10) - 1).toString();\n            var lastRowIdx = fixedCells[fixedCells.length - 1].getAttribute('index');\n            var lastColIdx = (parseInt(fixedCells[fixedCells.length - 1].getAttribute('aria-colindex'), 10) - 1).toString();\n            for (var i = 0; i < fixedCells.length; i++) {\n                var idx = fixedCells[parseInt(i.toString(), 10)].getAttribute('index');\n                var colIdx = (parseInt(fixedCells[parseInt(i.toString(), 10)].getAttribute('aria-colindex'), 10) - 1).toString();\n                if (idx === firstRowIdx &&\n                    ((!this.parent.getHeaderContent().querySelector('.e-cellselectionbackground.e-fixedfreeze')\n                        && (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(parentEle, 'e-content')) || !(0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(parentEle, 'e-content'))) {\n                    fixedCells[parseInt(i.toString(), 10)].classList.add('e-xlsel-top-border');\n                }\n                if (idx === lastRowIdx &&\n                    ((!this.parent.getContent().querySelector('.e-cellselectionbackground.e-fixedfreeze')\n                        && (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(parentEle, 'e-headercontent')) || !(0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(parentEle, 'e-headercontent'))) {\n                    fixedCells[parseInt(i.toString(), 10)].classList.add('e-xlsel-bottom-border');\n                }\n                var preCell = fixedCells[parseInt(i.toString(), 10)].parentElement.children[parseInt(colIdx, 10) - 1];\n                if (colIdx === firstColIdx && (!preCell || (preCell && !preCell.classList.contains('e-cellselectionbackground')))) {\n                    fixedCells[parseInt(i.toString(), 10)].classList.add(isRtl ? 'e-xlsel-right-border' : 'e-xlsel-left-border');\n                }\n                var nextCell = fixedCells[parseInt(i.toString(), 10)].parentElement.children[parseInt(colIdx, 10) + 1];\n                if (colIdx === lastColIdx && (!nextCell || (nextCell && !nextCell.classList.contains('e-cellselectionbackground')))) {\n                    fixedCells[parseInt(i.toString(), 10)].classList.add(isRtl ? 'e-xlsel-left-border' : 'e-xlsel-right-border');\n                }\n            }\n        }\n    };\n    Selection.prototype.refreshFrozenBorders = function () {\n        if (this.bdrElement) {\n            this.setFrozenBorders(this.parent.getContentTable(), this.bdrElement, '1');\n            if (this.parent.isFrozenGrid() && this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n                this.setFrozenBorders(this.parent.getContentTable(), this.frcBdrElement, '5');\n            }\n            if (this.parent.frozenRows) {\n                this.setFrozenBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n                if (this.parent.isFrozenGrid() && this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n                    this.setFrozenBorders(this.parent.getHeaderTable(), this.frhBdrElement, '6');\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.drawBorders = function () {\n        if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n            this.parent.element.classList.add('e-enabledboxbdr');\n            if (!this.bdrElement) {\n                this.createBorders();\n            }\n            this.positionBorders();\n            if (this.parent.isFrozenGrid()) {\n                this.showHideBorders('none', true);\n                this.refreshFrozenBorders();\n            }\n        }\n        else {\n            this.showHideBorders('none');\n        }\n    };\n    Selection.prototype.isLastCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[cells.length - 1] === cell;\n    };\n    Selection.prototype.isLastRow = function (cell) {\n        var rows = [].slice.call((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(cell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[rows.length - 1];\n    };\n    Selection.prototype.isFirstRow = function (cell) {\n        var rows = [].slice.call((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(cell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[0];\n    };\n    Selection.prototype.isFirstCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[0] === cell;\n    };\n    Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n        var cells = [].slice.call(parentEle.getElementsByClassName('e-cellselectionbackground')).\n            filter(function (ele) { return ele.style.display === ''; });\n        if (cells.length && this.parent.isFrozenGrid()) {\n            var strCell = ['', 'e-leftfreeze', 'e-unfreeze', 'e-leftfreeze', 'e-unfreeze', 'e-rightfreeze', 'e-rightfreeze'];\n            cells = [].slice.call(parentEle.querySelectorAll('.e-cellselectionbackground' + '.' + strCell[\"\" + bdrStr] + ':not(.e-hide)')).\n                filter(function (ele) { return ele.style.display === ''; });\n        }\n        if (cells.length) {\n            var isFrozen = this.parent.isFrozenGrid();\n            var start = cells[0];\n            var end = cells[cells.length - 1];\n            var stOff = start.getBoundingClientRect();\n            var endOff = end.getBoundingClientRect();\n            var parentOff = start.offsetParent.getBoundingClientRect();\n            if (start.offsetParent.classList.contains('e-content') || start.offsetParent.classList.contains('e-headercontent')) {\n                parentOff = start.offsetParent.querySelector('table').getBoundingClientRect();\n            }\n            var rowHeight = !isFrozen && this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n            var topOffSet = 0;\n            var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n            var rightOffset = ((this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3'))\n                || (this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight && (bdrStr === '5' || bdrStr === '6')))\n                && this.isFirstCell(start) ? 1 : 0;\n            if (this.parent.enableRtl) {\n                border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n                border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n            }\n            else {\n                border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n                border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n            }\n            border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n            border.style.height = endOff.top - stOff.top > 0 ?\n                (endOff.top - parentOff.top + endOff.height + (isFrozen ? 0 : 1)) - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' :\n                endOff.height + topOffSet - rowHeight + (isFrozen ? 0 : 1) + 'px';\n            this.selectDirection += bdrStr;\n        }\n        else {\n            border.style.display = 'none';\n        }\n    };\n    Selection.prototype.positionBorders = function () {\n        this.updateStartEndCells();\n        if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n            return;\n        }\n        this.selectDirection = '';\n        this.showHideBorders('');\n        this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n        if (this.parent.isFrozenGrid()) {\n            this.setBorders(this.parent.getContentTable(), this.mcBdrElement, '2');\n            if (this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n                this.setBorders(this.parent.getContentTable(), this.frcBdrElement, '5');\n            }\n        }\n        if (this.parent.frozenRows) {\n            this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n            if (this.parent.isFrozenGrid()) {\n                this.setBorders(this.parent.getHeaderTable(), this.mhBdrElement, '4');\n                if (this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n                    this.setBorders(this.parent.getHeaderTable(), this.frhBdrElement, '6');\n                }\n            }\n        }\n        this.applyBorders(this.selectDirection);\n    };\n    /* eslint-enable */\n    Selection.prototype.applyBothFrozenBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        switch (str.length) {\n            case 6:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                    this.mcBdrElement.style.borderWidth = this.bottom;\n                    this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                    this.mhBdrElement.style.borderWidth = this.top;\n                    this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                    this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                }\n                break;\n            case 4:\n                {\n                    if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                        this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                        this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                    }\n                    if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                        this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                    }\n                }\n                break;\n            case 3:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                    this.mcBdrElement.style.borderWidth = this.top_bottom;\n                    this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.mhBdrElement.style.borderWidth = this.top_bottom;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                    }\n                }\n                break;\n            case 2:\n                {\n                    if (str.includes('1')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        if (this.parent.frozenRows) {\n                            this.fhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('2')) {\n                        this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        if (this.parent.frozenRows) {\n                            this.mhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('3')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        this.bdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                    if (str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        this.mcBdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                    if (str.includes('5')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        if (this.parent.frozenRows) {\n                            this.frhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('6')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frcBdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                }\n                break;\n            default:\n                this.bdrElement.style.borderWidth = this.all_border;\n                this.mcBdrElement.style.borderWidth = this.all_border;\n                this.frcBdrElement.style.borderWidth = this.all_border;\n                if (this.parent.frozenRows) {\n                    this.fhBdrElement.style.borderWidth = this.all_border;\n                    this.mhBdrElement.style.borderWidth = this.all_border;\n                    this.frhBdrElement.style.borderWidth = this.all_border;\n                }\n                break;\n        }\n    };\n    Selection.prototype.applyBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        if (this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n            this.applyBothFrozenBorders(str);\n        }\n        else {\n            switch (str.length) {\n                case 4:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                            this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                            this.fhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                            this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                            this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                            this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                            this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                        }\n                    }\n                    break;\n                case 2:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_bottom_left\n                                : this.top_right_bottom : this.right_bottom_left;\n                            this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_right_bottom\n                                : this.top_bottom_left : this.right_bottom_left;\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left\n                                    : rtl ? this.top_bottom_left : this.top_right_bottom;\n                                this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left\n                                    : rtl ? this.top_right_bottom : this.top_bottom_left;\n                            }\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_right_bottom\n                                : this.top_bottom_left : this.right_bottom_left;\n                            if (this.parent.isFrozenGrid()) {\n                                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_bottom_left\n                                    : this.top_right_bottom : this.right_bottom_left;\n                            }\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left\n                                    : rtl ? this.top_right_bottom : this.top_bottom_left;\n                                if (this.parent.isFrozenGrid()) {\n                                    this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left\n                                        : rtl ? this.top_bottom_left : this.top_right_bottom;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    this.bdrElement.style.borderWidth = this.all_border;\n                    if (this.parent.isFrozenGrid()) {\n                        this.mcBdrElement.style.borderWidth = this.all_border;\n                    }\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = this.all_border;\n                        if (this.parent.isFrozenGrid()) {\n                            this.mhBdrElement.style.borderWidth = this.all_border;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    Selection.prototype.createBorders = function () {\n        if (!this.bdrElement) {\n            var selectionBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                className: 'e-xlsel', id: this.parent.element.id + '_bdr'\n            });\n            selectionBorder.style.cssText = 'width: 2px; border-width: 0;';\n            this.bdrElement = this.parent.getContentTable().parentElement.appendChild(selectionBorder);\n            if (this.parent.isFrozenGrid()) {\n                var middleContentBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                    className: 'e-xlsel', id: this.parent.element.id + '_mcbdr'\n                });\n                middleContentBorder.style.cssText = 'height: 2px; border-width: 0;';\n                this.mcBdrElement = this.parent.getContentTable().parentElement.appendChild(middleContentBorder);\n                if (this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n                    var frozenRightContentBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                        className: 'e-xlsel', id: this.parent.element.id + '_frcbdr'\n                    });\n                    frozenRightContentBorder.style.cssText = 'height: 2px; border-width: 0;';\n                    this.frcBdrElement = this.parent.getContentTable().parentElement.appendChild(frozenRightContentBorder);\n                }\n            }\n            if (this.parent.frozenRows) {\n                var frozenHeaderBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                    className: 'e-xlsel', id: this.parent.element.id + '_fhbdr'\n                });\n                frozenHeaderBorder.style.height = '2px';\n                this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(frozenHeaderBorder);\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                var middleHeaderBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                    className: 'e-xlsel', id: this.parent.element.id + '_mhbdr'\n                });\n                middleHeaderBorder.style.height = '2px';\n                this.mhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(middleHeaderBorder);\n                if (this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n                    var frozenRightHeaderBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                        className: 'e-xlsel', id: this.parent.element.id + '_frhbdr'\n                    });\n                    frozenRightHeaderBorder.style.height = '2px';\n                    this.frhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(frozenRightHeaderBorder);\n                }\n            }\n        }\n    };\n    Selection.prototype.showHideBorders = function (display, freeze) {\n        if (this.bdrElement) {\n            this.bdrElement.style.display = display;\n            if (this.parent.isFrozenGrid()) {\n                var parentEle = this.parent.getContentTable();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(parentEle.querySelectorAll('.e-xlsel-top-border'), 'e-xlsel-top-border');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(parentEle.querySelectorAll('.e-xlsel-left-border'), 'e-xlsel-left-border');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(parentEle.querySelectorAll('.e-xlsel-right-border'), 'e-xlsel-right-border');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(parentEle.querySelectorAll('.e-xlsel-bottom-border'), 'e-xlsel-bottom-border');\n                if (!freeze) {\n                    this.mcBdrElement.style.display = display;\n                }\n                if (this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n                    this.frcBdrElement.style.display = display;\n                }\n            }\n            if (this.parent.frozenRows) {\n                var parentEle = this.parent.getHeaderTable();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(parentEle.querySelectorAll('.e-xlsel-top-border'), 'e-xlsel-top-border');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(parentEle.querySelectorAll('.e-xlsel-left-border'), 'e-xlsel-left-border');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(parentEle.querySelectorAll('.e-xlsel-right-border'), 'e-xlsel-right-border');\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(parentEle.querySelectorAll('.e-xlsel-bottom-border'), 'e-xlsel-bottom-border');\n                this.fhBdrElement.style.display = display;\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                if (!freeze) {\n                    this.mhBdrElement.style.display = display;\n                }\n                if (this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight) {\n                    this.frhBdrElement.style.display = display;\n                }\n            }\n        }\n    };\n    Selection.prototype.drawAFBorders = function () {\n        if (!this.bdrAFBottom) {\n            this.createAFBorders();\n        }\n        this.positionAFBorders();\n    };\n    Selection.prototype.positionAFBorders = function () {\n        if (!this.startCell || !this.bdrAFLeft) {\n            return;\n        }\n        var stOff = this.startAFCell.getBoundingClientRect();\n        var endOff = this.endAFCell.getBoundingClientRect();\n        var top = endOff.top - stOff.top > 0 ? 1 : 0;\n        var firstCellTop = endOff.top - stOff.top >= 0 && ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.movableContent) ||\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n        var firstCellLeft = ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.movableContent) ||\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.movableHeader)) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n        var rowHeight = this.isLastRow(this.endAFCell) && ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.endAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.movableContent) ||\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n        var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n        var parentRect = this.parent.element.getBoundingClientRect();\n        var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n        var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n        var scrollTop = sTop - this.startAFCell.offsetTop;\n        var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n        var totalHeight = this.parent.element.clientHeight - (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)();\n        if (this.parent.allowPaging) {\n            totalHeight -= this.parent.element.querySelector('.e-pager').offsetHeight;\n        }\n        if (this.parent.aggregates.length) {\n            totalHeight -= this.parent.getFooterContent().offsetHeight;\n        }\n        var totalWidth = this.parent.element.clientWidth - (this.parent.height !== 'auto' ? (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)() : 0);\n        scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n        scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n        var left = stOff.left - parentRect.left;\n        if (!this.parent.enableRtl) {\n            this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n            this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n            this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n            this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10)\n                - firstCellLeft + 1 + 'px';\n            if (totalWidth <= (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10))) {\n                var leftRemove = (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) - totalWidth;\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n            }\n        }\n        else {\n            var scrolloffSet = ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.movableContent) ||\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.movableHeader)) ? stOff.right -\n                this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width -\n                parentRect.left : 0;\n            this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n            this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n            var borderAFRightValue = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1;\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            borderAFRightValue > 0 ? this.bdrAFRight.style.right = borderAFRightValue + 'px' : this.bdrAFRight.style.right = '0px';\n            this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10)\n                - firstCellLeft + 1 + 'px';\n            if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n                if (this.parent.height !== 'auto' && (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)()) {\n                    this.bdrAFTop.style.left = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)() + 'px';\n                    this.bdrAFTop.style.width = (parseInt(this.bdrAFTop.style.width, 10) - (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getScrollBarWidth)()) + 'px';\n                }\n                else {\n                    this.bdrAFTop.style.left = '0px';\n                }\n            }\n        }\n        this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n        this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ?\n            (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' :\n            endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n        this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n        this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n        this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n        this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n        this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n        if (totalHeight <= (parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10))) {\n            var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n            this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n            this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        }\n    };\n    Selection.prototype.createAFBorders = function () {\n        if (!this.bdrAFLeft) {\n            var leftSelectionBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                className: 'e-xlselaf', id: this.parent.element.id + '_bdrafleft'\n            });\n            leftSelectionBorder.style.width = '2px';\n            this.bdrAFLeft = this.parent.element.appendChild(leftSelectionBorder);\n            var rightSelectionBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                className: 'e-xlselaf', id: this.parent.element.id + '_bdrafright'\n            });\n            rightSelectionBorder.style.width = '2px';\n            this.bdrAFRight = this.parent.element.appendChild(rightSelectionBorder);\n            var bottomSelectionBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                className: 'e-xlselaf', id: this.parent.element.id + '_bdrafbottom'\n            });\n            bottomSelectionBorder.style.height = '2px';\n            this.bdrAFBottom = this.parent.element.appendChild(bottomSelectionBorder);\n            var topSelectionBorder = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n                className: 'e-xlselaf', id: this.parent.element.id + '_bdraftop'\n            });\n            topSelectionBorder.style.height = '2px';\n            this.bdrAFTop = this.parent.element.appendChild(topSelectionBorder);\n        }\n    };\n    Selection.prototype.destroyAutoFillElements = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.remove();\n            this.bdrAFRight.remove();\n            this.bdrAFBottom.remove();\n            this.bdrAFTop.remove();\n            this.bdrAFLeft = this.bdrAFRight = this.bdrAFBottom = this.bdrAFTop = null;\n        }\n        if (this.autofill) {\n            this.autofill.remove();\n            this.autofill = null;\n        }\n    };\n    Selection.prototype.showAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = '';\n            this.bdrAFRight.style.display = '';\n            this.bdrAFBottom.style.display = '';\n            this.bdrAFTop.style.display = '';\n        }\n    };\n    Selection.prototype.hideAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = 'none';\n            this.bdrAFRight.style.display = 'none';\n            this.bdrAFBottom.style.display = 'none';\n            this.bdrAFTop.style.display = 'none';\n        }\n    };\n    Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n        var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n        if (!args.cancel) {\n            var col = this.parent.getColumnByIndex(cIdx);\n            if (this.parent.editModule && cell) {\n                if (col.type === 'number') {\n                    this.parent.editModule.updateCell(rIdx, col.field, parseFloat(args.value));\n                }\n                else {\n                    this.parent.editModule.updateCell(rIdx, col.field, args.value);\n                }\n            }\n        }\n    };\n    Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n        var col = this.parent.getColumnByIndex(colIndex);\n        var args = {\n            column: col,\n            value: cell.innerText\n        };\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeAutoFill, args);\n        return args;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n        var cls = '.e-cellselectionbackground';\n        var cells = [].slice.call(this.parent.getDataRows()[parseInt(rowIndex.toString(), 10)].querySelectorAll(cls));\n        return cells;\n    };\n    Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n        var startrowIdx = parseInt((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row).getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n        var startCellIdx = parseInt(this.startAFCell.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n        var endrowIdx = parseInt((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.endAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row).getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n        var endCellIdx = parseInt(this.endAFCell.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n        var rowLen = this.selectedRowCellIndexes.length - 1;\n        var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n        switch (true) { //direction\n            case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') &&\n                !!(0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell):\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n                this.drawAFBorders();\n                break;\n            case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n                endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n                && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx: //right top\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n                endrowIdx = parseInt((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.endAFCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row).getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n                endCellIdx = parseInt(this.endAFCell.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var cellIdx = parseInt(this.endCell.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n                    for (var i = startrowIdx; i <= endrowIdx; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        var c = 0;\n                        for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[parseInt(c.toString(), 10)]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: this.startCellIndex }, { rowIndex: endrowIdx, cellIndex: endCellIdx });\n                }\n                break;\n            case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n                startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n                startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx: // left bottom\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        cells.reverse();\n                        var c = 0;\n                        for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[parseInt(c.toString(), 10)]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: endCellIdx }, { rowIndex: startrowIdx + rowLen, cellIndex: this.startCellIndex + colLen });\n                }\n                break;\n            case startrowIdx > endrowIdx: //up\n                this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n                    var r = trIdx;\n                    for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n                        if (r === this.startIndex - 1) {\n                            r = trIdx;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        var c = 0;\n                        r--;\n                        for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n                            this.updateValue(i, j, cells[parseInt(c.toString(), 10)]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: endrowIdx, cellIndex: startCellIdx + colLen }, { rowIndex: startrowIdx + rowLen, cellIndex: startCellIdx });\n                }\n                break;\n            default: //down\n                this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n                    var r = this.startIndex;\n                    for (var i = trIdx + 1; i <= endrowIdx; i++) {\n                        if (r === trIdx + 1) {\n                            r = this.startIndex;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        r++;\n                        var c = 0;\n                        for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n                            this.updateValue(i, m, cells[parseInt(c.toString(), 10)]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: trIdx - rowLen, cellIndex: startCellIdx }, { rowIndex: endrowIdx, cellIndex: startCellIdx + colLen });\n                }\n                break;\n        }\n    };\n    Selection.prototype.mouseUpHandler = function (e) {\n        this.stopTimer();\n        document.body.classList.remove('e-disableuserselect');\n        if (this.element && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.parentElement)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.element);\n        }\n        if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n            this.mUPTarget = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell);\n        }\n        else {\n            this.mUPTarget = null;\n        }\n        var closeRowCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-rowcell');\n        if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell' &&\n            closeRowCell && closeRowCell.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell)) {\n            var rowIndex = parseInt(closeRowCell.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n            var cellIndex = parseInt(closeRowCell.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n            this.isDragged = false;\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isDragged = false;\n        this.updateAutoFillPosition();\n        if (this.isAutoFillSel) {\n            this.preventFocus = true;\n            var lastCell = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell);\n            this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n            this.startAFCell = this.startCell;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.endAFCell) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.startAFCell)) {\n                this.updateStartCellsIndex();\n                this.selectLikeAutoFill(e, true);\n                this.updateAutoFillPosition();\n                this.hideAFBorders();\n                this.positionBorders();\n                if (this.parent.isFrozenGrid()) {\n                    this.showHideBorders('none', true);\n                    this.refreshFrozenBorders();\n                }\n                if (this.parent.aggregates.length > 0) {\n                    this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshFooterRenderer, {});\n                }\n            }\n            this.isAutoFillSel = false;\n            this.preventFocus = false;\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n        if (this.parent.frozenRows) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mouseup', this.mouseUpHandler);\n    };\n    Selection.prototype.hideAutoFill = function () {\n        if (this.autofill) {\n            this.autofill.style.display = 'none';\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.updateAutoFillPosition = function () {\n        if (this.parent.enableAutoFill && !this.parent.isEdit &&\n            this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()\n            && this.selectedRowCellIndexes.length) {\n            var index = parseInt(this.target.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n            var rindex = parseInt(this.target.getAttribute('index'), 10);\n            var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n            var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) { return ele.style.display === ''; });\n            var col = this.parent.getColumnByIndex(index);\n            var isFrozenCol = col.getFreezeTableName() === 'movable';\n            var isFrozenRow = rindex < this.parent.frozenRows;\n            var isFrozenRight = this.parent.getFrozenMode() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.leftRight\n                && col.getFreezeTableName() === _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.frozenRight;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_autofill', (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.table))) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n                }\n                this.autofill = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-autofill', id: this.parent.element.id + '_autofill' });\n                this.autofill.style.display = 'none';\n                if (this.target.classList.contains('e-leftfreeze') || this.target.classList.contains('e-rightfreeze') ||\n                    this.target.classList.contains('e-fixedfreeze')) {\n                    this.autofill.classList.add('e-freeze-autofill');\n                }\n                if (!isFrozenRow) {\n                    if (!isFrozenCol) {\n                        this.parent.getContentTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.getContentTable().parentElement.appendChild(this.autofill);\n                    }\n                }\n                else {\n                    if (!isFrozenCol) {\n                        this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n                    }\n                }\n                if (isFrozenRight) {\n                    if (isFrozenRow) {\n                        this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.getContentTable().parentElement.appendChild(this.autofill);\n                    }\n                }\n            }\n            var cell = cells[cells.length - 1];\n            if (cell && cell.offsetParent) {\n                var clientRect = cell.getBoundingClientRect();\n                var parentOff = cell.offsetParent.getBoundingClientRect();\n                if (cell.offsetParent.classList.contains('e-content') || cell.offsetParent.classList.contains('e-headercontent')) {\n                    parentOff = cell.offsetParent.querySelector('table').getBoundingClientRect();\n                }\n                var colWidth = this.isLastCell(cell) ? 4 : 0;\n                var rowHeight = this.isLastRow(cell) ? 3 : 0;\n                if (!this.parent.enableRtl) {\n                    this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n                }\n                else {\n                    this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n                }\n                this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n            }\n            this.autofill.style.display = '';\n        }\n        else {\n            this.hideAutoFill();\n        }\n    };\n    Selection.prototype.mouseDownHandler = function (e) {\n        this.mouseButton = e.button;\n        var target = e.target;\n        var gObj = this.parent;\n        var isDrag;\n        var gridElement = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-grid');\n        if (gridElement && gridElement.id !== gObj.element.id || (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.headerContent) && !this.parent.frozenRows ||\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-editedbatchcell') || (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.editedRow)) {\n            return;\n        }\n        if (e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell) && !e.shiftKey && !e.ctrlKey) {\n            if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n                this.isCellDrag = true;\n                isDrag = true;\n            }\n            else if (gObj.allowRowDragAndDrop && !gObj.isEdit && !this.parent.selectionSettings.checkboxOnly) {\n                this.isRowDragSelected = false;\n                if (!this.isRowType() || this.isSingleSel() || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, 'td').classList.contains('e-selectionbackground')) {\n                    this.isDragged = false;\n                    return;\n                }\n                isDrag = true;\n                this.element = this.parent.createElement('div', { className: 'e-griddragarea' });\n                gObj.getContent().appendChild(this.element);\n            }\n            if (isDrag) {\n                this.enableDrag(e, true);\n            }\n        }\n        this.updateStartEndCells();\n        if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n            this.isCellDrag = true;\n            this.isAutoFillSel = true;\n            this.enableDrag(e);\n        }\n    };\n    Selection.prototype.updateStartEndCells = function () {\n        var cells = [].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground'));\n        this.startCell = cells[0];\n        this.endCell = cells[cells.length - 1];\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n            this.startCellIndex = parseInt((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell).getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n        }\n    };\n    Selection.prototype.updateStartCellsIndex = function () {\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n            this.startCellIndex = parseInt((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(this.startCell, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell).getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n        }\n    };\n    Selection.prototype.enableDrag = function (e, isUpdate) {\n        var gObj = this.parent;\n        if (isUpdate) {\n            var tr = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'tr');\n            this.startDIndex = parseInt(tr.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n            this.startDCellIndex = parseInt((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell)\n                .getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n        }\n        document.body.classList.add('e-disableuserselect');\n        var gBRect = gObj.element.getBoundingClientRect();\n        var postion = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.getPosition)(e);\n        this.x = postion.x - gBRect.left;\n        this.y = postion.y - gBRect.top;\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n        if (this.parent.frozenRows) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document, 'mouseup', this.mouseUpHandler, this);\n    };\n    Selection.prototype.clearSelAfterRefresh = function (e) {\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n            this.clearSelection();\n        }\n        if ((e.requestType === 'virtualscroll' || isInfiniteScroll) && this.parent.isPersistSelection && this.isPartialSelection\n            && this.isHdrSelectAllClicked) {\n            var rowObj = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; });\n            var indexes = [];\n            this.selectedRowState = {};\n            this.persistSelectedData = [];\n            for (var i = 0; i < rowObj.length; i++) {\n                indexes.push(rowObj[parseInt(i.toString(), 10)].index);\n                var pkValue = this.getPkValue(this.primaryKey, rowObj[parseInt(i.toString(), 10)].data);\n                this.selectedRowState[\"\" + pkValue] = true;\n                this.persistSelectedData.push(rowObj[parseInt(i.toString(), 10)].data);\n            }\n            this.selectedRowIndexes = indexes;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.uiUpdate, handler: this.enableAfterRender },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.initialEnd, handler: this.initializeSelection },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.rowSelectionComplete, handler: this.onActionComplete },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellSelectionComplete, handler: this.onActionComplete },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.cellFocused, handler: this.onCellFocused },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeFragAppend, handler: this.clearSelAfterRefresh },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnPositionChanged, handler: this.columnPositionChanged },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.contentReady, handler: this.initialEnd },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.rowsRemoved, handler: this.rowsRemoved },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.headerRefreshed, handler: this.refreshHeader },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.destroyAutoFillElements, handler: this.destroyAutoFillElements },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_3__.destroy, handler: this.destroy }];\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveEventListener)(this.parent, this.evtHandlers, true, this);\n        this.actionBeginFunction = this.actionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionComplete, this.actionCompleteFunction);\n        this.addEventListener_checkbox();\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document, 'mouseup', this.mouseUpHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveEventListener)(this.parent, this.evtHandlers, false);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionBegin, this.actionBeginFunction);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionComplete, this.actionCompleteFunction);\n        this.removeEventListener_checkbox();\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.destroyAutoFillElements, this.destroyAutoFillElements);\n    };\n    Selection.prototype.wireEvents = function () {\n        this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n        if (this.isMacOS) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n        }\n        else {\n            if (!this.parent.allowKeyboard) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            }\n        }\n    };\n    Selection.prototype.unWireEvents = function () {\n        if (this.isMacOS) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n        }\n        else {\n            if (!this.parent.allowKeyboard) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            }\n        }\n    };\n    Selection.prototype.columnPositionChanged = function () {\n        if (!this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.refreshHeader = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length && !this.parent.getDataModule().isRemote()) {\n            this.gridCurrentRecord = this.getData();\n        }\n        this.setCheckAllState();\n    };\n    Selection.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            var pkValue = this.getPkValue(this.primaryKey, e.records[parseInt(i.toString(), 10)]);\n            delete (this.selectedRowState[\"\" + pkValue]);\n            --this.totalRecordsCount;\n        }\n        this.setCheckAllState();\n    };\n    Selection.prototype.beforeFragAppend = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.getCheckAllBox = function () {\n        return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n    };\n    Selection.prototype.enableAfterRender = function (e) {\n        if (e.module === this.getModuleName() && e.enable) {\n            this.render();\n            this.initPerisistSelection();\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Selection.prototype.render = function (e) {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n    };\n    Selection.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.properties.type)) {\n            if (this.selectionSettings.type === 'Single') {\n                gObj.element.removeAttribute('aria-multiselectable');\n                if (this.selectedRowCellIndexes.length > 1) {\n                    this.clearCellSelection();\n                    this.prevCIdxs = undefined;\n                }\n                if (this.selectedRowIndexes.length > 1) {\n                    this.clearRowSelection();\n                    this.prevRowIndex = undefined;\n                }\n                if (this.selectedColumnsIndexes.length > 1) {\n                    this.clearColumnSelection();\n                    this.prevColIndex = undefined;\n                }\n                this.enableSelectMultiTouch = false;\n                this.hidePopUp();\n            }\n            else if (this.selectionSettings.type === 'Multiple') {\n                gObj.element.setAttribute('aria-multiselectable', 'true');\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.properties.mode) ||\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.properties.cellSelectionMode)) {\n            this.clearSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevColIndex = undefined;\n        }\n        this.isPersisted = true;\n        this.checkBoxSelectionChanged();\n        this.isPersisted = false;\n        if (!this.parent.isCheckBoxSelection) {\n            this.initPerisistSelection();\n        }\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length) {\n            gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n        }\n        this.drawBorders();\n    };\n    Selection.prototype.hidePopUp = function () {\n        if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-rowselect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.initialEnd = function () {\n        if (!this.selectedRowIndexes.length) {\n            this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.contentReady, this.initialEnd);\n            this.selectRow(this.parent.selectedRowIndex);\n        }\n    };\n    Selection.prototype.checkBoxSelectionChanged = function () {\n        var gobj = this.parent;\n        gobj.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.contentReady, this.checkBoxSelectionChanged);\n        var checkboxColumn = gobj.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length > 0) {\n            gobj.isCheckBoxSelection = true;\n            this.chkField = checkboxColumn[0].field;\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.totalRecordsCount)) {\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.isSingleSel()) {\n                gobj.selectionSettings.type = 'Multiple';\n                gobj.dataBind();\n            }\n            else {\n                this.initPerisistSelection();\n            }\n        }\n        if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n            this.chkField = null;\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.initPerisistSelection = function () {\n        var gobj = this.parent;\n        if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = true;\n            this.ensureCheckboxFieldSelection();\n        }\n        else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = false;\n            this.ensureCheckboxFieldSelection();\n        }\n        else {\n            gobj.isPersistSelection = false;\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.ensureCheckboxFieldSelection = function () {\n        var gobj = this.parent;\n        this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n        if (!gobj.enableVirtualization && this.chkField\n            && ((gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0) ||\n                !gobj.isPersistSelection)) {\n            this.dataSuccess((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result) ||\n                this.parent.getDataModule().isRemote() ? this.parent.getCurrentViewRecords() :\n                this.parent.renderModule.data.dataManager.dataSource.json);\n        }\n    };\n    Selection.prototype.dataSuccess = function (res) {\n        for (var i = 0; i < res.length; i++) {\n            var pkValue = this.getPkValue(this.primaryKey, res[parseInt(i.toString(), 10)]);\n            var checkedFieldData = res[parseInt(i.toString(), 10)][this.chkField];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.selectedRowState[\"\" + pkValue]) && checkedFieldData && typeof checkedFieldData === 'boolean') {\n                this.selectedRowState[\"\" + pkValue] = checkedFieldData;\n                if (this.parent.isPersistSelection) {\n                    this.persistSelectedData.push(res[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    Selection.prototype.setRowSelection = function (state) {\n        if (!(this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n            && this.parent.dataSource.result))) {\n            if (state) {\n                if (this.isPartialSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    var rowObj = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; });\n                    for (var _i = 0, rowObj_1 = rowObj; _i < rowObj_1.length; _i++) {\n                        var row = rowObj_1[_i];\n                        this.selectedRowState[this.getPkValue(this.primaryKey, row.data)] = true;\n                    }\n                }\n                else {\n                    var selectedData = this.isPartialSelection ? this.parent.partialSelectedRecords : this.getData();\n                    if (this.parent.groupSettings.columns.length) {\n                        for (var _a = 0, _b = this.isPartialSelection ? selectedData : selectedData.records; _a < _b.length; _a++) {\n                            var data = _b[_a];\n                            this.selectedRowState[this.getPkValue(this.primaryKey, data)] = true;\n                        }\n                    }\n                    else {\n                        for (var _c = 0, selectedData_1 = selectedData; _c < selectedData_1.length; _c++) {\n                            var data = selectedData_1[_c];\n                            this.selectedRowState[this.getPkValue(this.primaryKey, data)] = true;\n                        }\n                    }\n                }\n            }\n            else {\n                this.selectedRowState = {};\n            }\n            // (this.getData()).forEach(function (data) {\n            //     this.selectedRowState[data[this.primaryKey]] = true;\n            // })\n        }\n        else {\n            if (state) {\n                var selectedStateKeys = Object.keys(this.selectedRowState);\n                var unSelectedRowStateKeys = Object.keys(this.unSelectedRowState);\n                if (!this.isCheckboxReset) {\n                    var rowData = (this.parent.groupSettings.columns.length && this.parent.isPersistSelection) ?\n                        this.parent.currentViewData['records'] : this.parent.currentViewData;\n                    for (var _d = 0, rowData_1 = rowData; _d < rowData_1.length; _d++) {\n                        var data = rowData_1[_d];\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data[this.primaryKey])) {\n                            var key = data[this.primaryKey].toString();\n                            if (selectedStateKeys.indexOf(key) === -1 && unSelectedRowStateKeys.indexOf(key) === -1) {\n                                this.selectedRowState[data[this.primaryKey]] = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                this.selectedRowState = {};\n                this.unSelectedRowState = {};\n                this.rmtHdrChkbxClicked = false;\n            }\n        }\n    };\n    Selection.prototype.getData = function () {\n        return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n    };\n    Selection.prototype.getAvailableSelectedData = function (data) {\n        var filteredSearchedSelectedData = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_4__.DataManager(data).executeLocal(this.parent.getDataModule().generateQuery(true));\n        if (this.parent.groupSettings.columns.length && filteredSearchedSelectedData &&\n            filteredSearchedSelectedData.records) {\n            filteredSearchedSelectedData = filteredSearchedSelectedData.records.slice();\n        }\n        return filteredSearchedSelectedData;\n    };\n    Selection.prototype.refreshPersistSelection = function () {\n        var rows = this.parent.getRows();\n        this.totalRecordsCount = this.parent.getCurrentViewRecords().length;\n        if (this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rows) && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n            var indexes = [];\n            for (var j = 0; j < rows.length; j++) {\n                var rowObj = this.getRowObj(rows[parseInt(j.toString(), 10)]);\n                var pKey = rowObj ? rowObj.data ? this.getPkValue(this.primaryKey, rowObj.data) : null : null;\n                if (pKey === null) {\n                    return;\n                }\n                if (this.isPartialSelection && !rowObj.isSelectable) {\n                    continue;\n                }\n                var checkState = void 0;\n                var chkBox = rows[parseInt(j.toString(), 10)].querySelector('.e-checkselect');\n                if (this.selectedRowState[\"\" + pKey] || (this.parent.checkAllRows === 'Check' && this.selectedRowState[\"\" + pKey] &&\n                    this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0)\n                    || (this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0 && !this.parent.selectedRowIndex)\n                    || (this.parent.checkAllRows === 'Intermediate' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.chkField) && rowObj.data[this.chkField])) {\n                    indexes.push(parseInt(rows[parseInt(j.toString(), 10)].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1);\n                    checkState = true;\n                }\n                else {\n                    checkState = false;\n                    if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection && chkBox) {\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.removeAddCboxClasses)(chkBox.nextElementSibling, checkState);\n                    }\n                }\n                this.updatePersistCollection(rows[parseInt(j.toString(), 10)], checkState);\n            }\n            if (this.isSingleSel() && indexes.length > 0) {\n                this.selectRow(indexes[0], true);\n            }\n            else {\n                this.selectRows(indexes);\n            }\n        }\n        if ((this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') && this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n    };\n    Selection.prototype.actionBegin = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(editChkBox)) {\n                var row = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(editChkBox, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.editedRow);\n                if (row) {\n                    if (this.parent.editSettings.mode === 'Dialog') {\n                        row = this.parent.element.querySelector('.e-dlgeditrow');\n                    }\n                    var rowObj = this.getRowObj(row);\n                    if (!rowObj) {\n                        return;\n                    }\n                    this.selectedRowState[this.getPkValue(this.primaryKey, rowObj.data)] = rowObj.isSelected = editChkBox.checked;\n                }\n                else {\n                    this.isCheckedOnAdd = editChkBox.checked;\n                }\n            }\n        }\n        if (this.parent.isPersistSelection && this.isPartialSelection) {\n            if (e.requestType === 'paging' && (this.parent.getDataModule().isRemote()\n                || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result))) {\n                this.selectedRowIndexes = [];\n            }\n        }\n    };\n    Selection.prototype.actionComplete = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            if (e.action === 'add') {\n                if (this.isCheckedOnAdd) {\n                    var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n                    this.selectedRowState[this.getPkValue(this.primaryKey, rowObj.data)] = rowObj.isSelected = this.isCheckedOnAdd;\n                }\n                this.isHdrSelectAllClicked = false;\n                this.setCheckAllState();\n            }\n            this.refreshPersistSelection();\n        }\n        if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n            var records = e.data;\n            var data = records.slice();\n            for (var i = 0; i < data.length; i++) {\n                var pkValue = this.getPkValue(this.primaryKey, data[parseInt(i.toString(), 10)]);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pkValue)) {\n                    this.updatePersistDelete(pkValue, this.isPartialSelection);\n                }\n            }\n            this.isHdrSelectAllClicked = false;\n            this.setCheckAllState();\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (e.requestType === 'paging') {\n            if (this.parent.isPersistSelection && this.isPartialSelection && this.isHdrSelectAllClicked) {\n                var rows = this.parent.getRowsObject();\n                var indexes = [];\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[parseInt(i.toString(), 10)].isSelectable) {\n                        indexes.push(rows[parseInt(i.toString(), 10)].index);\n                    }\n                }\n                if (indexes.length) {\n                    this.selectRows(indexes);\n                }\n            }\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n        }\n    };\n    Selection.prototype.onDataBound = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length && !this.parent.getDataModule().isRemote()) {\n            this.gridCurrentRecord = this.getData();\n        }\n        if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n            if (this.selectedRecords.length) {\n                this.isPrevRowSelection = true;\n            }\n        }\n        if (((this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n            && this.parent.dataSource.result)) && this.rmtHdrChkbxClicked)\n            || (this.isPartialSelection && this.parent.isPersistSelection && this.isHdrSelectAllClicked)) {\n            if (this.parent.checkAllRows === 'Intermediate') {\n                this.setRowSelection(true);\n            }\n            else if (this.parent.checkAllRows === 'Uncheck') {\n                this.setRowSelection(false);\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.setCheckAllState();\n        }\n        if (this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n        this.initialRowSelection = this.isRowType() && this.parent.element.querySelectorAll('.e-selectionbackground') &&\n            this.parent.getSelectedRows().length ? true : false;\n        if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n            var totalRecords = this.parent.getRowsObject();\n            var indexes = [];\n            for (var i = 0; i < totalRecords.length; i++) {\n                if (totalRecords[parseInt(i.toString(), 10)].isSelected) {\n                    indexes.push(i);\n                }\n            }\n            if (indexes.length) {\n                this.selectRows(indexes);\n            }\n            this.initialRowSelection = true;\n        }\n    };\n    Selection.prototype.updatePersistSelectedData = function (checkState) {\n        if (this.parent.isPersistSelection) {\n            var rows = this.parent.getRows();\n            for (var i = 0; i < rows.length; i++) {\n                this.updatePersistCollection(rows[parseInt(i.toString(), 10)], checkState);\n            }\n            if (this.parent.checkAllRows === 'Uncheck') {\n                this.setRowSelection(false);\n                this.persistSelectedData = (this.parent.getDataModule().isRemote()\n                    || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result))\n                    ? this.persistSelectedData : [];\n            }\n            else if (this.parent.checkAllRows === 'Check') {\n                this.setRowSelection(true);\n                this.persistSelectedData = !(this.parent.getDataModule().isRemote()\n                    || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result))\n                    && !this.isPartialSelection ?\n                    this.parent.groupSettings.columns.length ? this.getData().records.slice() :\n                        this.getData().slice() : this.persistSelectedData;\n            }\n        }\n    };\n    Selection.prototype.checkSelectAllAction = function (checkState) {\n        var cRenderer = this.getRenderer();\n        var editForm = this.parent.element.querySelector('.e-gridform');\n        this.checkedTarget = this.getCheckAllBox();\n        if (checkState && this.getCurrentBatchRecordChanges().length) {\n            this.parent.checkAllRows = 'Check';\n            this.updatePersistSelectedData(checkState);\n            this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n            if (this.checkVirtualCheckBox() && !this.parent.isPersistSelection) {\n                this.virtualSelectedData = this.virtualCheckBoxData().slice();\n                this.selectedRowIndexes = Object.keys(this.virtualSelectedData).map(function (key) { return parseInt(key, 10); });\n            }\n        }\n        else {\n            this.parent.checkAllRows = 'Uncheck';\n            this.updatePersistSelectedData(checkState);\n            this.clearSelection();\n        }\n        this.chkAllCollec = [];\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(editForm)) {\n            var editChkBox = editForm.querySelector('.e-edit-checkselect');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(editChkBox)) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.removeAddCboxClasses)(editChkBox.nextElementSibling, checkState);\n            }\n        }\n    };\n    Selection.prototype.checkSelectAll = function (checkBox) {\n        var _this = this;\n        var stateStr = this.getCheckAllStatus(checkBox);\n        var state = stateStr === 'Check';\n        this.isHeaderCheckboxClicked = true;\n        if ((this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n            && this.parent.dataSource.result)) && ((stateStr === 'Uncheck' || this.isCheckboxReset) ||\n            (stateStr === 'Intermediate' && this.parent.isPersistSelection))) {\n            this.rmtHdrChkbxClicked = true;\n        }\n        else {\n            this.rmtHdrChkbxClicked = false;\n        }\n        if (this.rmtHdrChkbxClicked && this.isCheckboxReset) {\n            this.unSelectedRowState = {};\n        }\n        this.isCheckboxReset = false;\n        if (stateStr === 'Intermediate') {\n            if (!this.chkField && !this.parent.isPersistSelection) {\n                state = this.getCurrentBatchRecordChanges().some(function (data) {\n                    return _this.getPkValue(_this.primaryKey, data) in _this.selectedRowState;\n                });\n            }\n            if (this.parent.isPersistSelection) {\n                if (this.parent.allowPaging && this.isPartialSelection) {\n                    var rowObjects = this.parent.getRowsObject();\n                    for (var i = 0; i < rowObjects.length; i++) {\n                        if (rowObjects[i].isDataRow && rowObjects[i].isSelectable &&\n                            !rowObjects[i].isSelected) {\n                            state = false;\n                            break;\n                        }\n                        else {\n                            state = true;\n                        }\n                    }\n                }\n                else if ((this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n                    && this.parent.dataSource.result))) {\n                    for (var i = 0; i < this.getCurrentBatchRecordChanges().length; i++) {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getPkValue(this.primaryKey, this.getCurrentBatchRecordChanges()[\"\" + i]))) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            if (Object.keys(this.selectedRowState).includes((this.getPkValue(this.primaryKey, this.getCurrentBatchRecordChanges()[\"\" + i])).toString())) {\n                                state = true;\n                            }\n                            else {\n                                state = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (this.parent.isPersistSelection && this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        this.checkSelectAllAction(!state);\n        this.target = null;\n        if (this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n            this.updateSelectedRowIndexes();\n        }\n        this.triggerChkChangeEvent(checkBox, !state);\n    };\n    Selection.prototype.getCheckAllStatus = function (ele) {\n        var classes;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ele)) {\n            classes = ele.nextElementSibling.classList;\n        }\n        else {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getCheckAllBox())) {\n                classes = this.getCheckAllBox().nextElementSibling.classList;\n            }\n        }\n        var status = 'None';\n        if (classes instanceof DOMTokenList) {\n            if (classes.contains('e-check')) {\n                status = 'Check';\n            }\n            else if (classes.contains('e-uncheck')) {\n                status = 'Uncheck';\n            }\n            else if (classes.contains('e-stop')) {\n                status = 'Intermediate';\n            }\n        }\n        return status;\n    };\n    Selection.prototype.checkSelect = function (checkBox) {\n        var target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.checkedTarget, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell);\n        var gObj = this.parent;\n        this.isMultiCtrlRequest = true;\n        var rIndex = 0;\n        this.isHeaderCheckboxClicked = false;\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.isGroupAdaptive)(gObj)) {\n            var uid = target.parentElement.getAttribute('data-uid');\n            if (this.parent.enableVirtualization && this.parent.groupSettings.columns.length) {\n                rIndex = parseInt(target.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n            }\n            else {\n                rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n            }\n        }\n        else {\n            rIndex = parseInt(target.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n        }\n        if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.addedRow).length > 0 &&\n            this.parent.editSettings.newRowPosition === 'Top' && !this.parent.editSettings.showAddNewRow) {\n            ++rIndex;\n        }\n        this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1);\n        this.moveIntoUncheckCollection((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row));\n        this.setCheckAllState();\n        this.isMultiCtrlRequest = false;\n        this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n    };\n    Selection.prototype.moveIntoUncheckCollection = function (row) {\n        if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n            var rowObj = this.getRowObj(row);\n            var pKey = rowObj && rowObj.data ? this.getPkValue(this.primaryKey, rowObj.data) : null;\n            if (!pKey) {\n                return;\n            }\n            if (this.chkAllCollec.indexOf(pKey) < 0) {\n                this.chkAllCollec.push(pKey);\n            }\n            else {\n                this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.checkBoxChange, {\n            checked: checkState, selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n            target: checkBox\n        });\n        if (!this.parent.isEdit) {\n            this.checkedTarget = null;\n        }\n    };\n    Selection.prototype.updateSelectedRowIndexes = function () {\n        if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) &&\n            this.isPartialSelection && !(this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n            && this.parent.dataSource.result))\n            && this.parent.selectionSettings.persistSelection) {\n            if (this.parent.checkAllRows !== 'Uncheck') {\n                var rowObj = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; });\n                for (var _i = 0, rowObj_2 = rowObj; _i < rowObj_2.length; _i++) {\n                    var row = rowObj_2[_i];\n                    this.selectedRowIndexes.push(row.index);\n                }\n            }\n        }\n        if (this.parent.isCheckBoxSelection && this.parent.enableVirtualization && !this.isPartialSelection &&\n            (this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n                && this.parent.dataSource.result))\n            && !this.parent.isPersistSelection && this.parent.checkAllRows === 'Check') {\n            var rowObj = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; });\n            if (rowObj.length !== this.selectedRowIndexes.length) {\n                for (var _a = 0, rowObj_3 = rowObj; _a < rowObj_3.length; _a++) {\n                    var row = rowObj_3[_a];\n                    if (this.selectedRowIndexes.indexOf(row.index) <= -1) {\n                        this.selectedRowIndexes.push(row.index);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.updateSelectedRowIndex = function (index) {\n        if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n            && !(this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n                && this.parent.dataSource.result))\n            && !this.isPartialSelection) {\n            if (this.parent.checkAllRows === 'Check') {\n                this.selectedRowIndexes = [];\n                var dataLength = this.parent.groupSettings.columns.length ? this.getData()['records'].length :\n                    this.getData().length;\n                for (var data = 0; data < dataLength; data++) {\n                    this.selectedRowIndexes.push(data);\n                }\n            }\n            else if (this.parent.checkAllRows === 'Uncheck') {\n                this.selectedRowIndexes = [];\n            }\n            else {\n                var row = this.parent.getRowByIndex(index);\n                if (index && row && row.getAttribute('aria-selected') === 'false') {\n                    var selectedVal = this.selectedRowIndexes.indexOf(index);\n                    this.selectedRowIndexes.splice(selectedVal, 1);\n                }\n            }\n        }\n    };\n    Selection.prototype.isAllSelected = function (count) {\n        if (this.parent.getDataModule().isRemote()\n            || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result)) {\n            return this.getAvailableSelectedData(this.persistSelectedData).length === (this.parent.enableVirtualization\n                || this.parent.enableInfiniteScrolling ? this.parent.totalDataRecordsCount : this.totalRecordsCount);\n        }\n        else {\n            if (this.isPartialSelection) {\n                if (this.parent.allowPaging && !this.selectionSettings.persistSelection\n                    && this.parent.pageSettings.pageSize < this.parent.pageSettings.totalRecordsCount) {\n                    var data = this.parent.partialSelectedRecords;\n                    for (var i = 0; i < data.length; i++) {\n                        var pKey = this.getPkValue(this.primaryKey, data[parseInt(i.toString(), 10)]);\n                        if (!this.selectedRowState[\"\" + pKey]) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }\n                else {\n                    return this.isSelectAllRowCount(count);\n                }\n            }\n            else {\n                var data = this.getData();\n                if (this.parent.groupSettings.columns.length && data['records']) {\n                    data = data['records'];\n                }\n                for (var i = 0; i < data.length; i++) {\n                    var pKey = this.getPkValue(this.primaryKey, data[parseInt(i.toString(), 10)]);\n                    if (!this.selectedRowState[\"\" + pKey]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n    };\n    Selection.prototype.someDataSelected = function () {\n        if ((this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n            && this.parent.dataSource.result))\n            && (this.parent.searchSettings.key.length || this.parent.filterSettings.columns.length)) {\n            var filteredSearchedSelectedData = this.getAvailableSelectedData(this.persistSelectedData);\n            for (var i = 0; i < filteredSearchedSelectedData.length; i++) {\n                var pKey = this.getPkValue(this.primaryKey, filteredSearchedSelectedData[parseInt(i.toString(), 10)]);\n                if (this.selectedRowState[\"\" + pKey]) {\n                    return false;\n                }\n            }\n        }\n        var data = this.isPartialSelection ? this.getAvailableSelectedData(this.parent.partialSelectedRecords)\n            : (this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n                && this.parent.dataSource.result)) ? [] : this.getData();\n        for (var i = 0; i < data.length; i++) {\n            var pKey = this.getPkValue(this.primaryKey, data[parseInt(i.toString(), 10)]);\n            if (this.selectedRowState[\"\" + pKey]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Selection.prototype.setCheckAllState = function (index, isInteraction) {\n        if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            var checkToSelectAll = false;\n            var isFiltered = false;\n            var checkedLen = Object.keys(this.selectedRowState).length;\n            if (this.parent.element.classList.contains('e-treelistgrid') && this.parent.isPersistSelection && !this.parent.enableVirtualization &&\n                !this.parent.getDataModule().isRemote() && Array.isArray(this.parent.dataSource) &&\n                checkedLen === this.parent.dataSource.length && checkedLen > this.totalRecordsCount) {\n                checkedLen = this.totalRecordsCount;\n            }\n            if (!this.parent.isPersistSelection) {\n                checkedLen = this.selectedRowIndexes.length;\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.parent.isPersistSelection && !((this.parent.getDataModule().isRemote() ||\n                (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result)) &&\n                this.isPartialSelection)\n                && (this.parent.searchSettings.key.length || this.parent.filterSettings.columns.length)) {\n                isFiltered = true;\n                checkToSelectAll = this.isAllSelected(checkedLen);\n            }\n            var input = this.getCheckAllBox();\n            if (input) {\n                var spanEle = input.nextElementSibling;\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setChecked)(input, false);\n                input.indeterminate = false;\n                var getRecord = this.parent.getDataModule().isRemote() ? [] : this.gridCurrentRecord;\n                if (this.parent.groupSettings.columns.length && getRecord['records']) {\n                    getRecord = getRecord['records'];\n                }\n                this.totalRecordsCount = this.checkVirtualCheckBox() ? getRecord.length : this.totalRecordsCount;\n                if ((checkToSelectAll && isFiltered && (this.parent.getDataModule().isRemote() ||\n                    (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result) ||\n                    getRecord.length)) || (!isFiltered && ((checkedLen === this.totalRecordsCount && this.totalRecordsCount\n                    && !this.isPartialSelection && (!(this.parent.getDataModule().isRemote()\n                    || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result))\n                    || this.parent.allowPaging)) ||\n                    (!this.parent.enableVirtualization && !this.parent.enableInfiniteScrolling\n                        && this.isPartialSelection && (this.isSelectAllRowCount(checkedLen)\n                        || (this.isHdrSelectAllClicked && !this.parent.isPersistSelection)))\n                    || ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                        && !this.parent.allowPaging && ((!(this.parent.getDataModule().isRemote()\n                        || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result)) &&\n                        getRecord.length && checkedLen === getRecord.length) || ((this.parent.getDataModule().isRemote()\n                        || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result)) &&\n                        !this.isPartialSelection && ((checkedLen === this.parent.totalDataRecordsCount) || ((this.\n                        isSelectAllRowCount(checkedLen) || checkedLen === this.totalRecordsCount) && !this.parent.isPersistSelection))) ||\n                        (this.isPartialSelection && (this.isHdrSelectAllClicked || this.isSelectAllRowCount(checkedLen)))))\n                    || (checkedLen === this.totalRecordsCount && this.totalRecordsCount && !this.isPartialSelection &&\n                        !this.parent.allowPaging && !this.parent.enableVirtualization && !this.parent.enableInfiniteScrolling)))) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([spanEle], ['e-check']);\n                    (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setChecked)(input, true);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, true, true);\n                    }\n                    this.parent.checkAllRows = 'Check';\n                }\n                else if (((!this.selectedRowIndexes.length && (!this.parent.enableVirtualization ||\n                    (!this.persistSelectedData.length && !isFiltered) || (isFiltered && this.someDataSelected())) ||\n                    checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) && !this.parent.allowPaging) ||\n                    (this.parent.allowPaging && (checkedLen === 0 || (checkedLen && isFiltered && this.someDataSelected())))) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([spanEle], ['e-uncheck']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, false, true);\n                    }\n                    this.parent.checkAllRows = 'Uncheck';\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([spanEle], ['e-stop']);\n                    this.parent.checkAllRows = 'Intermediate';\n                    input.indeterminate = true;\n                }\n                if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([spanEle.parentElement], ['e-checkbox-disabled']);\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([spanEle.parentElement], ['e-checkbox-disabled']);\n                }\n                if (this.isPartialSelection) {\n                    var rowCount = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; }).length;\n                    if (rowCount === 0 && spanEle.parentElement.querySelector('.e-frame').classList.contains('e-uncheck')) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                    else {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                }\n                if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                    && !this.parent.allowPaging && !(this.parent.getDataModule().isRemote()\n                    || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource) && this.parent.dataSource.result))) {\n                    this.updateSelectedRowIndex(index);\n                }\n            }\n        }\n    };\n    Selection.prototype.checkVirtualCheckBox = function () {\n        return this.parent.enableVirtualization && !(this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n            && this.parent.dataSource.result)) && this.parent.isCheckBoxSelection && !this.isPartialSelection;\n    };\n    Selection.prototype.virtualCheckBoxData = function () {\n        var data = this.getData();\n        if (this.parent.groupSettings.columns.length && data['records']) {\n            data = data['records'];\n        }\n        return data;\n    };\n    Selection.prototype.isSelectAllRowCount = function (count) {\n        var rowCount = 0;\n        var rowObj = this.parent.getRowsObject();\n        if (this.parent.selectionSettings.persistSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n            var dataLen = (this.parent.getDataModule().isRemote() || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.dataSource)\n                && this.parent.dataSource.result)) ?\n                this.parent.totalDataRecordsCount : this.getData() && this.getData().length;\n            if (dataLen === rowObj.length) {\n                rowCount = rowObj.filter(function (e) { return e.isSelectable; }).length;\n                return rowCount && count === rowCount;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            if (this.parent.allowPaging && this.parent.selectionSettings.persistSelection) {\n                var disableSelectedRecordsCount = this.getAvailableSelectedData(this.parent.disableSelectedRecords).length;\n                var partialSelectedRecordsCount = this.getAvailableSelectedData(this.parent.partialSelectedRecords).length;\n                var selectedRowCount = this.getAvailableSelectedData(this.persistSelectedData).length;\n                rowCount = disableSelectedRecordsCount + partialSelectedRecordsCount;\n                return rowCount === this.totalRecordsCount && selectedRowCount !== 0 && selectedRowCount === partialSelectedRecordsCount;\n            }\n            else {\n                rowCount = rowObj.filter(function (e) { return e.isSelectable; }).length;\n                return rowCount && count === rowCount;\n            }\n        }\n    };\n    Selection.prototype.keyDownHandler = function (e) {\n        // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n        if ((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'opera' && e.keyCode === 17) || (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'mozilla' && e.keyCode === 224) ||\n            (((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'safari') || (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'chrome')) && (e.keyCode === 91 || e.keyCode === 93))) {\n            this.cmdKeyPressed = true;\n        }\n        var targetHeadCell = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, 'e-headercell');\n        var targetRowCell = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell);\n        var isCheckBox = targetHeadCell ? targetHeadCell.children[0].classList.contains('e-headerchkcelldiv') :\n            targetRowCell ? targetRowCell.classList.contains('e-gridchkbox') : false;\n        if (isCheckBox && !this.parent.allowKeyboard && e.keyCode === 32) {\n            e.preventDefault();\n        }\n    };\n    Selection.prototype.keyUpHandler = function (e) {\n        if ((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'opera' && e.keyCode === 17) || (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'mozilla' && e.keyCode === 224) ||\n            (((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'safari') || (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'chrome')) && (e.keyCode === 91 || e.keyCode === 93))) {\n            this.cmdKeyPressed = false;\n        }\n    };\n    Selection.prototype.clickHandler = function (e) {\n        var target = e.target;\n        this.actualTarget = target;\n        if (!this.isAutoFillSel && !e.ctrlKey && !e.shiftKey) {\n            this.startAFCell = this.endAFCell = null;\n        }\n        if (this.selectionSettings.persistSelection) {\n            this.deSelectedData = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.iterateExtend)(this.persistSelectedData);\n        }\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row) || (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-headerchkcelldiv') ||\n            (this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell'))) {\n            this.isInteracted = true;\n        }\n        this.cmdKeyPressed = e.metaKey;\n        this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch ||\n            (this.isMacOS && this.cmdKeyPressed);\n        if (!this.parent.allowKeyboard) {\n            this.isMultiShiftRequest = false;\n            this.isMultiCtrlRequest = false;\n        }\n        else {\n            this.isMultiShiftRequest = e.shiftKey;\n        }\n        this.isMultiCtrlRequestCell = this.isMultiCtrlRequest;\n        this.popUpClickHandler(e);\n        var chkSelect = false;\n        this.preventFocus = true;\n        var checkBox;\n        var checkWrap = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-checkbox-wrapper');\n        this.checkSelectAllClicked = checkWrap && checkWrap.getElementsByClassName('e-checkselectall') ||\n            (this.selectionSettings.persistSelection && (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row)) ? true : false;\n        if (this.selectionSettings.persistSelection && this.isPartialSelection && (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-headerchkcelldiv')\n            && !target.querySelector('.e-checkbox-disabled')) {\n            this.isHdrSelectAllClicked = true;\n        }\n        if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            chkSelect = true;\n        }\n        this.drawBorders();\n        this.updateAutoFillPosition();\n        target = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell);\n        if (this.parent.isReact && (target && !target.parentElement && target.classList.contains('e-rowcell'))) {\n            target = this.parent.getCellFromIndex(parseInt(target.getAttribute('index'), 10), parseInt(target.getAttribute('aria-colindex'), 10) - 1);\n        }\n        if (this.isRowDragSelected && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target) && this.parent.allowRowDragAndDrop &&\n            this.selectionSettings.persistSelection && this.checkSelectAllClicked) {\n            this.isRowDragSelected = false;\n        }\n        if (((target && target.parentElement.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row) && !this.parent.selectionSettings.checkboxOnly) || chkSelect)\n            && !this.isRowDragSelected) {\n            if (this.parent.isCheckBoxSelection) {\n                this.isMultiCtrlRequest = true;\n            }\n            this.target = target;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkBox)) {\n                this.checkedTarget = checkBox;\n                if (checkBox.classList.contains('e-checkselectall')) {\n                    this.checkSelectAll(checkBox);\n                }\n                else {\n                    this.checkSelect(checkBox);\n                }\n            }\n            else {\n                var rIndex = 0;\n                rIndex = parseInt(target.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex), 10) - 1;\n                if (this.parent.isPersistSelection && !this.parent.editSettings.showAddNewRow\n                    && this.parent.element.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.addedRow).length > 0) {\n                    ++rIndex;\n                }\n                if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n                    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1);\n                }\n                if (this.parent.isCheckBoxSelection) {\n                    this.moveIntoUncheckCollection((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row));\n                    this.setCheckAllState();\n                }\n            }\n            if (!this.parent.isCheckBoxSelection && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && !this.isSingleSel()) {\n                this.showPopup(e);\n            }\n        }\n        else if (e.target.classList.contains('e-headercell') &&\n            !e.target.classList.contains('e-stackedheadercell')) {\n            var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n            this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n        }\n        this.isMultiCtrlRequest = false;\n        this.isMultiCtrlRequestCell = this.isMultiCtrlRequest;\n        this.isMultiShiftRequest = false;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-unboundcell'))) {\n            this.preventFocus = false;\n        }\n    };\n    Selection.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-headercell') || e.target.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell) ||\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-rowselect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSelectMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSelectMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.showPopup = function (e) {\n        if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setCssInGridPopUp)(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' +\n                (!this.isSingleSel() && (this.selectedRecords.length > 1\n                    || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n        }\n    };\n    Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            if (!this.isDragged) {\n                this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n            }\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, this.selectionSettings.enableToggle);\n            if (this.selectedRowCellIndexes.length) {\n                this.updateAutoFillPosition();\n            }\n            this.drawBorders();\n        }\n        else if (this.isMultiShiftRequest) {\n            if (this.parent.isCheckBoxSelection || (!this.parent.isCheckBoxSelection &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(this.target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell).classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.gridChkBox))) {\n                this.selectRowsByRange((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n            }\n            else {\n                this.addRowsToSelection([rowIndex]);\n            }\n            this.selectCellsByRange((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(this.prevCIdxs) ? { rowIndex: rowIndex, cellIndex: cellIndex } : this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.updateAutoFillPosition();\n            this.drawBorders();\n        }\n        else {\n            this.addRowsToSelection([rowIndex]);\n            if (this.selectionSettings.mode === 'Both') {\n                var checkboxColumn = this.parent.getColumns().find(function (col) { return col.type === 'checkbox'; });\n                var checkboxColumnIndexCheck = checkboxColumn && checkboxColumn.index !== cellIndex;\n                if (checkboxColumnIndexCheck && !this.isMultiCtrlRequestCell) {\n                    this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, this.selectionSettings.enableToggle);\n                }\n                else if (!checkboxColumn || checkboxColumnIndexCheck) {\n                    this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);\n                }\n            }\n            else {\n                this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);\n            }\n            this.showHideBorders('none');\n        }\n        this.isDragged = false;\n    };\n    Selection.prototype.onCellFocused = function (e) {\n        if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n            if (e.keyArgs.action === 'upArrow') {\n                if (this.parent.allowFiltering) {\n                    e.isJump = e.element.tagName === 'INPUT' ? true : false;\n                }\n                else {\n                    e.isJump = e.element.tagName === 'TH' ? true : false;\n                }\n            }\n            else {\n                if (e.keyArgs.action === 'downArrow') {\n                    var rIdx = Number(e.element.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaRowIndex)) - 1;\n                    e.isJump = rIdx === 0 ? true : false;\n                }\n                else {\n                    if (e.keyArgs.action === 'ctrlHome') {\n                        e.isJump = true;\n                    }\n                }\n            }\n        }\n        var clear = ((e.container.isHeader && e.isJump) ||\n            (e.container.isContent && !e.container.isSelectable)) && !(e.byKey && e.keyArgs.action === 'space')\n            && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n        var headerAction = (e.container.isHeader && e.element.tagName !== 'TD' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.element, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell))\n            && !(e.byKey && e.keyArgs.action === 'space');\n        if (!e.byKey || clear) {\n            if (clear && !(this.parent.isCheckBoxSelection || (this.selectionSettings.persistSelection && (e.parent.classList.contains('e-recordplusexpand') ||\n                e.parent.classList.contains('e-recordpluscollapse') || e.parent.classList.contains('e-groupcaption'))))) {\n                this.clearSelection();\n            }\n            return;\n        }\n        var _a = e.container.isContent ? e.container.indexes : e.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var prev = this.focus.getPrevIndexes();\n        if (e.element.parentElement.querySelector('.e-rowcelldrag') || e.element.parentElement.querySelector('.e-dtdiagonalright')\n            || e.element.parentElement.querySelector('.e-dtdiagonaldown')) {\n            prev.cellIndex = prev.cellIndex - 1;\n        }\n        if (this.parent.frozenRows) {\n            if (e.container.isHeader && (e.element.tagName === 'TD' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.element, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell))) {\n                var hdrLength = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n                if (this.parent.editSettings.showAddNewRow && this.parent.editSettings.newRowPosition === 'Top' &&\n                    e.keyArgs.action === 'upArrow') {\n                    hdrLength++;\n                }\n                rowIndex -= hdrLength;\n                prev.rowIndex = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prev.rowIndex) ? prev.rowIndex - hdrLength : null;\n            }\n            else {\n                rowIndex += this.parent.frozenRows;\n                prev.rowIndex = prev.rowIndex === 0 || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) {\n            rowIndex = parseInt(e.element.parentElement.getAttribute('aria-rowindex'), 10) - 1;\n        }\n        if ((headerAction || (['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 &&\n            e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex)) &&\n            !this.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        if (this.parent.enableVirtualization) {\n            rowIndex = parseInt(e.element.parentElement.getAttribute('aria-rowindex'), 10) - 1;\n            if (!this.parent.enableColumnVirtualization && !this.parent.groupSettings.columns.length &&\n                this.parent.totalDataRecordsCount >= 1) {\n                if (e.keyArgs.action === 'ctrlHome') {\n                    rowIndex = 0;\n                    this.parent.isFocusFirstCell = true;\n                }\n                else if (e.keyArgs.action === 'ctrlEnd') {\n                    rowIndex = this.parent.totalDataRecordsCount - 1;\n                    this.isFocusLastCell = true;\n                }\n            }\n        }\n        if (this.parent.editSettings.showAddNewRow && this.parent.editSettings.newRowPosition === 'Top' &&\n            (!this.parent.enableVirtualization && !this.parent.enableInfiniteScrolling) && e.keyArgs.action === 'downArrow') {\n            rowIndex--;\n        }\n        this.preventFocus = true;\n        var columnIndex = this.getKeyColIndex(e);\n        if (this.needColumnSelection) {\n            cellIndex = columnIndex;\n        }\n        if (this.parent.element.classList.contains('e-gridcell-read') && (e.keyArgs.action === 'tab' || e.keyArgs.action === 'shiftTab'\n            || e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow')) {\n            var targetLabel = this.target.getAttribute('aria-label');\n            targetLabel = this.target.innerHTML + ' column header ' + this.parent.getColumnByIndex(cellIndex).field;\n            this.target.setAttribute('aria-label', targetLabel);\n        }\n        switch (e.keyArgs.action) {\n            case 'downArrow':\n            case 'upArrow':\n            case 'enter':\n            case 'shiftEnter':\n                this.target = e.element;\n                this.isKeyAction = true;\n                this.applyDownUpKey(rowIndex, cellIndex);\n                break;\n            case 'rightArrow':\n            case 'leftArrow':\n                this.applyRightLeftKey(rowIndex, cellIndex);\n                break;\n            case 'shiftDown':\n            case 'shiftUp':\n                this.shiftDownKey(rowIndex, cellIndex);\n                break;\n            case 'shiftLeft':\n            case 'shiftRight':\n                this.applyShiftLeftRightKey(rowIndex, cellIndex);\n                break;\n            case 'home':\n            case 'end':\n                cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n                this.applyHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'ctrlHome':\n            case 'ctrlEnd':\n                this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'escape':\n                this.clearSelection();\n                if (this.parent.clipboardModule) {\n                    window.navigator['clipboard'].writeText('');\n                }\n                break;\n            case 'ctrlPlusA':\n                this.ctrlPlusA();\n                break;\n            case 'space':\n                this.applySpaceSelection(e.element);\n                break;\n            case 'tab':\n                if (this.parent.editSettings.allowNextRowEdit) {\n                    this.selectRow(rowIndex);\n                }\n                break;\n        }\n        this.needColumnSelection = false;\n        this.preventFocus = false;\n        this.positionBorders();\n        if (this.parent.isFrozenGrid()) {\n            this.showHideBorders('none', true);\n            this.refreshFrozenBorders();\n        }\n        this.updateAutoFillPosition();\n    };\n    Selection.prototype.getKeyColIndex = function (e) {\n        var uid;\n        var index = null;\n        var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n        if (this.selectionSettings.allowColumnSelection && (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.element, 'e-columnheader')) {\n            this.needColumnSelection = e.container.isHeader ? true : false;\n            if (stackedHeader) {\n                if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n                    return index;\n                }\n                uid = stackedHeader.getAttribute('e-mappinguid');\n                var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n                var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n                var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n                index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n            }\n            else {\n                index = this.parent.getColumnIndexByUid(e.element\n                    .querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            }\n        }\n        return index;\n    };\n    /**\n     * Apply ctrl + A key selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.ctrlPlusA = function () {\n        if (this.isRowType() && !this.isSingleSel()) {\n            var rowObj = this.parent.getRowsObject();\n            this.selectRowsByRange(rowObj[0].index, rowObj[rowObj.length - 1].index);\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: this.parent.getRows().length - 1, cellIndex: this.parent.getColumns().length - 1 });\n        }\n    };\n    Selection.prototype.applySpaceSelection = function (target) {\n        if (target.classList.contains('e-checkselectall')) {\n            this.checkedTarget = target;\n            this.checkSelectAll(this.checkedTarget);\n        }\n        else {\n            if (target.classList.contains('e-checkselect')) {\n                this.checkedTarget = target;\n                this.checkSelect(this.checkedTarget);\n            }\n        }\n    };\n    Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection &&\n            !this.selectionSettings.checkboxOnly) {\n            this.checkSelectAllAction(false);\n            this.checkedTarget = null;\n        }\n        if (this.isRowType() && !this.selectionSettings.checkboxOnly) {\n            if (this.parent.frozenRows) {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n            else {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n    };\n    Selection.prototype.applyUpDown = function (rowIndex) {\n        if (rowIndex < 0) {\n            return;\n        }\n        if (!this.target) {\n            this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n        }\n        var cIndex = parseInt(this.target.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex), 10) - 1;\n        var row = this.contentRenderer.getRowByIndex(rowIndex);\n        if (row) {\n            this.target = row.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell)[parseInt(cIndex.toString(), 10)];\n        }\n        this.addAttribute(this.target);\n        if (this.parent.element.classList.contains('e-gridcell-read')) {\n            var targetLabel = this.target.getAttribute('aria-label');\n            targetLabel = this.target.innerHTML;\n            this.target.setAttribute('aria-label', targetLabel);\n        }\n    };\n    Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n        else if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n            this.addAttribute(this.target);\n        }\n    };\n    Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        else {\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n    };\n    /**\n     * Apply shift+down key selection\n     *\n     * @param {number} rowIndex - specfies the rowIndex\n     * @param {number} cellIndex - specifies the CellIndex\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n        this.isMultiShiftRequest = true;\n        if (this.isRowType() && !this.isSingleSel()) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(this.prevRowIndex)) {\n                this.selectRowsByRange(this.prevRowIndex, rowIndex);\n                this.applyUpDown(rowIndex);\n            }\n            else if (this.isPartialSelection) {\n                this.selectRow(rowIndex, true);\n            }\n            else {\n                this.selectRow(0, true);\n            }\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange(this.prevCIdxs || { rowIndex: 0, cellIndex: 0 }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n        this.isMultiShiftRequest = true;\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumnsByRange(this.prevColIndex, cellIndex);\n        }\n        else {\n            this.selectCellsByRange(this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.getstackedColumns = function (column) {\n        var innerColumnIndexes = [];\n        for (var i = 0, len = column.length; i < len; i++) {\n            if (column[parseInt(i.toString(), 10)].columns) {\n                this.getstackedColumns(column[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                innerColumnIndexes.push(column[parseInt(i.toString(), 10)]);\n            }\n        }\n        return innerColumnIndexes;\n    };\n    Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isRowType()) {\n            this.selectRow(rowIndex, true);\n            if (!(this.parent.enableVirtualization || this.parent.enableColumnVirtualization)) {\n                this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n            }\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        if (row) {\n            var cells = [].slice.call(row.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell));\n            var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n            var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n            if (detailIndentCell) {\n                cells.push(detailIndentCell);\n            }\n            if (dragdropIndentCell) {\n                cells.push(dragdropIndentCell);\n            }\n            _base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n        }\n        this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n    };\n    Selection.prototype.isRowType = function () {\n        return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isCellType = function () {\n        return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isSingleSel = function () {\n        return this.selectionSettings.type === 'Single';\n    };\n    Selection.prototype.getRenderer = function () {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentRenderer)) {\n            this.contentRenderer = this.factory.getRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_5__.RenderType.Content);\n        }\n        return this.contentRenderer;\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} returns the Object\n     */\n    Selection.prototype.getSelectedRecords = function () {\n        var selectedData = [];\n        if (!this.selectionSettings.persistSelection && this.selectedRecords.length) {\n            selectedData = this.parent.getRowsObject().filter(function (row) { return row.isSelected; })\n                .map(function (m) { return m.data; });\n        }\n        else {\n            selectedData = this.persistSelectedData;\n        }\n        if (this.checkVirtualCheckBox() && !this.parent.isPersistSelection) {\n            selectedData = this.virtualSelectedData;\n        }\n        return selectedData;\n    };\n    /**\n     * Select the column by passing start column index\n     *\n     * @param {number} index - specifies the index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumn = function (index) {\n        var gObj = this.parent;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.getColumns()[parseInt(index.toString(), 10)])) {\n            return;\n        }\n        var column = gObj.getColumnByIndex(index);\n        var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n        var isColSelected = selectedCol.classList.contains('e-columnselection');\n        if ((!gObj.selectionSettings.allowColumnSelection)) {\n            return;\n        }\n        var isMultiColumns = this.selectedColumnsIndexes.length > 1 &&\n            this.selectedColumnsIndexes.indexOf(index) > -1;\n        this.clearColDependency();\n        if (!this.selectionSettings.enableToggle || isMultiColumns || !isColSelected) {\n            var args = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(args, _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnSelecting);\n            if (args.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            if (isMultiColumns || !(isColSelected && gObj.selectionSettings.enableToggle && index === this.prevColIndex)) {\n                this.updateColSelection(selectedCol, index);\n            }\n            var selectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnSelected);\n        }\n        this.updateColProps(index);\n    };\n    /**\n     * Select the columns by passing start and end column index\n     *\n     * @param  {number} startIndex - specifies the start index\n     * @param  {number} endIndex - specifies the end index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n        var gObj = this.parent;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.getColumns()[parseInt(startIndex.toString(), 10)])) {\n            return;\n        }\n        var indexes = [];\n        if (gObj.selectionSettings.type === 'Single' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(endIndex)) {\n            indexes[0] = startIndex;\n        }\n        else {\n            var min = startIndex < endIndex;\n            for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n                indexes.push(i);\n            }\n        }\n        this.selectColumns(indexes);\n    };\n    /**\n     * Select the columns by passing column indexes\n     *\n     * @param  {number[]} columnIndexes - specifies the columnIndexes\n     * @returns {void}\n     */\n    Selection.prototype.selectColumns = function (columnIndexes) {\n        var gObj = this.parent;\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            columnIndexes = [columnIndexes[0]];\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.clearColDependency();\n        var selectingArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            cancel: false, target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n        };\n        this.onActionBegin(selectingArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnSelecting);\n        if (selectingArgs.cancel) {\n            this.disableInteracted();\n            return;\n        }\n        for (var i = 0, len = columnIndexes.length; i < len; i++) {\n            this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[parseInt(i.toString(), 10)]).uid), columnIndexes[parseInt(i.toString(), 10)]);\n        }\n        selectedCol = this.getselectedCols();\n        var selectedArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n        };\n        this.onActionComplete(selectedArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnSelected);\n        this.updateColProps(columnIndexes[0]);\n    };\n    /**\n     * Select the column with existing column by passing column index\n     *\n     * @param  {number} startIndex - specifies the start index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnWithExisting = function (startIndex) {\n        var gObj = this.parent;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.getColumns()[parseInt(startIndex.toString(), 10)])) {\n            return;\n        }\n        var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            this.clearColDependency();\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n            this.clearColumnSelection(startIndex);\n        }\n        else {\n            var selectingArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: gObj.getColumnByIndex(startIndex),\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(selectingArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnSelecting);\n            if (selectingArgs.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            this.updateColSelection(newCol, startIndex);\n            selectedCol = this.getselectedCols();\n            var selectedArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                column: gObj.getColumnByIndex(startIndex),\n                columnIndexes: this.selectedColumnsIndexes,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnSelected);\n        }\n        this.updateColProps(startIndex);\n    };\n    /**\n     * Clear the column selection\n     *\n     * @param {number} clearIndex - specifies the clearIndex\n     * @returns {void}\n     */\n    Selection.prototype.clearColumnSelection = function (clearIndex) {\n        if (this.isColumnSelected) {\n            var gObj = this.parent;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n                return;\n            }\n            var index = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(clearIndex) ? clearIndex :\n                this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n            var column = gObj.getColumnByIndex(index);\n            var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n            var deselectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted\n            };\n            var isCanceled = this.columnDeselect(deselectedArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnDeselecting);\n            if (isCanceled) {\n                this.disableInteracted();\n                return;\n            }\n            var selectedHeader = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(clearIndex) ? [selectedCol] :\n                [].slice.call(gObj.getHeaderContent().getElementsByClassName('e-columnselection'));\n            var selectedCells = this.getSelectedColumnCells(clearIndex);\n            for (var i = 0, len = selectedHeader.length; i < len; i++) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveActiveClasses)([selectedHeader[parseInt(i.toString(), 10)]], false, 'e-columnselection');\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveActiveClasses)([selectedCells[parseInt(i.toString(), 10)]], false, 'e-columnselection');\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(clearIndex)) {\n                this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n                this.parent.getColumns()[parseInt(clearIndex.toString(), 10)].isSelected = false;\n            }\n            else {\n                this.columnDeselect(deselectedArgs, _base_constant__WEBPACK_IMPORTED_MODULE_3__.columnDeselected);\n                this.selectedColumnsIndexes = [];\n                this.isColumnSelected = false;\n                this.parent.getColumns().filter(function (col) { return col.isSelected = false; });\n            }\n        }\n    };\n    Selection.prototype.getselectedCols = function () {\n        var gObj = this.parent;\n        var selectedCol;\n        if (this.selectedColumnsIndexes.length > 1) {\n            selectedCol = [];\n            for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n                (selectedCol).push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[parseInt(i.toString(), 10)]).uid));\n            }\n        }\n        else {\n            selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n        }\n        return selectedCol;\n    };\n    Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n        var gObj = this.parent;\n        var isRowTemplate = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.rowTemplate);\n        var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n        var seletedcells = [];\n        var selectionString = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(clearIndex) ? '[aria-colindex=\"' + (clearIndex + 1) + '\"]' : '.e-columnselection';\n        for (var i = 0, len = rows.length; i < len; i++) {\n            seletedcells = seletedcells.concat([].slice.call(rows[parseInt(i.toString(), 10)].querySelectorAll(selectionString)));\n        }\n        return seletedcells;\n    };\n    Selection.prototype.columnDeselect = function (args, event) {\n        if (event === 'columnDeselected') {\n            delete args.cancel;\n        }\n        this.onActionComplete(args, event);\n        return args.cancel;\n    };\n    Selection.prototype.updateColProps = function (startIndex) {\n        this.prevColIndex = startIndex;\n        this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n    };\n    Selection.prototype.clearColDependency = function () {\n        this.clearColumnSelection();\n        this.selectedColumnsIndexes = [];\n    };\n    Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.getColumns()[parseInt(startIndex.toString(), 10)])) {\n            return;\n        }\n        var isRowTemplate = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.rowTemplate);\n        var rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n        this.selectedColumnsIndexes.push(startIndex);\n        this.parent.getColumns()[parseInt(startIndex.toString(), 10)].isSelected = true;\n        startIndex = startIndex + this.parent.getIndentCount();\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveActiveClasses)([selectedCol], true, 'e-columnselection');\n        for (var j = 0, len = rows.length; j < len; j++) {\n            if (rows[parseInt(j.toString(), 10)].classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.row)) {\n                if ((rows[parseInt(j.toString(), 10)].classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.editedRow)\n                    || rows[parseInt(j.toString(), 10)].classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.addedRow))\n                    && this.parent.editSettings.mode === 'Normal'\n                    && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rows[parseInt(j.toString(), 10)].querySelector('tr').childNodes[parseInt(startIndex.toString(), 10)])) {\n                    (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveActiveClasses)([rows[parseInt(j.toString(), 10)].querySelector('tr').childNodes[parseInt(startIndex.toString(), 10)]], true, 'e-columnselection');\n                }\n                else {\n                    if (this.parent.isSpan && this.parent.isFrozenGrid()) {\n                        var cells = rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell');\n                        for (var i = 0; i < cells.length; i++) {\n                            if (cells[parseInt(i.toString(), 10)].getAttribute('aria-colindex') === selectedCol.getAttribute('aria-colindex')) {\n                                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveActiveClasses)([cells[parseInt(i.toString(), 10)]], true, 'e-columnselection');\n                            }\n                        }\n                    }\n                    else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rows[parseInt(j.toString(), 10)].childNodes[parseInt(startIndex.toString(), 10)])) {\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveActiveClasses)([rows[parseInt(j.toString(), 10)].childNodes[parseInt(startIndex.toString(), 10)]], true, 'e-columnselection');\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.headerSelectionHandler = function (colIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            this.selectColumn(colIndex);\n        }\n        else if (this.isMultiShiftRequest) {\n            this.selectColumnsByRange((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n        }\n        else {\n            this.selectColumnWithExisting(colIndex);\n        }\n    };\n    // eslint-disable-next-line camelcase\n    Selection.prototype.addEventListener_checkbox = function () {\n        var _this = this;\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.dataReady, this.dataReady, this);\n        this.onDataBoundFunction = this.onDataBound.bind(this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.dataBound, this.onDataBoundFunction);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshInfinitePersistSelection, this.onDataBoundFunction);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.contentReady, this.checkBoxSelectionChanged, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.onEmpty, this.setCheckAllForEmptyGrid, this);\n        this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionComplete, this.actionCompleteFunc);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.click, this.clickHandler, this);\n        this.resizeEndFn = function () {\n            _this.updateAutoFillPosition();\n            _this.drawBorders();\n        };\n        this.resizeEndFn.bind(this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.resizeStop, this.resizeEndFn);\n    };\n    // eslint-disable-next-line camelcase\n    Selection.prototype.removeEventListener_checkbox = function () {\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.dataReady, this.dataReady);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.dataBound, this.onDataBoundFunction);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionComplete, this.actionCompleteFunc);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshInfinitePersistSelection, this.onDataBoundFunction);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.onEmpty, this.setCheckAllForEmptyGrid);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.click, this.clickHandler);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_3__.resizeStop, this.resizeEndFn);\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeRefreshOnDataChange, this.initPerisistSelection);\n    };\n    Selection.prototype.setCheckAllForEmptyGrid = function () {\n        var checkAllBox = this.getCheckAllBox();\n        if (checkAllBox) {\n            this.parent.isCheckBoxSelection = true;\n            var spanEle = checkAllBox.nextElementSibling;\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([spanEle.parentElement], ['e-checkbox-disabled']);\n        }\n    };\n    Selection.prototype.dataReady = function (e) {\n        this.isHeaderCheckboxClicked = false;\n        var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n            this.disableUI = !this.parent.enableImmutableMode && !(e.requestType === 'save' && e['action'] === 'add');\n            this.clearSelection();\n            this.setCheckAllState();\n            this.disableUI = false;\n        }\n    };\n    Selection.prototype.actionCompleteHandler = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n    };\n    Selection.prototype.selectRowIndex = function (index) {\n        this.parent.isSelectedRowIndexUpdating = true;\n        if (((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.selectedRowIndex) || this.parent.selectedRowIndex === -1) || !this.parent.enablePersistence) {\n            this.parent.selectedRowIndex = index;\n        }\n        else {\n            this.parent.selectedRowIndex = -1;\n        }\n    };\n    Selection.prototype.disableInteracted = function () {\n        this.isInteracted = false;\n    };\n    Selection.prototype.activeTarget = function () {\n        this.actualTarget = this.isInteracted ? this.actualTarget : null;\n    };\n    return Selection;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/show-hide.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/show-hide.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShowHide: () => (/* binding */ ShowHide)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _services_width_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/width-controller */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n\n\n\n\n/**\n * The `ShowHide` module is used to control column visibility.\n */\nvar ShowHide = /** @class */ (function () {\n    /**\n     * Constructor for the show hide module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @hidden\n     */\n    function ShowHide(parent) {\n        this.colName = [];\n        this.isShowHide = false;\n        this.parent = parent;\n        this.addEventListener();\n        this.widthService = new _services_width_controller__WEBPACK_IMPORTED_MODULE_1__.ColumnWidthService(parent);\n    }\n    ShowHide.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: _base_constant__WEBPACK_IMPORTED_MODULE_2__.batchCancel, handler: this.batchChanges },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_2__.batchCnfrmDlgCancel, handler: this.resetColumnState }\n        ];\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.addRemoveEventListener)(this.parent, this.evtHandlers, true, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ShowHide.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.addRemoveEventListener)(this.parent, this.evtHandlers, false);\n    };\n    ShowHide.prototype.batchChanges = function () {\n        if (this.isShowHide) {\n            this.isShowHide = false;\n            this.setVisible(this.colName, this.changedCol);\n            this.changedCol = this.colName = [];\n        }\n    };\n    /**\n     * Shows a column by column name.\n     *\n     * @param  {string|string[]} columnName - Defines a single or collection of column names to show.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    ShowHide.prototype.show = function (columnName, showBy) {\n        var keys = this.getToggleFields(columnName);\n        var columns = this.getColumns(keys, showBy);\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.tooltipDestroy, { module: 'edit' });\n        for (var i = 0; i < columns.length; i++) {\n            columns[parseInt(i.toString(), 10)].visible = true;\n        }\n        this.setVisible(columns);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} columnName - Defines a single or collection of column names to hide.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    ShowHide.prototype.hide = function (columnName, hideBy) {\n        var keys = this.getToggleFields(columnName);\n        var columns = this.getColumns(keys, hideBy);\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.tooltipDestroy, { module: 'edit' });\n        for (var i = 0; i < columns.length; i++) {\n            columns[parseInt(i.toString(), 10)].visible = false;\n        }\n        this.setVisible(columns);\n    };\n    ShowHide.prototype.getToggleFields = function (key) {\n        var finalized = [];\n        if (typeof key === 'string') {\n            finalized = [key];\n        }\n        else {\n            finalized = key;\n        }\n        return finalized;\n    };\n    ShowHide.prototype.getColumns = function (keys, getKeyBy) {\n        var _this = this;\n        var columns = (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.iterateArrayOrObject)(keys, function (key) {\n            return (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.iterateArrayOrObject)(_this.parent.columnModel, function (item) {\n                if (item[\"\" + getKeyBy] === key) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        });\n        return columns;\n    };\n    ShowHide.prototype.batchActionPrevent = function (columns, changedStateColumns) {\n        if (changedStateColumns === void 0) { changedStateColumns = []; }\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_3__.isActionPrevent)(this.parent)) {\n            this.colName = columns;\n            this.changedCol = changedStateColumns;\n            this.parent.closeEdit();\n            return false;\n        }\n        return true;\n    };\n    ShowHide.prototype.resetColumnState = function () {\n        if (this.isShowHide) {\n            for (var i = 0; i < this.colName.length; i++) {\n                this.colName[parseInt(i.toString(), 10)].visible = !this.colName[parseInt(i.toString(), 10)].visible;\n            }\n        }\n    };\n    /**\n     * Shows or hides columns by given column collection.\n     *\n     * @private\n     * @param {Column[]} columns - Specifies the columns.\n     * @param {Column[]} changedStateColumns - specifies the changedStateColumns\n     * @returns {void}\n     */\n    ShowHide.prototype.setVisible = function (columns, changedStateColumns) {\n        var _this = this;\n        if (changedStateColumns === void 0) { changedStateColumns = []; }\n        this.isShowHide = true;\n        if (!this.batchActionPrevent(columns, changedStateColumns)) {\n            return;\n        }\n        changedStateColumns = (changedStateColumns.length > 0) ? changedStateColumns : columns;\n        var args = {\n            requestType: 'columnstate',\n            cancel: false,\n            columns: changedStateColumns\n        };\n        var cancel = 'cancel';\n        if (this.parent.enableInfiniteScrolling && this.parent.allowGrouping\n            && this.parent.groupModule.groupSettings.columns.length > 0) {\n            this.parent.contentModule.visibleRows = [];\n        }\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionBegin, args, function (showHideArgs) {\n            var currentViewCols = _this.parent.getColumns();\n            columns = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns) ? currentViewCols : columns;\n            if (showHideArgs[\"\" + cancel]) {\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.resetColumns, { showHideArgs: showHideArgs });\n                if (columns.length > 0) {\n                    columns[0].visible = true;\n                }\n                return;\n            }\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.destroyEditForm, args);\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_3__.isGroupAdaptive)(_this.parent)) {\n                _this.parent.contentModule.emptyVcRows();\n            }\n            var addedRow = _this.parent.element.querySelector('.e-addedrow');\n            if (_this.parent.editSettings.showAddNewRow && addedRow) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(addedRow);\n                if (_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling) {\n                    _this.parent.isAddNewRow = true;\n                }\n                _this.parent.addNewRowFocus = true;\n                _this.parent.isEdit = false;\n            }\n            if (_this.parent.allowSelection && _this.parent.getSelectedRecords().length &&\n                !_this.parent.selectionSettings.persistSelection) {\n                _this.parent.clearSelection();\n            }\n            if (_this.parent.enableColumnVirtualization) {\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshFrozenPosition, { isModeChg: true });\n            }\n            else {\n                if (_this.parent.isFrozenGrid() && columns.length) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.refreshFrozenPosition, { isModeChg: true });\n                }\n                else {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnVisibilityChanged, columns);\n                }\n            }\n            var params = {\n                requestType: 'columnstate',\n                columns: changedStateColumns\n            };\n            _this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_2__.actionComplete, params);\n            var startAdd = !_this.parent.element.querySelector('.e-addedrow');\n            if (_this.parent.editSettings.showAddNewRow && startAdd) {\n                _this.parent.isEdit = false;\n                _this.parent.addRecord();\n                if (!(_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling)) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.showAddNewRowFocus, {});\n                }\n            }\n            if (_this.parent.columnQueryMode !== 'All') {\n                _this.parent.refresh();\n            }\n        });\n        if (!this.parent.groupSettings.columns.length) {\n            if (this.parent.autoFit) {\n                this.parent.preventAdjustColumns();\n            }\n            else if (this.parent.allowResizing && this.parent.resizeSettings.mode === 'Normal') {\n                var isMaxWidth = this.parent.getHeaderTable().style.width.indexOf('px') === -1;\n                this.widthService.setWidthToTable(isMaxWidth);\n            }\n        }\n    };\n    return ShowHide;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/show-hide.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accessPredicate: () => (/* binding */ accessPredicate),\n/* harmony export */   actionBegin: () => (/* binding */ actionBegin),\n/* harmony export */   actionComplete: () => (/* binding */ actionComplete),\n/* harmony export */   actionFailure: () => (/* binding */ actionFailure),\n/* harmony export */   addBegin: () => (/* binding */ addBegin),\n/* harmony export */   addComplete: () => (/* binding */ addComplete),\n/* harmony export */   addDeleteAction: () => (/* binding */ addDeleteAction),\n/* harmony export */   afterContentRender: () => (/* binding */ afterContentRender),\n/* harmony export */   afterFilterColumnMenuClose: () => (/* binding */ afterFilterColumnMenuClose),\n/* harmony export */   appendInfiniteContent: () => (/* binding */ appendInfiniteContent),\n/* harmony export */   autoCol: () => (/* binding */ autoCol),\n/* harmony export */   batchAdd: () => (/* binding */ batchAdd),\n/* harmony export */   batchCancel: () => (/* binding */ batchCancel),\n/* harmony export */   batchCnfrmDlgCancel: () => (/* binding */ batchCnfrmDlgCancel),\n/* harmony export */   batchDelete: () => (/* binding */ batchDelete),\n/* harmony export */   batchEditFormRendered: () => (/* binding */ batchEditFormRendered),\n/* harmony export */   batchForm: () => (/* binding */ batchForm),\n/* harmony export */   beforeAutoFill: () => (/* binding */ beforeAutoFill),\n/* harmony export */   beforeBatchAdd: () => (/* binding */ beforeBatchAdd),\n/* harmony export */   beforeBatchCancel: () => (/* binding */ beforeBatchCancel),\n/* harmony export */   beforeBatchDelete: () => (/* binding */ beforeBatchDelete),\n/* harmony export */   beforeBatchSave: () => (/* binding */ beforeBatchSave),\n/* harmony export */   beforeCellFocused: () => (/* binding */ beforeCellFocused),\n/* harmony export */   beforeCheckboxRenderer: () => (/* binding */ beforeCheckboxRenderer),\n/* harmony export */   beforeCheckboxRendererQuery: () => (/* binding */ beforeCheckboxRendererQuery),\n/* harmony export */   beforeCheckboxfilterRenderer: () => (/* binding */ beforeCheckboxfilterRenderer),\n/* harmony export */   beforeCopy: () => (/* binding */ beforeCopy),\n/* harmony export */   beforeCustomFilterOpen: () => (/* binding */ beforeCustomFilterOpen),\n/* harmony export */   beforeDataBound: () => (/* binding */ beforeDataBound),\n/* harmony export */   beforeDetailTemplateDetach: () => (/* binding */ beforeDetailTemplateDetach),\n/* harmony export */   beforeExcelExport: () => (/* binding */ beforeExcelExport),\n/* harmony export */   beforeFltrcMenuOpen: () => (/* binding */ beforeFltrcMenuOpen),\n/* harmony export */   beforeFragAppend: () => (/* binding */ beforeFragAppend),\n/* harmony export */   beforeOpenAdaptiveDialog: () => (/* binding */ beforeOpenAdaptiveDialog),\n/* harmony export */   beforeOpenColumnChooser: () => (/* binding */ beforeOpenColumnChooser),\n/* harmony export */   beforePaste: () => (/* binding */ beforePaste),\n/* harmony export */   beforePdfExport: () => (/* binding */ beforePdfExport),\n/* harmony export */   beforePrint: () => (/* binding */ beforePrint),\n/* harmony export */   beforeRefreshOnDataChange: () => (/* binding */ beforeRefreshOnDataChange),\n/* harmony export */   beforeStartEdit: () => (/* binding */ beforeStartEdit),\n/* harmony export */   beginEdit: () => (/* binding */ beginEdit),\n/* harmony export */   bulkSave: () => (/* binding */ bulkSave),\n/* harmony export */   cBoxFltrBegin: () => (/* binding */ cBoxFltrBegin),\n/* harmony export */   cBoxFltrComplete: () => (/* binding */ cBoxFltrComplete),\n/* harmony export */   cancelBegin: () => (/* binding */ cancelBegin),\n/* harmony export */   captionActionComplete: () => (/* binding */ captionActionComplete),\n/* harmony export */   cellDeselected: () => (/* binding */ cellDeselected),\n/* harmony export */   cellDeselecting: () => (/* binding */ cellDeselecting),\n/* harmony export */   cellEdit: () => (/* binding */ cellEdit),\n/* harmony export */   cellFocused: () => (/* binding */ cellFocused),\n/* harmony export */   cellSave: () => (/* binding */ cellSave),\n/* harmony export */   cellSaved: () => (/* binding */ cellSaved),\n/* harmony export */   cellSelected: () => (/* binding */ cellSelected),\n/* harmony export */   cellSelecting: () => (/* binding */ cellSelecting),\n/* harmony export */   cellSelectionBegin: () => (/* binding */ cellSelectionBegin),\n/* harmony export */   cellSelectionComplete: () => (/* binding */ cellSelectionComplete),\n/* harmony export */   checkBoxChange: () => (/* binding */ checkBoxChange),\n/* harmony export */   checkScrollReset: () => (/* binding */ checkScrollReset),\n/* harmony export */   click: () => (/* binding */ click),\n/* harmony export */   closeBatch: () => (/* binding */ closeBatch),\n/* harmony export */   closeEdit: () => (/* binding */ closeEdit),\n/* harmony export */   closeFilterDialog: () => (/* binding */ closeFilterDialog),\n/* harmony export */   closeInline: () => (/* binding */ closeInline),\n/* harmony export */   colGroupRefresh: () => (/* binding */ colGroupRefresh),\n/* harmony export */   columnChooserCancelBtnClick: () => (/* binding */ columnChooserCancelBtnClick),\n/* harmony export */   columnChooserClose: () => (/* binding */ columnChooserClose),\n/* harmony export */   columnChooserOpened: () => (/* binding */ columnChooserOpened),\n/* harmony export */   columnChooserSearch: () => (/* binding */ columnChooserSearch),\n/* harmony export */   columnChooserUpdate: () => (/* binding */ columnChooserUpdate),\n/* harmony export */   columnDataStateChange: () => (/* binding */ columnDataStateChange),\n/* harmony export */   columnDeselected: () => (/* binding */ columnDeselected),\n/* harmony export */   columnDeselecting: () => (/* binding */ columnDeselecting),\n/* harmony export */   columnDrag: () => (/* binding */ columnDrag),\n/* harmony export */   columnDragStart: () => (/* binding */ columnDragStart),\n/* harmony export */   columnDragStop: () => (/* binding */ columnDragStop),\n/* harmony export */   columnDrop: () => (/* binding */ columnDrop),\n/* harmony export */   columnMenuClick: () => (/* binding */ columnMenuClick),\n/* harmony export */   columnMenuOpen: () => (/* binding */ columnMenuOpen),\n/* harmony export */   columnPositionChanged: () => (/* binding */ columnPositionChanged),\n/* harmony export */   columnSelected: () => (/* binding */ columnSelected),\n/* harmony export */   columnSelecting: () => (/* binding */ columnSelecting),\n/* harmony export */   columnSelectionBegin: () => (/* binding */ columnSelectionBegin),\n/* harmony export */   columnSelectionComplete: () => (/* binding */ columnSelectionComplete),\n/* harmony export */   columnVisibilityChanged: () => (/* binding */ columnVisibilityChanged),\n/* harmony export */   columnWidthChanged: () => (/* binding */ columnWidthChanged),\n/* harmony export */   columnsPrepared: () => (/* binding */ columnsPrepared),\n/* harmony export */   commandClick: () => (/* binding */ commandClick),\n/* harmony export */   commandColumnDestroy: () => (/* binding */ commandColumnDestroy),\n/* harmony export */   componentRendered: () => (/* binding */ componentRendered),\n/* harmony export */   contentReady: () => (/* binding */ contentReady),\n/* harmony export */   contextMenuClick: () => (/* binding */ contextMenuClick),\n/* harmony export */   contextMenuOpen: () => (/* binding */ contextMenuOpen),\n/* harmony export */   createVirtualValidationForm: () => (/* binding */ createVirtualValidationForm),\n/* harmony export */   created: () => (/* binding */ created),\n/* harmony export */   crudAction: () => (/* binding */ crudAction),\n/* harmony export */   customFilterClose: () => (/* binding */ customFilterClose),\n/* harmony export */   dataBound: () => (/* binding */ dataBound),\n/* harmony export */   dataReady: () => (/* binding */ dataReady),\n/* harmony export */   dataSourceChanged: () => (/* binding */ dataSourceChanged),\n/* harmony export */   dataSourceModified: () => (/* binding */ dataSourceModified),\n/* harmony export */   dataStateChange: () => (/* binding */ dataStateChange),\n/* harmony export */   dblclick: () => (/* binding */ dblclick),\n/* harmony export */   deleteBegin: () => (/* binding */ deleteBegin),\n/* harmony export */   deleteComplete: () => (/* binding */ deleteComplete),\n/* harmony export */   destroy: () => (/* binding */ destroy),\n/* harmony export */   destroyAutoFillElements: () => (/* binding */ destroyAutoFillElements),\n/* harmony export */   destroyChildGrid: () => (/* binding */ destroyChildGrid),\n/* harmony export */   destroyEditForm: () => (/* binding */ destroyEditForm),\n/* harmony export */   destroyForm: () => (/* binding */ destroyForm),\n/* harmony export */   destroyed: () => (/* binding */ destroyed),\n/* harmony export */   detachDetailTemplate: () => (/* binding */ detachDetailTemplate),\n/* harmony export */   detailDataBound: () => (/* binding */ detailDataBound),\n/* harmony export */   detailIndentCellInfo: () => (/* binding */ detailIndentCellInfo),\n/* harmony export */   detailStateChange: () => (/* binding */ detailStateChange),\n/* harmony export */   dialogDestroy: () => (/* binding */ dialogDestroy),\n/* harmony export */   doubleTap: () => (/* binding */ doubleTap),\n/* harmony export */   editBegin: () => (/* binding */ editBegin),\n/* harmony export */   editComplete: () => (/* binding */ editComplete),\n/* harmony export */   editNextValCell: () => (/* binding */ editNextValCell),\n/* harmony export */   editReset: () => (/* binding */ editReset),\n/* harmony export */   endAdd: () => (/* binding */ endAdd),\n/* harmony export */   endDelete: () => (/* binding */ endDelete),\n/* harmony export */   endEdit: () => (/* binding */ endEdit),\n/* harmony export */   enterKeyHandler: () => (/* binding */ enterKeyHandler),\n/* harmony export */   excelAggregateQueryCellInfo: () => (/* binding */ excelAggregateQueryCellInfo),\n/* harmony export */   excelExportComplete: () => (/* binding */ excelExportComplete),\n/* harmony export */   excelHeaderQueryCellInfo: () => (/* binding */ excelHeaderQueryCellInfo),\n/* harmony export */   excelQueryCellInfo: () => (/* binding */ excelQueryCellInfo),\n/* harmony export */   expandChildGrid: () => (/* binding */ expandChildGrid),\n/* harmony export */   exportDataBound: () => (/* binding */ exportDataBound),\n/* harmony export */   exportDetailDataBound: () => (/* binding */ exportDetailDataBound),\n/* harmony export */   exportDetailTemplate: () => (/* binding */ exportDetailTemplate),\n/* harmony export */   exportGroupCaption: () => (/* binding */ exportGroupCaption),\n/* harmony export */   exportRowDataBound: () => (/* binding */ exportRowDataBound),\n/* harmony export */   filterAfterOpen: () => (/* binding */ filterAfterOpen),\n/* harmony export */   filterBeforeOpen: () => (/* binding */ filterBeforeOpen),\n/* harmony export */   filterBegin: () => (/* binding */ filterBegin),\n/* harmony export */   filterCboxValue: () => (/* binding */ filterCboxValue),\n/* harmony export */   filterChoiceRequest: () => (/* binding */ filterChoiceRequest),\n/* harmony export */   filterCmenuSelect: () => (/* binding */ filterCmenuSelect),\n/* harmony export */   filterComplete: () => (/* binding */ filterComplete),\n/* harmony export */   filterDialogClose: () => (/* binding */ filterDialogClose),\n/* harmony export */   filterDialogCreated: () => (/* binding */ filterDialogCreated),\n/* harmony export */   filterMenuClose: () => (/* binding */ filterMenuClose),\n/* harmony export */   filterOpen: () => (/* binding */ filterOpen),\n/* harmony export */   filterSearchBegin: () => (/* binding */ filterSearchBegin),\n/* harmony export */   fltrPrevent: () => (/* binding */ fltrPrevent),\n/* harmony export */   foreignKeyData: () => (/* binding */ foreignKeyData),\n/* harmony export */   freezeRefresh: () => (/* binding */ freezeRefresh),\n/* harmony export */   freezeRender: () => (/* binding */ freezeRender),\n/* harmony export */   frozenHeight: () => (/* binding */ frozenHeight),\n/* harmony export */   generateQuery: () => (/* binding */ generateQuery),\n/* harmony export */   getAggregateQuery: () => (/* binding */ getAggregateQuery),\n/* harmony export */   getFilterBarOperator: () => (/* binding */ getFilterBarOperator),\n/* harmony export */   getForeignKeyData: () => (/* binding */ getForeignKeyData),\n/* harmony export */   getVirtualData: () => (/* binding */ getVirtualData),\n/* harmony export */   groupAggregates: () => (/* binding */ groupAggregates),\n/* harmony export */   groupBegin: () => (/* binding */ groupBegin),\n/* harmony export */   groupCollapse: () => (/* binding */ groupCollapse),\n/* harmony export */   groupComplete: () => (/* binding */ groupComplete),\n/* harmony export */   headerCellInfo: () => (/* binding */ headerCellInfo),\n/* harmony export */   headerDrop: () => (/* binding */ headerDrop),\n/* harmony export */   headerRefreshed: () => (/* binding */ headerRefreshed),\n/* harmony export */   hierarchyPrint: () => (/* binding */ hierarchyPrint),\n/* harmony export */   immutableBatchCancel: () => (/* binding */ immutableBatchCancel),\n/* harmony export */   inBoundModelChanged: () => (/* binding */ inBoundModelChanged),\n/* harmony export */   infiniteCrudCancel: () => (/* binding */ infiniteCrudCancel),\n/* harmony export */   infiniteEditHandler: () => (/* binding */ infiniteEditHandler),\n/* harmony export */   infinitePageQuery: () => (/* binding */ infinitePageQuery),\n/* harmony export */   infiniteScrollComplete: () => (/* binding */ infiniteScrollComplete),\n/* harmony export */   infiniteScrollHandler: () => (/* binding */ infiniteScrollHandler),\n/* harmony export */   infiniteShowHide: () => (/* binding */ infiniteShowHide),\n/* harmony export */   initForeignKeyColumn: () => (/* binding */ initForeignKeyColumn),\n/* harmony export */   initialCollapse: () => (/* binding */ initialCollapse),\n/* harmony export */   initialEnd: () => (/* binding */ initialEnd),\n/* harmony export */   initialLoad: () => (/* binding */ initialLoad),\n/* harmony export */   keyPressed: () => (/* binding */ keyPressed),\n/* harmony export */   lastRowCellBorderUpdated: () => (/* binding */ lastRowCellBorderUpdated),\n/* harmony export */   lazyLoadGroupCollapse: () => (/* binding */ lazyLoadGroupCollapse),\n/* harmony export */   lazyLoadGroupExpand: () => (/* binding */ lazyLoadGroupExpand),\n/* harmony export */   lazyLoadScrollHandler: () => (/* binding */ lazyLoadScrollHandler),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   modelChanged: () => (/* binding */ modelChanged),\n/* harmony export */   nextCellIndex: () => (/* binding */ nextCellIndex),\n/* harmony export */   onEmpty: () => (/* binding */ onEmpty),\n/* harmony export */   onResize: () => (/* binding */ onResize),\n/* harmony export */   pageBegin: () => (/* binding */ pageBegin),\n/* harmony export */   pageComplete: () => (/* binding */ pageComplete),\n/* harmony export */   pagerRefresh: () => (/* binding */ pagerRefresh),\n/* harmony export */   partialRefresh: () => (/* binding */ partialRefresh),\n/* harmony export */   pdfAggregateQueryCellInfo: () => (/* binding */ pdfAggregateQueryCellInfo),\n/* harmony export */   pdfExportComplete: () => (/* binding */ pdfExportComplete),\n/* harmony export */   pdfHeaderQueryCellInfo: () => (/* binding */ pdfHeaderQueryCellInfo),\n/* harmony export */   pdfQueryCellInfo: () => (/* binding */ pdfQueryCellInfo),\n/* harmony export */   preventBatch: () => (/* binding */ preventBatch),\n/* harmony export */   preventFrozenScrollRefresh: () => (/* binding */ preventFrozenScrollRefresh),\n/* harmony export */   printComplete: () => (/* binding */ printComplete),\n/* harmony export */   printGridInit: () => (/* binding */ printGridInit),\n/* harmony export */   queryCellInfo: () => (/* binding */ queryCellInfo),\n/* harmony export */   recordAdded: () => (/* binding */ recordAdded),\n/* harmony export */   recordClick: () => (/* binding */ recordClick),\n/* harmony export */   recordDoubleClick: () => (/* binding */ recordDoubleClick),\n/* harmony export */   refreshAggregateCell: () => (/* binding */ refreshAggregateCell),\n/* harmony export */   refreshAggregates: () => (/* binding */ refreshAggregates),\n/* harmony export */   refreshComplete: () => (/* binding */ refreshComplete),\n/* harmony export */   refreshCustomFilterClearBtn: () => (/* binding */ refreshCustomFilterClearBtn),\n/* harmony export */   refreshCustomFilterOkBtn: () => (/* binding */ refreshCustomFilterOkBtn),\n/* harmony export */   refreshExpandandCollapse: () => (/* binding */ refreshExpandandCollapse),\n/* harmony export */   refreshFooterRenderer: () => (/* binding */ refreshFooterRenderer),\n/* harmony export */   refreshFrozenColumns: () => (/* binding */ refreshFrozenColumns),\n/* harmony export */   refreshFrozenHeight: () => (/* binding */ refreshFrozenHeight),\n/* harmony export */   refreshFrozenPosition: () => (/* binding */ refreshFrozenPosition),\n/* harmony export */   refreshHandlers: () => (/* binding */ refreshHandlers),\n/* harmony export */   refreshInfiniteCurrentViewData: () => (/* binding */ refreshInfiniteCurrentViewData),\n/* harmony export */   refreshInfiniteEditrowindex: () => (/* binding */ refreshInfiniteEditrowindex),\n/* harmony export */   refreshInfiniteModeBlocks: () => (/* binding */ refreshInfiniteModeBlocks),\n/* harmony export */   refreshInfinitePersistSelection: () => (/* binding */ refreshInfinitePersistSelection),\n/* harmony export */   refreshResizePosition: () => (/* binding */ refreshResizePosition),\n/* harmony export */   refreshSplitFrozenColumn: () => (/* binding */ refreshSplitFrozenColumn),\n/* harmony export */   refreshVirtualBlock: () => (/* binding */ refreshVirtualBlock),\n/* harmony export */   refreshVirtualCache: () => (/* binding */ refreshVirtualCache),\n/* harmony export */   refreshVirtualEditFormCells: () => (/* binding */ refreshVirtualEditFormCells),\n/* harmony export */   refreshVirtualFrozenHeight: () => (/* binding */ refreshVirtualFrozenHeight),\n/* harmony export */   refreshVirtualFrozenRows: () => (/* binding */ refreshVirtualFrozenRows),\n/* harmony export */   refreshVirtualLazyLoadCache: () => (/* binding */ refreshVirtualLazyLoadCache),\n/* harmony export */   refreshVirtualMaxPage: () => (/* binding */ refreshVirtualMaxPage),\n/* harmony export */   removeInfiniteRows: () => (/* binding */ removeInfiniteRows),\n/* harmony export */   renderResponsiveChangeAction: () => (/* binding */ renderResponsiveChangeAction),\n/* harmony export */   renderResponsiveCmenu: () => (/* binding */ renderResponsiveCmenu),\n/* harmony export */   renderResponsiveColumnChooserDiv: () => (/* binding */ renderResponsiveColumnChooserDiv),\n/* harmony export */   reorderBegin: () => (/* binding */ reorderBegin),\n/* harmony export */   reorderComplete: () => (/* binding */ reorderComplete),\n/* harmony export */   resetColumns: () => (/* binding */ resetColumns),\n/* harmony export */   resetInfiniteBlocks: () => (/* binding */ resetInfiniteBlocks),\n/* harmony export */   resetVirtualFocus: () => (/* binding */ resetVirtualFocus),\n/* harmony export */   resizeStart: () => (/* binding */ resizeStart),\n/* harmony export */   resizeStop: () => (/* binding */ resizeStop),\n/* harmony export */   restoreFocus: () => (/* binding */ restoreFocus),\n/* harmony export */   rowDataBound: () => (/* binding */ rowDataBound),\n/* harmony export */   rowDeselected: () => (/* binding */ rowDeselected),\n/* harmony export */   rowDeselecting: () => (/* binding */ rowDeselecting),\n/* harmony export */   rowDrag: () => (/* binding */ rowDrag),\n/* harmony export */   rowDragAndDrop: () => (/* binding */ rowDragAndDrop),\n/* harmony export */   rowDragAndDropBegin: () => (/* binding */ rowDragAndDropBegin),\n/* harmony export */   rowDragAndDropComplete: () => (/* binding */ rowDragAndDropComplete),\n/* harmony export */   rowDragStart: () => (/* binding */ rowDragStart),\n/* harmony export */   rowDragStartHelper: () => (/* binding */ rowDragStartHelper),\n/* harmony export */   rowDrop: () => (/* binding */ rowDrop),\n/* harmony export */   rowModeChange: () => (/* binding */ rowModeChange),\n/* harmony export */   rowPositionChanged: () => (/* binding */ rowPositionChanged),\n/* harmony export */   rowSelected: () => (/* binding */ rowSelected),\n/* harmony export */   rowSelecting: () => (/* binding */ rowSelecting),\n/* harmony export */   rowSelectionBegin: () => (/* binding */ rowSelectionBegin),\n/* harmony export */   rowSelectionComplete: () => (/* binding */ rowSelectionComplete),\n/* harmony export */   rowsAdded: () => (/* binding */ rowsAdded),\n/* harmony export */   rowsRemoved: () => (/* binding */ rowsRemoved),\n/* harmony export */   rtlUpdated: () => (/* binding */ rtlUpdated),\n/* harmony export */   saveComplete: () => (/* binding */ saveComplete),\n/* harmony export */   scroll: () => (/* binding */ scroll),\n/* harmony export */   scrollToEdit: () => (/* binding */ scrollToEdit),\n/* harmony export */   searchBegin: () => (/* binding */ searchBegin),\n/* harmony export */   searchComplete: () => (/* binding */ searchComplete),\n/* harmony export */   selectRowOnContextOpen: () => (/* binding */ selectRowOnContextOpen),\n/* harmony export */   selectVirtualRow: () => (/* binding */ selectVirtualRow),\n/* harmony export */   setFreezeSelection: () => (/* binding */ setFreezeSelection),\n/* harmony export */   setFullScreenDialog: () => (/* binding */ setFullScreenDialog),\n/* harmony export */   setGroupCache: () => (/* binding */ setGroupCache),\n/* harmony export */   setHeightToFrozenElement: () => (/* binding */ setHeightToFrozenElement),\n/* harmony export */   setInfiniteCache: () => (/* binding */ setInfiniteCache),\n/* harmony export */   setInfiniteColFrozenHeight: () => (/* binding */ setInfiniteColFrozenHeight),\n/* harmony export */   setInfiniteFrozenHeight: () => (/* binding */ setInfiniteFrozenHeight),\n/* harmony export */   setReorderDestinationElement: () => (/* binding */ setReorderDestinationElement),\n/* harmony export */   setVirtualPageQuery: () => (/* binding */ setVirtualPageQuery),\n/* harmony export */   showAddNewRowFocus: () => (/* binding */ showAddNewRowFocus),\n/* harmony export */   showEmptyGrid: () => (/* binding */ showEmptyGrid),\n/* harmony export */   sortBegin: () => (/* binding */ sortBegin),\n/* harmony export */   sortComplete: () => (/* binding */ sortComplete),\n/* harmony export */   stickyScrollComplete: () => (/* binding */ stickyScrollComplete),\n/* harmony export */   textWrapRefresh: () => (/* binding */ textWrapRefresh),\n/* harmony export */   toolbarClick: () => (/* binding */ toolbarClick),\n/* harmony export */   toolbarRefresh: () => (/* binding */ toolbarRefresh),\n/* harmony export */   tooltipDestroy: () => (/* binding */ tooltipDestroy),\n/* harmony export */   uiUpdate: () => (/* binding */ uiUpdate),\n/* harmony export */   ungroupBegin: () => (/* binding */ ungroupBegin),\n/* harmony export */   ungroupComplete: () => (/* binding */ ungroupComplete),\n/* harmony export */   updateData: () => (/* binding */ updateData),\n/* harmony export */   valCustomPlacement: () => (/* binding */ valCustomPlacement),\n/* harmony export */   validateVirtualForm: () => (/* binding */ validateVirtualForm),\n/* harmony export */   virtaulCellFocus: () => (/* binding */ virtaulCellFocus),\n/* harmony export */   virtaulKeyHandler: () => (/* binding */ virtaulKeyHandler),\n/* harmony export */   virtualScrollAddActionBegin: () => (/* binding */ virtualScrollAddActionBegin),\n/* harmony export */   virtualScrollEdit: () => (/* binding */ virtualScrollEdit),\n/* harmony export */   virtualScrollEditActionBegin: () => (/* binding */ virtualScrollEditActionBegin),\n/* harmony export */   virtualScrollEditCancel: () => (/* binding */ virtualScrollEditCancel),\n/* harmony export */   virtualScrollEditSuccess: () => (/* binding */ virtualScrollEditSuccess)\n/* harmony export */ });\n/** @hidden */\nvar created = 'create';\n/** @hidden */\nvar destroyed = 'destroy';\n/** @hidden */\nvar load = 'load';\n/** @hidden */\nvar rowDataBound = 'rowDataBound';\n/** @hidden */\nvar queryCellInfo = 'queryCellInfo';\n/** @hidden */\nvar headerCellInfo = 'headerCellInfo';\n/** @hidden */\nvar actionBegin = 'actionBegin';\n/** @hidden */\nvar actionComplete = 'actionComplete';\n/** @hidden */\nvar actionFailure = 'actionFailure';\n/** @hidden */\nvar dataBound = 'dataBound';\n/** @hidden */\nvar rowSelecting = 'rowSelecting';\n/** @hidden */\nvar rowSelected = 'rowSelected';\n/** @hidden */\nvar rowDeselecting = 'rowDeselecting';\n/** @hidden */\nvar rowDeselected = 'rowDeselected';\n/** @hidden */\nvar cellSelecting = 'cellSelecting';\n/** @hidden */\nvar cellSelected = 'cellSelected';\n/** @hidden */\nvar cellDeselecting = 'cellDeselecting';\n/** @hidden */\nvar cellDeselected = 'cellDeselected';\n/** @hidden */\nvar columnSelecting = 'columnSelecting';\n/** @hidden */\nvar columnSelected = 'columnSelected';\n/** @hidden */\nvar columnDeselecting = 'columnDeselecting';\n/** @hidden */\nvar columnDeselected = 'columnDeselected';\n/** @hidden */\nvar columnDragStart = 'columnDragStart';\n/** @hidden */\nvar columnDrag = 'columnDrag';\n/** @hidden */\nvar columnDrop = 'columnDrop';\n/** @hidden */\nvar rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nvar rowDragStart = 'rowDragStart';\n/** @hidden */\nvar rowDrag = 'rowDrag';\n/** @hidden */\nvar rowDrop = 'rowDrop';\n/** @hidden */\nvar beforePrint = 'beforePrint';\n/** @hidden */\nvar printComplete = 'printComplete';\n/** @hidden */\nvar detailDataBound = 'detailDataBound';\n/** @hidden */\nvar toolbarClick = 'toolbarClick';\n/** @hidden */\nvar batchAdd = 'batchAdd';\n/** @hidden */\nvar batchCancel = 'batchCancel';\n/** @hidden */\nvar batchDelete = 'batchDelete';\n/** @hidden */\nvar beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nvar beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nvar beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nvar beginEdit = 'beginEdit';\n/** @hidden */\nvar cellEdit = 'cellEdit';\n/** @hidden */\nvar cellSave = 'cellSave';\n/** @hidden */\nvar cellSaved = 'cellSaved';\n/** @hidden */\nvar endAdd = 'endAdd';\n/** @hidden */\nvar endDelete = 'endDelete';\n/** @hidden */\nvar endEdit = 'endEdit';\n/** @hidden */\nvar recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nvar recordClick = 'recordClick';\n/** @hidden */\nvar beforeDataBound = 'beforeDataBound';\n/** @hidden */\nvar beforeOpenColumnChooser = 'beforeOpenColumnChooser';\n/** @hidden */\nvar beforeOpenAdaptiveDialog = 'beforeOpenAdaptiveDialog';\n/** @hidden */\nvar resizeStart = 'resizeStart';\n/** @hidden */\nvar onResize = 'resizing';\n/** @hidden */\nvar resizeStop = 'resizeStop';\n/** @hidden */\nvar checkBoxChange = 'checkBoxChange';\n/** @hidden */\nvar beforeCopy = 'beforeCopy';\n/** @hidden */\nvar beforePaste = 'beforePaste';\n/** @hidden */\nvar beforeAutoFill = 'beforeAutoFill';\n/** @hidden */\nvar filterChoiceRequest = 'filterchoicerequest';\n/** @hidden */\nvar filterAfterOpen = 'filterAfterOpen';\n/** @hidden */\nvar filterBeforeOpen = 'filterBeforeOpen';\n/** @hidden */\nvar filterSearchBegin = 'filterSearchBegin';\n/** @hidden */\nvar commandClick = 'commandClick';\n/** @hidden */\nvar exportGroupCaption = 'exportGroupCaption';\n/** @hidden */\nvar lazyLoadGroupExpand = 'lazyLoadGroupExpand';\n/** @hidden */\nvar lazyLoadGroupCollapse = 'lazyLoadGroupCollapse';\n/**\n * Specifies grid internal events\n */\n/** @hidden */\nvar initialLoad = 'initial-load';\n/** @hidden */\nvar initialEnd = 'initial-end';\n/** @hidden */\nvar dataReady = 'data-ready';\n/** @hidden */\nvar contentReady = 'content-ready';\n/** @hidden */\nvar uiUpdate = 'ui-update';\n/** @hidden */\nvar onEmpty = 'on-empty';\n/** @hidden */\nvar inBoundModelChanged = 'inbound-model-changed';\n/** @hidden */\nvar modelChanged = 'model-changed';\n/** @hidden */\nvar colGroupRefresh = 'colgroup-refresh';\n/** @hidden */\nvar headerRefreshed = 'header-refreshed';\n/** @hidden */\nvar pageBegin = 'paging-begin';\n/** @hidden */\nvar pageComplete = 'paging-complete';\n/** @hidden */\nvar sortBegin = 'sorting-begin';\n/** @hidden */\nvar sortComplete = 'sorting-complete';\n/** @hidden */\nvar filterBegin = 'filtering-begin';\n/** @hidden */\nvar filterComplete = 'filtering-complete';\n/** @hidden */\nvar searchBegin = 'searching-begin';\n/** @hidden */\nvar searchComplete = 'searching-complete';\n/** @hidden */\nvar reorderBegin = 'reorder-begin';\n/** @hidden */\nvar reorderComplete = 'reorder-complete';\n/** @hidden */\nvar rowDragAndDropBegin = 'rowdraganddrop-begin';\n/** @hidden */\nvar rowDragAndDropComplete = 'rowdraganddrop-complete';\n/** @hidden */\nvar groupBegin = 'grouping-begin';\n/** @hidden */\nvar groupComplete = 'grouping-complete';\n/** @hidden */\nvar ungroupBegin = 'ungrouping-begin';\n/** @hidden */\nvar ungroupComplete = 'ungrouping-complete';\n/** @hidden */\nvar groupAggregates = 'group-aggregates';\n/** @hidden */\nvar refreshFooterRenderer = 'refresh-footer-rendered';\n/** @hidden */\nvar refreshAggregateCell = 'refresh-aggregate-cell';\n/** @hidden */\nvar refreshAggregates = 'refresh-aggregates';\n/** @hidden */\nvar rowSelectionBegin = 'rowselecting';\n/** @hidden */\nvar rowSelectionComplete = 'rowselected';\n/** @hidden */\nvar columnSelectionBegin = 'columnselecting';\n/** @hidden */\nvar columnSelectionComplete = 'columnselected';\n/** @hidden */\nvar cellSelectionBegin = 'cellselecting';\n/** @hidden */\nvar cellSelectionComplete = 'cellselected';\n/** @hidden */\nvar destroyAutoFillElements = 'destroy-autofill-elements';\n/** @hidden */\nvar beforeCellFocused = 'beforecellfocused';\n/** @hidden */\nvar cellFocused = 'cellfocused';\n/** @hidden */\nvar keyPressed = 'key-pressed';\n/** @hidden */\nvar click = 'click';\n/** @hidden */\nvar destroy = 'destroy';\n/** @hidden */\nvar columnVisibilityChanged = 'column-visible-changed';\n/** @hidden */\nvar scroll = 'scroll';\n/** @hidden */\nvar columnWidthChanged = 'column-width-changed';\n/** @hidden */\nvar columnPositionChanged = 'column-position-changed';\n/** @hidden */\nvar rowDragAndDrop = 'row-drag-and-drop';\n/** @hidden */\nvar rowsAdded = 'rows-added';\n/** @hidden */\nvar rowsRemoved = 'rows-removed';\n/** @hidden */\nvar columnDragStop = 'column-drag-stop';\n/** @hidden */\nvar headerDrop = 'header-drop';\n/** @hidden */\nvar dataSourceModified = 'datasource-modified';\n/** @hidden */\nvar refreshComplete = 'refresh-complete';\n/** @hidden */\nvar refreshVirtualBlock = 'refresh-virtual-block';\n/** @hidden */\nvar dblclick = 'dblclick';\n/** @hidden */\nvar toolbarRefresh = 'toolbar-refresh';\n/** @hidden */\nvar bulkSave = 'bulk-save';\n/** @hidden */\nvar autoCol = 'auto-col';\n/** @hidden */\nvar tooltipDestroy = 'tooltip-destroy';\n/** @hidden */\nvar updateData = 'update-data';\n/** @hidden */\nvar editBegin = 'edit-begin';\n/** @hidden */\nvar editComplete = 'edit-complete';\n/** @hidden */\nvar addBegin = 'add-begin';\n/** @hidden */\nvar addComplete = 'add-complete';\n/** @hidden */\nvar saveComplete = 'save-complete';\n/** @hidden */\nvar deleteBegin = 'delete-begin';\n/** @hidden */\nvar deleteComplete = 'delete-complete';\n/** @hidden */\nvar preventBatch = 'prevent-batch';\n/** @hidden */\nvar dialogDestroy = 'dialog-destroy';\n/** @hidden */\nvar crudAction = 'crud-Action';\n/** @hidden */\nvar addDeleteAction = 'add-delete-Action';\n/** @hidden */\nvar destroyForm = 'destroy-form';\n/** @hidden */\nvar doubleTap = 'double-tap';\n/** @hidden */\nvar beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nvar excelExportComplete = 'excelExportComplete';\n/** @hidden */\nvar excelQueryCellInfo = 'excelQueryCellInfo';\n/** @hidden */\nvar excelHeaderQueryCellInfo = 'excelHeaderQueryCellInfo';\n/** @hidden */\nvar exportDetailDataBound = 'exportDetailDataBound';\n/** @hidden */\nvar exportDetailTemplate = 'exportDetailTemplate';\n/** @hidden */\nvar beforePdfExport = 'beforePdfExport';\n/** @hidden */\nvar pdfExportComplete = 'pdfExportComplete';\n/** @hidden */\nvar pdfQueryCellInfo = 'pdfQueryCellInfo';\n/** @hidden */\nvar pdfHeaderQueryCellInfo = 'pdfHeaderQueryCellInfo';\n/** @hidden */\nvar accessPredicate = 'access-predicate';\n/** @hidden */\nvar contextMenuClick = 'contextMenuClick';\n/** @hidden */\nvar freezeRender = 'freezerender';\n/** @hidden */\nvar freezeRefresh = 'freezerefresh';\n/** @hidden */\nvar contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nvar columnMenuClick = 'columnMenuClick';\n/** @hidden */\nvar columnMenuOpen = 'columnMenuOpen';\n/** @hidden */\nvar filterOpen = 'filterOpen';\n/** @hidden */\nvar filterDialogCreated = 'filterDialogCreated';\n/** @hidden */\nvar filterMenuClose = 'filter-menu-close';\n/** @hidden */\nvar initForeignKeyColumn = 'initForeignKeyColumn';\n/** @hidden */\nvar getForeignKeyData = 'getForeignKeyData';\n/** @hidden */\nvar generateQuery = 'generateQuery';\n/** @hidden */\nvar showEmptyGrid = 'showEmptyGrid';\n/** @hidden */\nvar foreignKeyData = 'foreignKeyData';\n/** @hidden */\nvar columnDataStateChange = 'columnDataStateChange';\n/** @hidden */\nvar dataStateChange = 'dataStateChange';\n/** @hidden */\nvar dataSourceChanged = 'dataSourceChanged';\n/** @hidden */\nvar rtlUpdated = 'rtl-updated';\n/** @hidden */\nvar beforeFragAppend = 'beforeFragAppend';\n/** @hidden */\nvar frozenHeight = 'frozenHeight';\n/** @hidden */\nvar textWrapRefresh = 'textWrapRefresh';\n/** @hidden */\nvar recordAdded = 'recordAdded';\n/** @hidden */\nvar cancelBegin = 'cancel-Begin';\n/** @hidden */\nvar editNextValCell = 'editNextValCell';\n/** @hidden */\nvar hierarchyPrint = 'hierarchyprint';\n/** @hidden */\nvar expandChildGrid = 'expandchildgrid';\n/** @hidden */\nvar printGridInit = 'printGrid-Init';\n/** @hidden */\nvar exportRowDataBound = 'export-RowDataBound';\n/** @hidden */\nvar exportDataBound = 'export-DataBound';\n/** @hidden */\nvar rowPositionChanged = 'row-position-changed';\n/** @hidden */\nvar columnChooserOpened = 'columnChooserOpened';\n/** @hidden */\nvar batchForm = 'batchedit-form';\n/** @hidden */\nvar beforeStartEdit = 'edit-form';\n/** @hidden */\nvar beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nvar batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nvar partialRefresh = 'partial-refresh';\n/** @hidden */\nvar beforeCustomFilterOpen = 'beforeCustomFilterOpen';\n/** @hidden */\nvar selectVirtualRow = 'select-virtual-Row';\n/** @hidden */\nvar columnsPrepared = 'columns-prepared';\n/** @hidden */\nvar cBoxFltrBegin = 'cbox-filter-begin';\n/** @hidden */\nvar cBoxFltrComplete = 'cbox-filter-complete';\n/** @hidden */\nvar fltrPrevent = 'filter-Prevent';\n/** @hidden */\nvar beforeFltrcMenuOpen = 'before-filter-cmenu-open';\n/** @hidden */\nvar valCustomPlacement = 'validation-custom-placement';\n/** @hidden */\nvar filterCboxValue = 'filter-cbox-value';\n/** @hidden */\nvar componentRendered = 'component-rendered';\n/** @hidden */\nvar restoreFocus = 'restore-Focus';\n/** @hidden */\nvar detailStateChange = 'detail-state-change';\n/** @hidden */\nvar detailIndentCellInfo = 'detail-indentcell-info';\n/** @hidden */\nvar virtaulKeyHandler = 'virtaul-key-handler';\n/** @hidden */\nvar virtaulCellFocus = 'virtaul-cell-focus';\n/** @hidden */\nvar virtualScrollEditActionBegin = 'virtual-scroll-edit-action-begin';\n/** @hidden */\nvar virtualScrollEditSuccess = 'virtual-scroll-edit-success';\n/** @hidden */\nvar virtualScrollEditCancel = 'virtual-scroll-edit-cancel';\n/** @hidden */\nvar virtualScrollEdit = 'virtual-scroll-edit';\n/** @hidden */\nvar refreshVirtualCache = 'refresh-virtual-cache';\n/** @hidden */\nvar editReset = 'edit-reset';\n/** @hidden */\nvar virtualScrollAddActionBegin = 'virtual-scroll-add-action-begin';\n/** @hidden */\nvar getVirtualData = 'get-virtual-data';\n/** @hidden */\nvar refreshInfiniteModeBlocks = 'refresh-infinite-mode-blocks';\n/** @hidden */\nvar resetInfiniteBlocks = 'reset-infinite-blocks';\n/** @hidden */\nvar infiniteScrollHandler = 'infinite-scroll-handler';\n/** @hidden */\nvar infinitePageQuery = 'infinite-page-query';\n/** @hidden */\nvar infiniteShowHide = 'infinite-show-hide';\n/** @hidden */\nvar appendInfiniteContent = 'append-infinite-content';\n/** @hidden */\nvar removeInfiniteRows = 'remove-infinite-rows';\n/** @hidden */\nvar setInfiniteCache = 'set-infinite-cache';\n/** @hidden */\nvar infiniteEditHandler = 'infinite-edit-handler';\n/** @hidden */\nvar initialCollapse = 'initial-collapse';\n/** @hidden */\nvar getAggregateQuery = 'get-aggregate-query';\n/** @hidden */\nvar closeFilterDialog = 'close-filter-dialog';\n/** @hidden */\nvar columnChooserCancelBtnClick = 'columnChooserCancelBtnClick';\n/** @hidden */\nvar getFilterBarOperator = 'get-filterbar-operator';\n/** @hidden */\nvar resetColumns = 'reset-columns';\n/** @hidden */\nvar pdfAggregateQueryCellInfo = 'pdfAggregateQueryCellInfo';\n/** @hidden */\nvar excelAggregateQueryCellInfo = 'excelAggregateQueryCellInfo';\n/** @hidden */\nvar setGroupCache = 'group-cache';\n/** @hidden */\nvar lazyLoadScrollHandler = 'lazy-load-scroll-handler';\n/** @hidden */\nvar groupCollapse = 'group-collapse';\n/** @hidden */\nvar beforeCheckboxRenderer = 'beforeCheckboxRenderer';\n/** @hidden */\nvar refreshHandlers = 'refreshResizeHandlers';\n/** @hidden */\nvar refreshFrozenColumns = 'refresh-frozen-columns';\n/** @hidden */\nvar setReorderDestinationElement = 'set-reorder-destination-element';\n/** @hidden */\nvar refreshVirtualFrozenHeight = 'refresh-virtual-frozen-height';\n/** @hidden */\nvar setFreezeSelection = 'set-freeze-selection';\n/** @hidden */\nvar setInfiniteFrozenHeight = 'set-infinite-frozen-height';\n/** @hidden */\nvar setInfiniteColFrozenHeight = 'set-infinite-col-frozen-height';\n/** @hidden */\nvar beforeRefreshOnDataChange = 'before-refresh-on-data-change';\n/** @hidden */\nvar immutableBatchCancel = 'immutable-batch-cancel';\n/** @hidden */\nvar refreshVirtualFrozenRows = 'refresh-virtual-frozenrows';\n/** @hidden */\nvar checkScrollReset = 'check-scroll-reset';\n/** @hidden */\nvar refreshFrozenHeight = 'refresh-frozen-height';\n/** @hidden */\nvar setHeightToFrozenElement = 'set-height-to-frozen-element';\n/** @hidden */\nvar preventFrozenScrollRefresh = 'prevent-frozen-scroll-refresh';\n/** @hidden */\nvar nextCellIndex = 'next-cell-index';\n/** @hidden */\nvar refreshInfiniteCurrentViewData = 'refresh-infinite-current-view-data';\n/** @hidden */\nvar infiniteCrudCancel = 'infinite-crud-cancel';\n/** @hidden */\nvar filterDialogClose = 'filter-dialog-close';\n/** @hidden */\nvar refreshCustomFilterOkBtn = 'refresh-cutsom-filter-ok-button';\n/** @hidden */\nvar refreshCustomFilterClearBtn = 'refresh-cutsom-filter-clear-button';\n/** @hidden */\nvar renderResponsiveCmenu = 'render-responsive-cmenu';\n/** @hidden */\nvar filterCmenuSelect = 'filter-cmenu-select';\n/** @hidden */\nvar customFilterClose = 'custom-filter-close';\n/** @hidden */\nvar setFullScreenDialog = 'set-fullscreen-dialog';\n/** @hidden */\nvar refreshExpandandCollapse = 'refresh-Expand-and-Collapse';\n/** @hidden */\nvar rowModeChange = 'row-mode-change';\n/** @hidden */\nvar enterKeyHandler = 'enter-key-handler';\n/** @hidden */\nvar refreshVirtualMaxPage = 'refresh-virtual-max-page';\n/** @hidden */\nvar setVirtualPageQuery = 'set-virtual-page-query';\n/** @hidden */\nvar selectRowOnContextOpen = 'select-row-on-context-open';\n/** @hidden */\nvar pagerRefresh = 'pager-refresh';\n/** @hidden */\nvar closeInline = 'closeinline';\n/** @hidden */\nvar closeBatch = 'closebatch';\n/** @hidden */\nvar closeEdit = 'close-edit';\n/** @hidden */\nvar resetVirtualFocus = 'reset-virtual-focus';\n/** @hidden */\nvar afterContentRender = 'after-content-renderer';\n/** @hidden */\nvar refreshVirtualEditFormCells = 'refresh-virtual-editform-cells';\n/** @hidden */\nvar scrollToEdit = 'scroll-to-edit';\n/** @hidden */\nvar beforeCheckboxRendererQuery = 'before-checkbox-renderer-query';\n/** @hidden */\nvar createVirtualValidationForm = 'create-virtual-validation-form';\n/** @hidden */\nvar validateVirtualForm = 'validate-virtual-form';\n/** @hidden */\nvar destroyChildGrid = 'destroy-child-grid';\n/** @hidden */\nvar stickyScrollComplete = 'sticky-scroll-complete';\n/** @hidden */\nvar captionActionComplete = 'infinite-group-collapse';\n/** @hidden */\nvar refreshInfinitePersistSelection = 'refresh-infinite-persist-selection';\n/** @hidden */\nvar refreshInfiniteEditrowindex = 'refresh-infinite-editrowindex';\n/** @hidden */\nvar afterFilterColumnMenuClose = 'after-filter-column-menu-close';\n/** @hidden */\nvar beforeCheckboxfilterRenderer = 'beforeCheckboxfilterRenderer';\n/** @hidden */\nvar commandColumnDestroy = 'commandColumnDestroy';\n/** @hidden */\nvar batchCnfrmDlgCancel = 'cancelcnfrmDlg';\n/** @hidden */\nvar refreshVirtualLazyLoadCache = 'refresh-Virtual-LazyLoad-Cache';\n/** @hidden */\nvar refreshFrozenPosition = 'refresh-Frozen-Position';\n/** @hidden */\nvar refreshResizePosition = 'refresh-Resize-Position';\n/** @hidden */\nvar refreshSplitFrozenColumn = 'refresh-Split-Frozen-Column';\n/** @hidden */\nvar renderResponsiveChangeAction = 'render-Responsive-Change-Action';\n/** @hidden */\nvar renderResponsiveColumnChooserDiv = 'render-Responsive-Column-Chooser-Div';\n/** @hidden */\nvar showAddNewRowFocus = 'show-Add-New-Row-Focus';\n/** @hidden */\nvar infiniteScrollComplete = 'infinitescroll-complete';\n/** @hidden */\nvar lastRowCellBorderUpdated = 'last-rowcell-border-updated';\n/** @hidden */\nvar columnChooserSearch = 'columnChooserSearch';\n/** @hidden */\nvar columnChooserClose = 'columnChooserClose';\n/** @hidden */\nvar columnChooserUpdate = 'columnChooserUpdate';\n/** @hidden */\nvar destroyEditForm = 'destroy-edit-form';\n/** @hidden */\nvar beforeDetailTemplateDetach = 'beforeDetailTemplateDetach';\n/** @hidden */\nvar detachDetailTemplate = 'detach-detail-template';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CellType: () => (/* binding */ CellType),\n/* harmony export */   RenderType: () => (/* binding */ RenderType),\n/* harmony export */   ResponsiveDialogAction: () => (/* binding */ ResponsiveDialogAction),\n/* harmony export */   ResponsiveToolbarAction: () => (/* binding */ ResponsiveToolbarAction),\n/* harmony export */   ToolbarItem: () => (/* binding */ ToolbarItem)\n/* harmony export */ });\n/**\n * Defines types of Cell\n *\n * @hidden\n */\nvar CellType;\n(function (CellType) {\n    /**  Defines CellType as Data */\n    CellType[CellType[\"Data\"] = 0] = \"Data\";\n    /**  Defines CellType as Header */\n    CellType[CellType[\"Header\"] = 1] = \"Header\";\n    /**  Defines CellType as Summary */\n    CellType[CellType[\"Summary\"] = 2] = \"Summary\";\n    /**  Defines CellType as GroupSummary */\n    CellType[CellType[\"GroupSummary\"] = 3] = \"GroupSummary\";\n    /**  Defines CellType as CaptionSummary */\n    CellType[CellType[\"CaptionSummary\"] = 4] = \"CaptionSummary\";\n    /**  Defines CellType as Filter */\n    CellType[CellType[\"Filter\"] = 5] = \"Filter\";\n    /**  Defines CellType as Indent */\n    CellType[CellType[\"Indent\"] = 6] = \"Indent\";\n    /**  Defines CellType as GroupCaption */\n    CellType[CellType[\"GroupCaption\"] = 7] = \"GroupCaption\";\n    /**  Defines CellType as GroupCaptionEmpty */\n    CellType[CellType[\"GroupCaptionEmpty\"] = 8] = \"GroupCaptionEmpty\";\n    /**  Defines CellType as Expand */\n    CellType[CellType[\"Expand\"] = 9] = \"Expand\";\n    /**  Defines CellType as HeaderIndent */\n    CellType[CellType[\"HeaderIndent\"] = 10] = \"HeaderIndent\";\n    /**  Defines CellType as StackedHeader */\n    CellType[CellType[\"StackedHeader\"] = 11] = \"StackedHeader\";\n    /**  Defines CellType as DetailHeader */\n    CellType[CellType[\"DetailHeader\"] = 12] = \"DetailHeader\";\n    /**  Defines CellType as DetailExpand */\n    CellType[CellType[\"DetailExpand\"] = 13] = \"DetailExpand\";\n    /**  Defines CellType as CommandColumn */\n    CellType[CellType[\"CommandColumn\"] = 14] = \"CommandColumn\";\n    /**  Defines CellType as DetailFooterIntent */\n    CellType[CellType[\"DetailFooterIntent\"] = 15] = \"DetailFooterIntent\";\n    /**  Defines CellType as RowDrag */\n    CellType[CellType[\"RowDragIcon\"] = 16] = \"RowDragIcon\";\n    /**  Defines CellType as RowDragHeader */\n    CellType[CellType[\"RowDragHIcon\"] = 17] = \"RowDragHIcon\";\n})(CellType || (CellType = {}));\n/**\n * Defines types of Render\n *\n * @hidden\n */\nvar RenderType;\n(function (RenderType) {\n    /**  Defines RenderType as Header */\n    RenderType[RenderType[\"Header\"] = 0] = \"Header\";\n    /**  Defines RenderType as Content */\n    RenderType[RenderType[\"Content\"] = 1] = \"Content\";\n    /**  Defines RenderType as Summary */\n    RenderType[RenderType[\"Summary\"] = 2] = \"Summary\";\n})(RenderType || (RenderType = {}));\n/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nvar ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 5] = \"Print\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 6] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ColumnChooser\"] = 7] = \"ColumnChooser\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 8] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"WordExport\"] = 11] = \"WordExport\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines types of responsive dialogs\n *\n * @hidden\n */\nvar ResponsiveDialogAction;\n(function (ResponsiveDialogAction) {\n    /**  Defines dialog type as Edit */\n    ResponsiveDialogAction[ResponsiveDialogAction[\"isEdit\"] = 0] = \"isEdit\";\n    /**  Defines dialog type as Add */\n    ResponsiveDialogAction[ResponsiveDialogAction[\"isAdd\"] = 1] = \"isAdd\";\n    /**  Defines dialog type as Sort */\n    ResponsiveDialogAction[ResponsiveDialogAction[\"isSort\"] = 2] = \"isSort\";\n    /**  Defines dialog type as Filter */\n    ResponsiveDialogAction[ResponsiveDialogAction[\"isFilter\"] = 3] = \"isFilter\";\n    /**  Defines dialog type as ColMenu */\n    ResponsiveDialogAction[ResponsiveDialogAction[\"isColMenu\"] = 4] = \"isColMenu\";\n    /**  Defines dialog type as ColumChooser */\n    ResponsiveDialogAction[ResponsiveDialogAction[\"isColumnChooser\"] = 5] = \"isColumnChooser\";\n})(ResponsiveDialogAction || (ResponsiveDialogAction = {}));\n/**\n * Defines responsive toolbar actions\n *\n * @hidden\n */\nvar ResponsiveToolbarAction;\n(function (ResponsiveToolbarAction) {\n    /**  Defines initial responsive toolbar buttons */\n    ResponsiveToolbarAction[ResponsiveToolbarAction[\"isInitial\"] = 0] = \"isInitial\";\n    /**  Defines responsive toolbar search */\n    ResponsiveToolbarAction[ResponsiveToolbarAction[\"isSearch\"] = 1] = \"isSearch\";\n})(ResponsiveToolbarAction || (ResponsiveToolbarAction = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9iYXNlL2VudW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtDQUFrQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0RBQXdEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBEQUEwRCIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3RyYXZlbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3luY2Z1c2lvbitlajItZ3JpZHNAMjkuMS40MC9ub2RlX21vZHVsZXMvQHN5bmNmdXNpb24vZWoyLWdyaWRzL3NyYy9ncmlkL2Jhc2UvZW51bS5qcz9iZWQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGVmaW5lcyB0eXBlcyBvZiBDZWxsXG4gKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgdmFyIENlbGxUeXBlO1xuKGZ1bmN0aW9uIChDZWxsVHlwZSkge1xuICAgIC8qKiAgRGVmaW5lcyBDZWxsVHlwZSBhcyBEYXRhICovXG4gICAgQ2VsbFR5cGVbQ2VsbFR5cGVbXCJEYXRhXCJdID0gMF0gPSBcIkRhdGFcIjtcbiAgICAvKiogIERlZmluZXMgQ2VsbFR5cGUgYXMgSGVhZGVyICovXG4gICAgQ2VsbFR5cGVbQ2VsbFR5cGVbXCJIZWFkZXJcIl0gPSAxXSA9IFwiSGVhZGVyXCI7XG4gICAgLyoqICBEZWZpbmVzIENlbGxUeXBlIGFzIFN1bW1hcnkgKi9cbiAgICBDZWxsVHlwZVtDZWxsVHlwZVtcIlN1bW1hcnlcIl0gPSAyXSA9IFwiU3VtbWFyeVwiO1xuICAgIC8qKiAgRGVmaW5lcyBDZWxsVHlwZSBhcyBHcm91cFN1bW1hcnkgKi9cbiAgICBDZWxsVHlwZVtDZWxsVHlwZVtcIkdyb3VwU3VtbWFyeVwiXSA9IDNdID0gXCJHcm91cFN1bW1hcnlcIjtcbiAgICAvKiogIERlZmluZXMgQ2VsbFR5cGUgYXMgQ2FwdGlvblN1bW1hcnkgKi9cbiAgICBDZWxsVHlwZVtDZWxsVHlwZVtcIkNhcHRpb25TdW1tYXJ5XCJdID0gNF0gPSBcIkNhcHRpb25TdW1tYXJ5XCI7XG4gICAgLyoqICBEZWZpbmVzIENlbGxUeXBlIGFzIEZpbHRlciAqL1xuICAgIENlbGxUeXBlW0NlbGxUeXBlW1wiRmlsdGVyXCJdID0gNV0gPSBcIkZpbHRlclwiO1xuICAgIC8qKiAgRGVmaW5lcyBDZWxsVHlwZSBhcyBJbmRlbnQgKi9cbiAgICBDZWxsVHlwZVtDZWxsVHlwZVtcIkluZGVudFwiXSA9IDZdID0gXCJJbmRlbnRcIjtcbiAgICAvKiogIERlZmluZXMgQ2VsbFR5cGUgYXMgR3JvdXBDYXB0aW9uICovXG4gICAgQ2VsbFR5cGVbQ2VsbFR5cGVbXCJHcm91cENhcHRpb25cIl0gPSA3XSA9IFwiR3JvdXBDYXB0aW9uXCI7XG4gICAgLyoqICBEZWZpbmVzIENlbGxUeXBlIGFzIEdyb3VwQ2FwdGlvbkVtcHR5ICovXG4gICAgQ2VsbFR5cGVbQ2VsbFR5cGVbXCJHcm91cENhcHRpb25FbXB0eVwiXSA9IDhdID0gXCJHcm91cENhcHRpb25FbXB0eVwiO1xuICAgIC8qKiAgRGVmaW5lcyBDZWxsVHlwZSBhcyBFeHBhbmQgKi9cbiAgICBDZWxsVHlwZVtDZWxsVHlwZVtcIkV4cGFuZFwiXSA9IDldID0gXCJFeHBhbmRcIjtcbiAgICAvKiogIERlZmluZXMgQ2VsbFR5cGUgYXMgSGVhZGVySW5kZW50ICovXG4gICAgQ2VsbFR5cGVbQ2VsbFR5cGVbXCJIZWFkZXJJbmRlbnRcIl0gPSAxMF0gPSBcIkhlYWRlckluZGVudFwiO1xuICAgIC8qKiAgRGVmaW5lcyBDZWxsVHlwZSBhcyBTdGFja2VkSGVhZGVyICovXG4gICAgQ2VsbFR5cGVbQ2VsbFR5cGVbXCJTdGFja2VkSGVhZGVyXCJdID0gMTFdID0gXCJTdGFja2VkSGVhZGVyXCI7XG4gICAgLyoqICBEZWZpbmVzIENlbGxUeXBlIGFzIERldGFpbEhlYWRlciAqL1xuICAgIENlbGxUeXBlW0NlbGxUeXBlW1wiRGV0YWlsSGVhZGVyXCJdID0gMTJdID0gXCJEZXRhaWxIZWFkZXJcIjtcbiAgICAvKiogIERlZmluZXMgQ2VsbFR5cGUgYXMgRGV0YWlsRXhwYW5kICovXG4gICAgQ2VsbFR5cGVbQ2VsbFR5cGVbXCJEZXRhaWxFeHBhbmRcIl0gPSAxM10gPSBcIkRldGFpbEV4cGFuZFwiO1xuICAgIC8qKiAgRGVmaW5lcyBDZWxsVHlwZSBhcyBDb21tYW5kQ29sdW1uICovXG4gICAgQ2VsbFR5cGVbQ2VsbFR5cGVbXCJDb21tYW5kQ29sdW1uXCJdID0gMTRdID0gXCJDb21tYW5kQ29sdW1uXCI7XG4gICAgLyoqICBEZWZpbmVzIENlbGxUeXBlIGFzIERldGFpbEZvb3RlckludGVudCAqL1xuICAgIENlbGxUeXBlW0NlbGxUeXBlW1wiRGV0YWlsRm9vdGVySW50ZW50XCJdID0gMTVdID0gXCJEZXRhaWxGb290ZXJJbnRlbnRcIjtcbiAgICAvKiogIERlZmluZXMgQ2VsbFR5cGUgYXMgUm93RHJhZyAqL1xuICAgIENlbGxUeXBlW0NlbGxUeXBlW1wiUm93RHJhZ0ljb25cIl0gPSAxNl0gPSBcIlJvd0RyYWdJY29uXCI7XG4gICAgLyoqICBEZWZpbmVzIENlbGxUeXBlIGFzIFJvd0RyYWdIZWFkZXIgKi9cbiAgICBDZWxsVHlwZVtDZWxsVHlwZVtcIlJvd0RyYWdISWNvblwiXSA9IDE3XSA9IFwiUm93RHJhZ0hJY29uXCI7XG59KShDZWxsVHlwZSB8fCAoQ2VsbFR5cGUgPSB7fSkpO1xuLyoqXG4gKiBEZWZpbmVzIHR5cGVzIG9mIFJlbmRlclxuICpcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IHZhciBSZW5kZXJUeXBlO1xuKGZ1bmN0aW9uIChSZW5kZXJUeXBlKSB7XG4gICAgLyoqICBEZWZpbmVzIFJlbmRlclR5cGUgYXMgSGVhZGVyICovXG4gICAgUmVuZGVyVHlwZVtSZW5kZXJUeXBlW1wiSGVhZGVyXCJdID0gMF0gPSBcIkhlYWRlclwiO1xuICAgIC8qKiAgRGVmaW5lcyBSZW5kZXJUeXBlIGFzIENvbnRlbnQgKi9cbiAgICBSZW5kZXJUeXBlW1JlbmRlclR5cGVbXCJDb250ZW50XCJdID0gMV0gPSBcIkNvbnRlbnRcIjtcbiAgICAvKiogIERlZmluZXMgUmVuZGVyVHlwZSBhcyBTdW1tYXJ5ICovXG4gICAgUmVuZGVyVHlwZVtSZW5kZXJUeXBlW1wiU3VtbWFyeVwiXSA9IDJdID0gXCJTdW1tYXJ5XCI7XG59KShSZW5kZXJUeXBlIHx8IChSZW5kZXJUeXBlID0ge30pKTtcbi8qKlxuICogRGVmaW5lcyBQcmVkZWZpbmVkIHRvb2xiYXIgaXRlbXMuXG4gKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgdmFyIFRvb2xiYXJJdGVtO1xuKGZ1bmN0aW9uIChUb29sYmFySXRlbSkge1xuICAgIFRvb2xiYXJJdGVtW1Rvb2xiYXJJdGVtW1wiQWRkXCJdID0gMF0gPSBcIkFkZFwiO1xuICAgIFRvb2xiYXJJdGVtW1Rvb2xiYXJJdGVtW1wiRWRpdFwiXSA9IDFdID0gXCJFZGl0XCI7XG4gICAgVG9vbGJhckl0ZW1bVG9vbGJhckl0ZW1bXCJVcGRhdGVcIl0gPSAyXSA9IFwiVXBkYXRlXCI7XG4gICAgVG9vbGJhckl0ZW1bVG9vbGJhckl0ZW1bXCJEZWxldGVcIl0gPSAzXSA9IFwiRGVsZXRlXCI7XG4gICAgVG9vbGJhckl0ZW1bVG9vbGJhckl0ZW1bXCJDYW5jZWxcIl0gPSA0XSA9IFwiQ2FuY2VsXCI7XG4gICAgVG9vbGJhckl0ZW1bVG9vbGJhckl0ZW1bXCJQcmludFwiXSA9IDVdID0gXCJQcmludFwiO1xuICAgIFRvb2xiYXJJdGVtW1Rvb2xiYXJJdGVtW1wiU2VhcmNoXCJdID0gNl0gPSBcIlNlYXJjaFwiO1xuICAgIFRvb2xiYXJJdGVtW1Rvb2xiYXJJdGVtW1wiQ29sdW1uQ2hvb3NlclwiXSA9IDddID0gXCJDb2x1bW5DaG9vc2VyXCI7XG4gICAgVG9vbGJhckl0ZW1bVG9vbGJhckl0ZW1bXCJQZGZFeHBvcnRcIl0gPSA4XSA9IFwiUGRmRXhwb3J0XCI7XG4gICAgVG9vbGJhckl0ZW1bVG9vbGJhckl0ZW1bXCJFeGNlbEV4cG9ydFwiXSA9IDldID0gXCJFeGNlbEV4cG9ydFwiO1xuICAgIFRvb2xiYXJJdGVtW1Rvb2xiYXJJdGVtW1wiQ3N2RXhwb3J0XCJdID0gMTBdID0gXCJDc3ZFeHBvcnRcIjtcbiAgICBUb29sYmFySXRlbVtUb29sYmFySXRlbVtcIldvcmRFeHBvcnRcIl0gPSAxMV0gPSBcIldvcmRFeHBvcnRcIjtcbn0pKFRvb2xiYXJJdGVtIHx8IChUb29sYmFySXRlbSA9IHt9KSk7XG4vKipcbiAqIERlZmluZXMgdHlwZXMgb2YgcmVzcG9uc2l2ZSBkaWFsb2dzXG4gKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgdmFyIFJlc3BvbnNpdmVEaWFsb2dBY3Rpb247XG4oZnVuY3Rpb24gKFJlc3BvbnNpdmVEaWFsb2dBY3Rpb24pIHtcbiAgICAvKiogIERlZmluZXMgZGlhbG9nIHR5cGUgYXMgRWRpdCAqL1xuICAgIFJlc3BvbnNpdmVEaWFsb2dBY3Rpb25bUmVzcG9uc2l2ZURpYWxvZ0FjdGlvbltcImlzRWRpdFwiXSA9IDBdID0gXCJpc0VkaXRcIjtcbiAgICAvKiogIERlZmluZXMgZGlhbG9nIHR5cGUgYXMgQWRkICovXG4gICAgUmVzcG9uc2l2ZURpYWxvZ0FjdGlvbltSZXNwb25zaXZlRGlhbG9nQWN0aW9uW1wiaXNBZGRcIl0gPSAxXSA9IFwiaXNBZGRcIjtcbiAgICAvKiogIERlZmluZXMgZGlhbG9nIHR5cGUgYXMgU29ydCAqL1xuICAgIFJlc3BvbnNpdmVEaWFsb2dBY3Rpb25bUmVzcG9uc2l2ZURpYWxvZ0FjdGlvbltcImlzU29ydFwiXSA9IDJdID0gXCJpc1NvcnRcIjtcbiAgICAvKiogIERlZmluZXMgZGlhbG9nIHR5cGUgYXMgRmlsdGVyICovXG4gICAgUmVzcG9uc2l2ZURpYWxvZ0FjdGlvbltSZXNwb25zaXZlRGlhbG9nQWN0aW9uW1wiaXNGaWx0ZXJcIl0gPSAzXSA9IFwiaXNGaWx0ZXJcIjtcbiAgICAvKiogIERlZmluZXMgZGlhbG9nIHR5cGUgYXMgQ29sTWVudSAqL1xuICAgIFJlc3BvbnNpdmVEaWFsb2dBY3Rpb25bUmVzcG9uc2l2ZURpYWxvZ0FjdGlvbltcImlzQ29sTWVudVwiXSA9IDRdID0gXCJpc0NvbE1lbnVcIjtcbiAgICAvKiogIERlZmluZXMgZGlhbG9nIHR5cGUgYXMgQ29sdW1DaG9vc2VyICovXG4gICAgUmVzcG9uc2l2ZURpYWxvZ0FjdGlvbltSZXNwb25zaXZlRGlhbG9nQWN0aW9uW1wiaXNDb2x1bW5DaG9vc2VyXCJdID0gNV0gPSBcImlzQ29sdW1uQ2hvb3NlclwiO1xufSkoUmVzcG9uc2l2ZURpYWxvZ0FjdGlvbiB8fCAoUmVzcG9uc2l2ZURpYWxvZ0FjdGlvbiA9IHt9KSk7XG4vKipcbiAqIERlZmluZXMgcmVzcG9uc2l2ZSB0b29sYmFyIGFjdGlvbnNcbiAqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCB2YXIgUmVzcG9uc2l2ZVRvb2xiYXJBY3Rpb247XG4oZnVuY3Rpb24gKFJlc3BvbnNpdmVUb29sYmFyQWN0aW9uKSB7XG4gICAgLyoqICBEZWZpbmVzIGluaXRpYWwgcmVzcG9uc2l2ZSB0b29sYmFyIGJ1dHRvbnMgKi9cbiAgICBSZXNwb25zaXZlVG9vbGJhckFjdGlvbltSZXNwb25zaXZlVG9vbGJhckFjdGlvbltcImlzSW5pdGlhbFwiXSA9IDBdID0gXCJpc0luaXRpYWxcIjtcbiAgICAvKiogIERlZmluZXMgcmVzcG9uc2l2ZSB0b29sYmFyIHNlYXJjaCAqL1xuICAgIFJlc3BvbnNpdmVUb29sYmFyQWN0aW9uW1Jlc3BvbnNpdmVUb29sYmFyQWN0aW9uW1wiaXNTZWFyY2hcIl0gPSAxXSA9IFwiaXNTZWFyY2hcIjtcbn0pKFJlc3BvbnNpdmVUb29sYmFyQWN0aW9uIHx8IChSZXNwb25zaXZlVG9vbGJhckFjdGlvbiA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditSettings: () => (/* binding */ EditSettings),\n/* harmony export */   FilterSettings: () => (/* binding */ FilterSettings),\n/* harmony export */   Grid: () => (/* binding */ Grid),\n/* harmony export */   GroupSettings: () => (/* binding */ GroupSettings),\n/* harmony export */   InfiniteScrollSettings: () => (/* binding */ InfiniteScrollSettings),\n/* harmony export */   LoadingIndicator: () => (/* binding */ LoadingIndicator),\n/* harmony export */   Predicate: () => (/* binding */ Predicate),\n/* harmony export */   ResizeSettings: () => (/* binding */ ResizeSettings),\n/* harmony export */   RowDropSettings: () => (/* binding */ RowDropSettings),\n/* harmony export */   SearchSettings: () => (/* binding */ SearchSettings),\n/* harmony export */   SelectionSettings: () => (/* binding */ SelectionSettings),\n/* harmony export */   SortDescriptor: () => (/* binding */ SortDescriptor),\n/* harmony export */   SortSettings: () => (/* binding */ SortSettings),\n/* harmony export */   TextWrapSettings: () => (/* binding */ TextWrapSettings)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/manager.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/util.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/adaptors.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-popups@29.1.37/node_modules/@syncfusion/ej2-popups/src/spinner/spinner.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-popups@29.1.37/node_modules/@syncfusion/ej2-popups/src/tooltip/tooltip.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _renderer_render__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../renderer/render */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/render.js\");\n/* harmony import */ var _models_column__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/column */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column.js\");\n/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _renderer_row_renderer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../renderer/row-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-renderer.js\");\n/* harmony import */ var _renderer_cell_renderer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../renderer/cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\n/* harmony import */ var _services_cell_render_factory__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../services/cell-render-factory */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/cell-render-factory.js\");\n/* harmony import */ var _services_service_locator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/service-locator */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/service-locator.js\");\n/* harmony import */ var _services_value_formatter__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../services/value-formatter */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js\");\n/* harmony import */ var _services_renderer_factory__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../services/renderer-factory */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/renderer-factory.js\");\n/* harmony import */ var _services_width_controller__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../services/width-controller */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js\");\n/* harmony import */ var _services_aria_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../services/aria-service */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/aria-service.js\");\n/* harmony import */ var _services_focus_strategy__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../services/focus-strategy */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/focus-strategy.js\");\n/* harmony import */ var _models_page_settings__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../models/page-settings */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/page-settings.js\");\n/* harmony import */ var _models_column_chooser_settings__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../models/column-chooser-settings */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column-chooser-settings.js\");\n/* harmony import */ var _actions_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/selection */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js\");\n/* harmony import */ var _actions_search__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../actions/search */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/search.js\");\n/* harmony import */ var _actions_show_hide__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../actions/show-hide */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/show-hide.js\");\n/* harmony import */ var _actions_scroll__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../actions/scroll */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/scroll.js\");\n/* harmony import */ var _actions_print__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../actions/print */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/print.js\");\n/* harmony import */ var _models_aggregate__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../models/aggregate */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/aggregate.js\");\n/* harmony import */ var _actions_clipboard__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../actions/clipboard */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/clipboard.js\");\n/* harmony import */ var _actions_logger__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../actions/logger */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/logger.js\");\n/* harmony import */ var _services_row_model_generator__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../services/row-model-generator */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/row-model-generator.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n/* harmony import */ var _renderer_header_cell_renderer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../renderer/header-cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-cell-renderer.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Predicate.prototype, \"condition\", void 0);\n    return Predicate;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('OnEnter')\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], FilterSettings.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(50)\n    ], FilterSettings.prototype, \"itemsCount\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Shimmer')\n    ], FilterSettings.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n    return FilterSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n    return SelectionSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */ (function (_super) {\n    __extends(ResizeSettings, _super);\n    function ResizeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Normal')\n    ], ResizeSettings.prototype, \"mode\", void 0);\n    return ResizeSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], GroupSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n    return GroupSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], EditSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], EditSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], EditSettings.prototype, \"showAddNewRow\", void 0);\n    return EditSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the Loading Indicator of the Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     *\n     * @param {GridModel} options - specifies the options\n     * @param {string | HTMLElement} element - specifies the element\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        _this_1.isPreventScrollEvent = false;\n        _this_1.inViewIndexes = [];\n        _this_1.keyA = false;\n        _this_1.frozenRightCount = 0;\n        _this_1.freezeColumnRefresh = true;\n        _this_1.rightcount = 0;\n        _this_1.frozenLeftCount = 0;\n        _this_1.leftcount = 0;\n        _this_1.tablesCount = 1;\n        _this_1.movableCount = 0;\n        _this_1.movablecount = 0;\n        _this_1.fixedcount = 0;\n        _this_1.fixedCount = 0;\n        _this_1.visibleFrozenLeft = 0;\n        _this_1.visibleFrozenFixed = 0;\n        _this_1.isPreparedFrozenColumns = false;\n        _this_1.visibleFrozenRight = 0;\n        _this_1.visibleMovable = 0;\n        _this_1.frozenLeftColumns = [];\n        _this_1.frozenRightColumns = [];\n        _this_1.movableColumns = [];\n        _this_1.fixedColumns = [];\n        _this_1.stackedLeft = [];\n        _this_1.stackedRight = [];\n        _this_1.stackedFixed = [];\n        _this_1.stackedMovable = [];\n        _this_1.stackedarrayLeft = [];\n        _this_1.stackedarrayRight = [];\n        _this_1.stackedarrayFixed = [];\n        _this_1.stackedarrayMovable = [];\n        _this_1.media = {};\n        _this_1.autoFitColumnsResize = false;\n        /** @hidden */\n        _this_1.tableIndex = 0;\n        _this_1.componentRefresh = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component.prototype.refresh;\n        _this_1.isChangeDataSourceCall = false;\n        _this_1.mergedColumns = false;\n        /** @hidden */\n        _this_1.isVirtualAdaptive = false;\n        /** @hidden */\n        /**\n         * * If `requireTemplateRef` is set to false in the load event, then the template element can't be accessed in grid queryCellInfo, and rowDataBound events.\n         * * By default, React's grid queryCellInfo and rowDataBound events allow access to the template element.\n         * * Avoid accessing the template elements in the grid queryCellInfo and rowDataBound events to improve rendering performance by setting this value as false.\n         *\n         * @default true\n         */\n        _this_1.requireTemplateRef = true;\n        /** @hidden */\n        _this_1.vRows = [];\n        /** @hidden */\n        _this_1.vcRows = [];\n        /** @hidden */\n        _this_1.vGroupOffsets = {};\n        /** @hidden */\n        _this_1.rowUid = 0;\n        /** @hidden */\n        _this_1.translateX = 0;\n        /** @hidden */\n        _this_1.isManualRefresh = false;\n        /** @hidden */\n        _this_1.isAutoFitColumns = false;\n        /** @hidden */\n        _this_1.enableDeepCompare = false;\n        /** @hidden */\n        _this_1.totalDataRecordsCount = 0;\n        /** @hidden */\n        _this_1.disableSelectedRecords = [];\n        /** @hidden */\n        _this_1.partialSelectedRecords = [];\n        /** @hidden */\n        _this_1.isSpan = false;\n        /** @hidden */\n        _this_1.islazyloadRequest = false;\n        /** @hidden */\n        _this_1.isAddNewRow = false;\n        /** @hidden */\n        _this_1.addNewRowFocus = true;\n        /** @hidden */\n        _this_1.selectVirtualRowOnAdd = false;\n        /** @hidden */\n        _this_1.lockcolPositionCount = 0;\n        /** @hidden */\n        _this_1.prevPageMoving = false;\n        /** @hidden */\n        _this_1.pageTemplateChange = false;\n        /** @hidden */\n        _this_1.isAutoGen = false;\n        /** @hidden */\n        _this_1.isAutoGenerateColumns = false;\n        /** @hidden */\n        _this_1.pageRequireRefresh = true;\n        _this_1.mediaBindInstance = {};\n        /** @hidden */\n        _this_1.commandDelIndex = undefined;\n        /** @hidden */\n        _this_1.preventAutoFit = false;\n        /** @hidden */\n        _this_1.asyncTimeOut = 50;\n        /** @hidden */\n        _this_1.isExportGrid = false;\n        /** @hidden */\n        _this_1.isWidgetsDestroyed = false;\n        _this_1.enableLogger = false;\n        _this_1.needsID = true;\n        Grid_1.Inject(_actions_selection__WEBPACK_IMPORTED_MODULE_1__.Selection);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('mergePersistData', _this_1.mergePersistGridData, _this_1);\n        return _this_1;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} returns the persist data\n     */\n    Grid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[\"\" + val];\n            }\n        }\n        var temp = this.pageSettings.template;\n        var settings = Object.assign({ template: undefined }, this.pageSettings);\n        if (this.enableVirtualization && this.enablePersistence && this.contentModule &&\n            this.contentModule.getPageFromTop && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.scrollPosition) &&\n            !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.scrollPosition.top)) {\n            settings['properties']['currentPage'] = this.contentModule.getPageFromTop(this.scrollPosition.top, { block: 1 });\n        }\n        this.setProperties({ pageSettings: settings }, true);\n        var captionTemplateRef = this.groupSettings.captionTemplate;\n        var isAngularCaptionTemplate = captionTemplateRef && this.isAngular;\n        if (isAngularCaptionTemplate) {\n            delete this.groupSettings['properties']['captionTemplate'];\n        }\n        this.pageTemplateChange = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.pagerTemplate);\n        var persistData = this.addOnPersist(keyEntity);\n        settings.template = temp;\n        this.setProperties({ pageSettings: settings }, true);\n        if (isAngularCaptionTemplate) {\n            this.groupSettings.captionTemplate = captionTemplateRef;\n        }\n        return persistData;\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the module Declaration\n     * @hidden\n     */\n    Grid.prototype.requiredModules = function () {\n        this.setFrozenCount();\n        this.enableInfiniteAggrgate();\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator],\n                name: 'Filter'\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator],\n                name: 'ExcelExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this],\n                name: 'PdfExport'\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator],\n                name: 'Sort'\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings],\n                name: 'Page'\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator],\n                name: 'Selection'\n            });\n        }\n        if (this.resizeCheck()) {\n            modules.push({\n                member: 'resize',\n                args: [this],\n                name: 'Resize'\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this],\n                name: 'Reorder'\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this],\n                name: 'RowDD'\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator],\n                name: 'Group'\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator], name: 'Aggregate' });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator],\n                name: 'DetailRow'\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator],\n                name: 'Toolbar'\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator],\n                name: 'VirtualScroll'\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator], name: 'Freeze' });\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.columns) && this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator],\n                name: 'CommandColumn'\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator],\n                name: 'Edit'\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this, this.serviceLocator],\n                name: 'InfiniteScroll'\n            });\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            modules.push({\n                member: 'lazyLoadGroup',\n                args: [this, this.serviceLocator],\n                name: 'LazyLoadGroup'\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator],\n                name: 'ContextMenu'\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator],\n                name: 'ColumnMenu'\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator],\n                name: 'ColumnChooser'\n            });\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.columns) && this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator], name: 'ForeignKey' });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this], name: 'Logger' });\n        }\n    };\n    Grid.prototype.resizeCheck = function () {\n        var autoFitColumns = this.getColumns().filter(function (c) { return c.autoFit === true; }).length ? true : false;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.columnModel) && this.columnModel.length && !(this.columnModel[0] instanceof _models_column__WEBPACK_IMPORTED_MODULE_2__.Column)) {\n            this.columnModel = [];\n        }\n        var columnMenu = this.showColumnMenu && (!this.columnMenuItems || this.columnMenuItems\n            .filter(function (c) { return c === 'AutoFit' || c === 'AutoFitAll'; }).length) ? true : false;\n        var contextMenu = this.contextMenuItems && this.contextMenuItems\n            .filter(function (c) { return c === 'AutoFit' || c === 'AutoFitAll'; }).length ? true : false;\n        return this.allowResizing || this.autoFitColumnsResize || autoFitColumns || columnMenu || contextMenu;\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new _services_service_locator__WEBPACK_IMPORTED_MODULE_3__.ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.componentRefresh = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component.prototype.refresh;\n        this.freezeColumnRefresh = true;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith', wildCard: 'wildcard',\n            isNull: 'isnull', notNull: 'notnull', like: 'like'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            UnGroupButton: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            ColumnMenu: 'Column Menu',\n            SearchColumns: 'search columns',\n            Matchs: 'No matches found',\n            FilterButton: 'Filter',\n            FilterTitle: 'Filter',\n            FilterIcon: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            NotStartsWith: 'Does Not Start With',\n            Like: 'Like',\n            EndsWith: 'Ends With',\n            NotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            NotContains: 'Does Not Contain',\n            IsNull: 'Null',\n            NotNull: 'Not Null',\n            IsEmpty: 'Empty',\n            IsNotEmpty: 'Not Empty',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            In: 'In',\n            NotIn: 'Not In',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            GroupButton: 'Group button',\n            UnGroupAria: 'ungroup button',\n            GroupSeperator: 'Separator for the grouped columns',\n            UnGroupIcon: 'ungroup the grouped column ',\n            GroupedSortIcon: 'sort the grouped column ',\n            GroupedDrag: 'Drag the grouped column',\n            GroupCaption: ' is groupcaption cell',\n            CheckBoxLabel: 'checkbox',\n            SelectAllCheckbox: 'Select all checkbox',\n            SelectRow: 'Select row',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            AutoFitAll: 'Autofit all columns',\n            AutoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            AddCurrentSelection: 'Add current selection to filter',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No matches found',\n            ClearFilter: 'Clear Filter',\n            Clear: 'Clear',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            ToolbarMenuDialogARIA: 'Toolbar menu dialog',\n            FilterMenuDialogARIA: 'Filter menu',\n            ExcelFilterDialogARIA: 'Excel filter',\n            CheckBoxFilterDialogARIA: 'Checkbox filter',\n            DialogEditARIA: 'Edit dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog',\n            SortAtoZ: 'Sort A to Z',\n            SortZtoA: 'Sort Z to A',\n            SortByOldest: 'Sort by Oldest',\n            SortByNewest: 'Sort by Newest',\n            SortSmallestToLargest: 'Sort Smallest to Largest',\n            SortLargestToSmallest: 'Sort Largest to Smallest',\n            Sort: 'Sort',\n            SortIcon: 'Sort',\n            FilterDescription: 'Press Alt Down to open filter Menu',\n            SortDescription: 'Press Enter to sort',\n            ColumnMenuDescription: 'Press Alt Down to open Column Menu',\n            GroupDescription: 'Press Ctrl space to group',\n            ColumnHeader: ' column header ',\n            TemplateCell: ' is template cell',\n            CommandColumnAria: 'is Command column column header ',\n            DialogEdit: 'Dialog edit',\n            ClipBoard: 'clipboard',\n            AscendingText: 'Ascending',\n            DescendingText: 'Descending',\n            NoneText: 'None',\n            Expanded: 'Expanded',\n            Collapsed: 'Collapsed'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { role: 'grid' });\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_4__.createSpinner)({ target: this.element, cssClass: this.cssClass ? this.cssClass : null }, this.createElement);\n        this.renderModule = new _renderer_render__WEBPACK_IMPORTED_MODULE_5__.Render(this, this.serviceLocator);\n        this.searchModule = new _actions_search__WEBPACK_IMPORTED_MODULE_6__.Search(this);\n        this.scrollModule = new _actions_scroll__WEBPACK_IMPORTED_MODULE_7__.Scroll(this);\n        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.initialLoad, {});\n        if (this.pageSettings.enableQueryString) {\n            var pageValue = new URL(window.location.href).searchParams.get('page');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pageValue) && window.location.href.indexOf('?page=') > 0) {\n                var currentPageValue = parseInt(pageValue, 10);\n                this.setProperties({ pageSettings: { currentPage: currentPageValue } }, true);\n                this.pageSettings.currentPage = currentPageValue;\n            }\n        }\n        if ((this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined)\n            && !(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dataSource) && this.dataSource.result)) {\n            this.isVirtualAdaptive = true;\n        }\n        if (this.aggregateModule && this.aggregates.length) {\n            for (var i = 0; i < this.aggregates.length; i++) {\n                for (var j = 0; j < this.aggregates[parseInt(i.toString(), 10)].columns.length; j++) {\n                    var column = this.aggregates[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)];\n                    if (column['types']) {\n                        column.type = column['types'];\n                    }\n                }\n            }\n        }\n        if (this.isReact) {\n            var args = { requireTemplateRef: this.requireTemplateRef };\n            this.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_8__.load, args);\n            if (!args.requireTemplateRef) {\n                this.requireTemplateRef = args.requireTemplateRef;\n            }\n        }\n        else {\n            this.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_8__.load);\n        }\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.prepareColumns)(this.columns, this.enableColumnVirtualization, this);\n        if (this.enableColumnVirtualization && this.isChangeDataSourceCall && this.columnModel) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        this.isPreparedFrozenColumns = true;\n        if (this.enablePersistence) {\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.columnsPrepared, {});\n        }\n        this.getMediaColumns();\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.setColumnIndex)(this.columns);\n        if (this.isFrozenGrid() && !this.mergedColumns) {\n            this.setInitialFrozenColumnIndex(this.columns);\n        }\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        if (this.loadingIndicator.indicatorType === 'Spinner') {\n            this.showSpinner();\n        }\n        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.initialEnd, {});\n        if (this.loadingIndicator.indicatorType === 'Shimmer') {\n            this.refreshMaskRow();\n        }\n        if (this.refreshing) {\n            this.trigger('created');\n        }\n    };\n    Grid.prototype.setInitialFrozenColumnIndex = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = columns[parseInt(i.toString(), 10)];\n            column[\"\" + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.initialFrozenColumnIndex] = column.index;\n            if (column.columns) {\n                this.setInitialFrozenColumnIndex(column.columns);\n            }\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showSpinner = function () {\n        if (!this.isExportGrid) {\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_4__.showSpinner)(this.element);\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideSpinner = function () {\n        if (!this.isExportGrid) {\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_4__.hideSpinner)(this.element);\n        }\n    };\n    Grid.prototype.showMaskRow = function (axisDirection, dialogElement) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.headerModule) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentModule)) {\n            return;\n        }\n        var gridHeader = this.getHeaderContent().firstChild;\n        var gridContent = this.getContent().firstChild;\n        var gridFooter = this.getFooterContent();\n        if (dialogElement) {\n            var dialogHolder = dialogElement.querySelector('.e-checkboxlist');\n            var maskRowCount = Math.floor(dialogHolder.getBoundingClientRect().height / this.getRowHeight());\n            var maskTemplate = '<div class=\"e-ftrchk e-mask-ftrchk\">'\n                + '<div class=\"e-checkbox-wrapper\"><input class=\"e-chk-hidden\">'\n                + this.getShimmerTemplate() + this.getShimmerTemplate() + '</div></div>';\n            dialogHolder.innerHTML = '';\n            for (var i = 0; i < maskRowCount; i++) {\n                dialogHolder.innerHTML += maskTemplate;\n                dialogHolder.querySelector('.e-ftrchk.e-mask-ftrchk').style.width = '100%';\n                dialogHolder.querySelector('.e-checkbox-wrapper').style.width = '100%';\n                var maskSpan = [].slice.call(dialogHolder\n                    .querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n                maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n                maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n            }\n            return;\n        }\n        if ((!this.enableRtl && !this.getHeaderContent().style.paddingRight)\n            || (this.enableRtl && !this.getHeaderContent().style.paddingLeft)) {\n            gridContent.style.overflowY = 'hidden';\n        }\n        if (!this.isInitialLoad && !this.getColumns().length) {\n            var contentHeight = gridContent.getBoundingClientRect().height;\n            var maskTableHeight = contentHeight === 0 ? this.allowPaging ? this.pageSettings.pageSize * this.getRowHeight()\n                : window.innerHeight : contentHeight;\n            var contentRowCount = Math.ceil(maskTableHeight / this.getRowHeight());\n            if (this.rowRenderingMode !== 'Vertical') {\n                this.headerMaskTable = this.createEmptyMaskTable(gridHeader, 1);\n            }\n            this.contentMaskTable = this.createEmptyMaskTable(gridContent, contentRowCount);\n            return;\n        }\n        this.maskRowContentScroll = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? true : false;\n        if (!this.contentMaskTable) {\n            var content = gridContent;\n            if (this.enableVirtualization || this.enableColumnVirtualization) {\n                content = content.querySelector('.e-virtualtable');\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(content.querySelector('tbody'))) {\n                this.contentMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n            }\n        }\n        if (!this.headerMaskTable && (this.isFrozenGrid() || (this.enableColumnVirtualization && axisDirection === 'X'))) {\n            var content = gridHeader;\n            if (this.enableColumnVirtualization && axisDirection === 'X') {\n                content = content.querySelector('.e-virtualtable');\n            }\n            this.headerMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n        }\n        if (gridFooter && gridFooter.querySelector('.e-summaryrow')) {\n            var gridFooterContent = gridFooter.firstChild;\n            if (!this.footerContentMaskTable) {\n                var footerContent = gridFooterContent;\n                this.footerContentMaskTable = this.createMaskTable(footerContent);\n            }\n        }\n        if (!(this.enableVirtualization && axisDirection)) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(gridContent, 'scroll', this.translateMaskRow, this);\n        }\n    };\n    Grid.prototype.getContentMaskColumns = function () {\n        return this.getColumns();\n    };\n    Grid.prototype.createEmptyMaskTable = function (maskElement, rowCount) {\n        var table = this.createElement('table', { className: 'e-table e-masked-table' });\n        var tbody = this.createElement('tbody', { className: 'e-masked-tbody' });\n        var row = this.createElement('tr', { className: 'e-masked-row e-row' });\n        row.style.height = this.getRowHeight() + \"px\";\n        var cell = this.createElement('td', { className: 'e-masked-cell e-rowcell' });\n        cell.innerHTML = this.getShimmerTemplate();\n        row.appendChild(cell);\n        for (var i = 0; i < rowCount; i++) {\n            tbody.appendChild(row.cloneNode(true));\n        }\n        table.appendChild(tbody);\n        maskElement.appendChild(table);\n        return table;\n    };\n    Grid.prototype.createMaskTable = function (element, columns, axisDirection) {\n        var parentElement = element;\n        var header = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(parentElement, '.e-gridheader') ? true : false;\n        var content = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(parentElement, '.e-gridcontent') ? true : false;\n        var footer = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(parentElement, '.e-gridfooter') ? true : false;\n        var gridContent = this.getContent().firstChild;\n        var gridContentScrollHeight = gridContent.scrollHeight;\n        var table = parentElement.querySelector('table');\n        var maskTable = table.cloneNode();\n        maskTable.removeAttribute('role');\n        maskTable.removeAttribute('id');\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.updateCSSText)(maskTable, \"position: absolute; z-index: 5; width: \" + table.getBoundingClientRect().width + \"px;\");\n        if (header && !(this.enableColumnVirtualization && axisDirection === 'X')) {\n            maskTable.style.transform = 'translate(0px,'\n                + table.querySelector('thead').getBoundingClientRect().height + 'px)';\n        }\n        maskTable.setAttribute('class', 'e-table e-masked-table');\n        var maskColgroup = table.querySelector('colgroup').cloneNode(true);\n        maskColgroup.removeAttribute('id');\n        maskColgroup.setAttribute('class', 'e-masked-colgroup');\n        maskTable.appendChild(maskColgroup);\n        if (header && this.enableColumnVirtualization && axisDirection === 'X') {\n            var row = this.createMaskRow(maskColgroup, columns);\n            if (this.isFrozenGrid()) {\n                var frzTd = [].slice.call(row.querySelectorAll('.e-rowcell'));\n                for (var i = 0; i < frzTd.length; i++) {\n                    if (i < this.frozenLeftCount) {\n                        if (this.frozenLeftCount - 1 === i) {\n                            frzTd[parseInt(i.toString(), 10)].classList.add('e-freezeleftborder');\n                        }\n                        frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                        frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                        frzTd[parseInt(i.toString(), 10)].style.left = (columns[parseInt(i.toString(), 10)].valueX -\n                            this.translateX) + 'px';\n                    }\n                    else if ((frzTd.length - this.frozenRightCount) <= i && columns[parseInt(i.toString(), 10)]) {\n                        if ((frzTd.length - this.frozenRightCount) === i) {\n                            frzTd[parseInt(i.toString(), 10)].classList.add('e-freezerightborder');\n                        }\n                        frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n                        frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                        frzTd[parseInt(i.toString(), 10)].style.right = (this.translateX +\n                            columns[parseInt(i.toString(), 10)].valueX) + 'px';\n                    }\n                }\n            }\n            var thead = table.querySelector('thead');\n            var rows = [].slice.call(thead.querySelectorAll('tr'));\n            var maskTHead = thead.cloneNode();\n            maskTHead.removeAttribute('role');\n            maskTHead.setAttribute('class', 'e-masked-thead');\n            var rowCount = rows.length;\n            for (var i = 0; i < rowCount; i++) {\n                maskTHead.appendChild(row.cloneNode(true));\n                maskTHead.childNodes[parseInt(i.toString(), 10)].style\n                    .height = rows[parseInt(i.toString(), 10)].getBoundingClientRect().height + 'px';\n            }\n            maskTable.appendChild(maskTHead);\n        }\n        var maskTBody = table.querySelector('tbody').cloneNode();\n        maskTBody.removeAttribute('role');\n        maskTBody.setAttribute('class', 'e-masked-tbody');\n        var tbody = table.querySelector('tbody');\n        if (content || header) {\n            var rowCountElement = gridContent;\n            var rowCount = Math.ceil(rowCountElement.getBoundingClientRect().height / this.getRowHeight());\n            if (this.allowPaging && this.pageSettings.pageSize !== this.currentViewData.length &&\n                this.pagerModule.pagerObj.totalPages !== this.pageSettings.currentPage) {\n                var row = this.createMaskRow(maskColgroup, columns);\n                var altRow = row.cloneNode(true);\n                altRow.classList.add('e-altrow');\n                for (var i = 0; i < this.pageSettings.pageSize - this.currentViewData.length; i++) {\n                    maskTBody.appendChild((i % 2 === 1) ? altRow.cloneNode(true) : row.cloneNode(true));\n                }\n            }\n            if (tbody.querySelector('.e-emptyrow') || !tbody.childNodes.length || (content && this.childGrid)) {\n                var row = this.createMaskRow(maskColgroup, columns);\n                var altRow = row.cloneNode(true);\n                altRow.classList.add('e-altrow');\n                for (var i = 0; i < rowCount; i++) {\n                    var altNumber = 1;\n                    maskTBody.appendChild((i + altNumber) % 2 === 0 ? altRow.cloneNode(true) : row.cloneNode(true));\n                }\n            }\n            else {\n                var rowsQuery = 'tr:not(.e-hide):not([style*=\"display:none\"]):not([style*=\"display: none\"])';\n                var rows = [].slice.call(tbody.querySelectorAll(rowsQuery));\n                var addEditRow = tbody.querySelector('.e-addedrow, .e-editedrow');\n                var addEditRowIndex = void 0;\n                if (addEditRow) {\n                    addEditRowIndex = rows.indexOf(addEditRow);\n                    if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n                        var frzTd = [].slice.call(rows[addEditRowIndex + 1].querySelectorAll('.e-rowcell'));\n                        for (var i = 0; i < frzTd.length; i++) {\n                            if (i < this.frozenLeftCount) {\n                                frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                                frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                                frzTd[parseInt(i.toString(), 10)].style.left = (columns[parseInt(i.toString(), 10)].valueX - this.translateX) + 'px';\n                            }\n                            else if ((frzTd.length - this.frozenRightCount) <= i && columns[parseInt(i.toString(), 10)]) {\n                                frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n                                frzTd[parseInt(i.toString(), 10)].setAttribute('aria-colindex', (i + 1).toString());\n                                frzTd[parseInt(i.toString(), 10)].style.right = (this.translateX +\n                                    columns[parseInt(i.toString(), 10)].valueX) + 'px';\n                            }\n                        }\n                    }\n                    if (addEditRow.classList.contains('e-addedrow')) {\n                        rows.splice(addEditRowIndex, 2);\n                    }\n                    else {\n                        rows.splice(addEditRowIndex, 1);\n                    }\n                }\n                rowCount = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? rows.length\n                    : rowCount <= rows.length ? rowCount : rows.length;\n                for (var i = 0; i < rowCount; i++) {\n                    maskTBody.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n                }\n                if (addEditRow && addEditRow.classList.contains('e-editedrow') && addEditRowIndex < rowCount) {\n                    var addEditMaskRow = maskTBody.childNodes[parseInt(addEditRowIndex.toString(), 10)];\n                    addEditMaskRow.style.height = this.getRowHeight() + 'px';\n                    addEditMaskRow.classList.add('e-row');\n                    if (addEditRow.classList.contains('e-altrow')) {\n                        addEditMaskRow.classList.add('e-altrow');\n                    }\n                }\n            }\n        }\n        maskTable.appendChild(maskTBody);\n        if (footer) {\n            var tfoot = table.querySelector('tfoot');\n            var maskTFoot = tfoot.cloneNode();\n            maskTFoot.setAttribute('class', 'e-masked-tfoot');\n            var rows = [].slice.call(tfoot.querySelectorAll('tr'));\n            for (var i = 0; i < rows.length; i++) {\n                maskTFoot.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n            }\n            maskTable.appendChild(maskTFoot);\n        }\n        if (header && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            this.getHeaderContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.headerContent).style.position = 'relative';\n        }\n        parentElement.insertBefore(maskTable, parentElement.firstChild);\n        if (content && !(this.enableVirtualization && axisDirection)) {\n            var minScrollTop = gridContentScrollHeight - maskTable.getBoundingClientRect().height;\n            minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n            var scrollTop = gridContent.scrollTop <= minScrollTop ? gridContent.scrollTop : minScrollTop;\n            if (this.enableVirtualization) {\n                scrollTop -= (0,_util__WEBPACK_IMPORTED_MODULE_9__.getTransformValues)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(parentElement, '.e-virtualtable')).height;\n            }\n            maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n        }\n        return maskTable;\n    };\n    Grid.prototype.applyMaskRow = function (row, rowHeight) {\n        var maskRow = row;\n        maskRow.removeAttribute('role');\n        maskRow.removeAttribute('aria-rowindex');\n        maskRow.removeAttribute('data-uid');\n        maskRow.classList.add('e-masked-row');\n        maskRow.style.height = rowHeight + 'px';\n        var maskCells = [].slice.call(maskRow.childNodes);\n        for (var i = 0; i < maskCells.length; i++) {\n            var maskCell = maskCells[parseInt(i.toString(), 10)];\n            var displayAsCheckBoxCell = maskCell.firstChild && maskCell.firstChild.classList\n                && maskCell.firstChild.classList.contains('e-checkbox-wrapper');\n            maskCell.removeAttribute('role');\n            maskCell.removeAttribute('tabindex');\n            maskCell.removeAttribute('aria-label');\n            if (this.enableColumnVirtualization && maskCell.classList.contains('e-fixedfreeze')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([maskCell], ['e-fixedfreeze', 'e-freezeleftborder', 'e-freezerightborder']);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([maskCell], ['e-unfreeze']);\n            }\n            maskCell.removeAttribute('aria-colindex');\n            maskCell.removeAttribute('index');\n            maskCell.removeAttribute('ej-mappingname');\n            maskCell.removeAttribute('ej-mappingvalue');\n            maskCell.removeAttribute('e-mappinguid');\n            maskCell.removeAttribute('aria-expanded');\n            maskCell.classList.add('e-masked-cell');\n            maskCell.innerHTML = this.getShimmerTemplate();\n            if (maskCell.classList.contains('e-recordplusexpand') || maskCell.classList.contains('e-recordpluscollapse')) {\n                maskCell.firstChild.classList.add('e-mask-group-intent');\n            }\n            else if (maskCell.classList.contains('e-gridchkbox') || displayAsCheckBoxCell) {\n                maskCell.firstChild.classList.add('e-mask-checkbox-intent');\n            }\n            else if (maskCell.classList.contains('e-rowdragdrop')) {\n                maskCell.firstChild.classList.add('e-mask-drag-intent');\n            }\n            else if (maskCell.classList.contains('e-indentcell')) {\n                maskCell.innerHTML = '';\n            }\n        }\n        return maskRow;\n    };\n    Grid.prototype.createMaskRow = function (refColgroup, refColumns) {\n        var colgroup = refColgroup;\n        var columns = refColumns;\n        var row = this.createElement('tr', { className: 'e-masked-row e-row' });\n        if (this.rowRenderingMode !== 'Vertical') {\n            row.style.height = this.getRowHeight() + 'px';\n        }\n        var td = this.createElement('td', { className: 'e-masked-cell e-rowcell' });\n        for (var i = 0, colIndex = 0; i < colgroup.childNodes.length; i++) {\n            var col = colgroup.childNodes[parseInt(i.toString(), 10)];\n            var localTD = td.cloneNode();\n            localTD.innerHTML = this.getShimmerTemplate();\n            if (!(col.classList.contains('e-group-intent') || col.classList.contains('e-detail-intent')\n                || col.classList.contains('e-drag-intent'))) {\n                if (this.rowRenderingMode === 'Vertical' && columns[parseInt(colIndex.toString(), 10)]) {\n                    localTD.setAttribute('data-cell', columns[parseInt(colIndex.toString(), 10)].headerText ?\n                        columns[parseInt(colIndex.toString(), 10)].headerText : columns[parseInt(colIndex.toString(), 10)].field);\n                }\n                if (col.style.display === 'none') {\n                    localTD.classList.add('e-hide');\n                }\n                else {\n                    localTD.style.textAlign = columns[parseInt(colIndex.toString(), 10)]\n                        && columns[parseInt(colIndex.toString(), 10)].textAlign ?\n                        columns[parseInt(colIndex.toString(), 10)].textAlign.toLowerCase()\n                        : this.enableRtl ? 'right' : 'left';\n                    if (columns[parseInt(colIndex.toString(), 10)] && (columns[parseInt(colIndex.toString(), 10)].type === 'checkbox'\n                        || columns[parseInt(colIndex.toString(), 10)].displayAsCheckBox)) {\n                        localTD.firstChild.classList.add('e-mask-checkbox-intent');\n                    }\n                }\n                colIndex++;\n            }\n            else {\n                if (col.classList.contains('e-group-intent')) {\n                    localTD.firstChild.classList.add('e-mask-group-intent');\n                }\n                else if (col.classList.contains('e-detail-intent')) {\n                    localTD.firstChild.classList.add('e-mask-detail-intent');\n                }\n                else if (col.classList.contains('e-drag-intent')) {\n                    localTD.firstChild.classList.add('e-mask-drag-intent');\n                }\n            }\n            row.appendChild(localTD);\n        }\n        return row;\n    };\n    Grid.prototype.getShimmerTemplate = function () {\n        if (this.maskRowContentScroll) {\n            return '<span class=\"e-mask e-skeleton e-skeleton-text\"></span>';\n        }\n        return '<span class=\"e-mask e-skeleton e-skeleton-text e-shimmer-wave\"></span>';\n    };\n    Grid.prototype.addShimmerEffect = function () {\n        this.maskRowContentScroll = false;\n        var maskSpan = [].slice.call(this.element.querySelectorAll('.e-mask:not(.e-shimmer-wave)'));\n        for (var i = 0; i < maskSpan.length; i++) {\n            if (maskSpan[parseInt(i.toString(), 10)]) {\n                maskSpan[parseInt(i.toString(), 10)].classList.add('e-shimmer-wave');\n            }\n        }\n    };\n    Grid.prototype.translateMaskRow = function (e) {\n        var target = e.target;\n        var maskTables = target.querySelectorAll('.e-masked-table');\n        for (var i = 0; i < maskTables.length; i++) {\n            var maskTable = maskTables[parseInt(i.toString(), 10)];\n            if (maskTable) {\n                var minScrollTop = target.scrollHeight - maskTable.getBoundingClientRect().height;\n                minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n                var scrollTop = target.scrollTop <= minScrollTop ? target.scrollTop : minScrollTop;\n                if (this.enableVirtualization) {\n                    scrollTop -= (0,_util__WEBPACK_IMPORTED_MODULE_9__.getTransformValues)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(maskTable, '.e-virtualtable')).height;\n                }\n                maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n            }\n        }\n    };\n    Grid.prototype.removeMaskRow = function () {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.contentModule)) {\n            var gridContent = this.getContent().firstChild;\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(gridContent, 'scroll', this.translateMaskRow);\n        }\n        if (this.headerMaskTable && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            this.getHeaderContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.headerContent).style.position = '';\n        }\n        var maskTables = [this.headerMaskTable,\n            this.contentMaskTable, this.footerContentMaskTable];\n        for (var i = 0; i < maskTables.length; i++) {\n            var maskTable = maskTables[parseInt(i.toString(), 10)];\n            if (maskTable) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(maskTable);\n            }\n        }\n        this.headerMaskTable = null;\n        this.contentMaskTable = null;\n        this.footerContentMaskTable = null;\n    };\n    Grid.prototype.refreshMaskRow = function () {\n        var gridContent = this.getContent().firstChild;\n        if (!this.isInitialLoad && !this.getColumns().length) {\n            return;\n        }\n        if (this.contentMaskTable && gridContent.querySelector('.e-masked-table')) {\n            var content = gridContent;\n            if (this.enableVirtualization) {\n                content = content.querySelector('.e-virtualtable');\n            }\n            this.refreshMaskRowColgroupWidth(content);\n        }\n    };\n    Grid.prototype.refreshMaskRowColgroupWidth = function (content) {\n        var table = content.querySelector('table:not(.e-masked-table)');\n        var colgroup = table.querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.colGroup).cloneNode(true);\n        var maskTable = content.querySelector('.e-masked-table');\n        colgroup.removeAttribute('id');\n        colgroup.setAttribute('class', 'e-masked-colgroup');\n        for (var i = 0; i < colgroup.childNodes.length; i++) {\n            colgroup.childNodes[parseInt(i.toString(), 10)].removeAttribute('class');\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(maskTable.querySelector('.e-masked-colgroup'));\n        maskTable.insertBefore(colgroup, maskTable.firstChild);\n        maskTable.style.width = table.getBoundingClientRect().width + 'px';\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gcol[parseInt(index.toString(), 10)].hideAtMedia)\n                        && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gcol[parseInt(index.toString(), 10)].visible)\n                            || gcol[parseInt(index.toString(), 10)].visible)) {\n                        this.pushMediaColumn(gcol[parseInt(index.toString(), 10)], index);\n                    }\n                }\n            }\n        }\n        this.updateFrozenColumnsWidth();\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance[parseInt(index.toString(), 10)] = this.mediaQueryUpdate.bind(this, index);\n        this.media[col.uid].addListener(this.mediaBindInstance[parseInt(index.toString(), 10)]);\n    };\n    /**\n     * @param {Column} col - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[parseInt(i.toString(), 10)].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @param {number} columnIndex - specifies the column index\n     * @param {MediaQueryList} e - specifies the MediaQueryList\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[parseInt(columnIndex.toString(), 10)];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        var footerContent = this.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.gridFooter);\n        if (this.aggregates.length && this.element.scrollHeight > parseInt(this.height.toString(), 10) && footerContent) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length === 0 || checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n        }\n        if (this.rowRenderingMode === 'Vertical') {\n            if (this.enableHover) {\n                this.setProperties({ enableAdaptiveUI: true, enableHover: false }, true);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], 'e-gridhover');\n            }\n        }\n        if (this.enableAdaptiveUI && this.scrollModule) {\n            this.scrollModule.refresh();\n        }\n        if (this.isFrozenGrid() && this.isAutoGenerateColumns) {\n            this.widthService.setWidthToColumns();\n            this.isAutoGenerateColumns = false;\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[parseInt(i.toString(), 10)].uid]\n                .removeListener(this.mediaBindInstance[this.mediaCol[parseInt(i.toString(), 10)].index]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.gridHeader) &&\n            gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.destroy, {});\n        this.destroyDependentModules();\n        if (this.isReact) {\n            this.destroyTemplate(['template']);\n        }\n        if (this.isVue) {\n            this.destroyTemplate();\n        }\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        if (this.isReact && !_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isIE) {\n            this.element.innerHTML = '';\n        }\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.gridHeader) && !gridElement.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.gridContent))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n        this.clipboardModule.destroy();\n        this.printModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n            this.element.classList.add('e-afenabled');\n        }\n        else {\n            this.element.classList.remove('e-afenabled');\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.destroyAutoFillElements, {});\n        }\n    };\n    Grid.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.split(' '));\n        }\n        if (oldCSSClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], oldCSSClass.split(' '));\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {GridModel} newProp - Defines new properties\n     * @param {GridModel} oldProp - Defines old properties\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        var childGridParent = null;\n        var parentInstance = null;\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n            }\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    if (this.pagerModule && this.pagerModule.isCancel) {\n                        this.pagerModule.isCancel = false;\n                        return;\n                    }\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.pageSettings.currentPage) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.pageSettings.pageSize)\n                        && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(newProp.pageSettings.totalRecordsCount)\n                        || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageRequireRefresh\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    if (!this.pageRequireRefresh) {\n                        this.pageRequireRefresh = true;\n                    }\n                    if (this.pagerModule && this.pagerModule.isCancel) {\n                        this.pagerModule.isCancel = false;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar' || (this.editSettings.showAddNewRow && this.filterSettings.type === 'FilterBar')) {\n                        this.refreshHeader();\n                    }\n                    else {\n                        if (this.height === '100%') {\n                            this.scrollModule.refresh();\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    if (this.allowPaging) {\n                        this.pagerModule.refresh();\n                    }\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    this.renderModule.refresh();\n                    this.headerModule.refreshUI();\n                    break;\n                case 'allowSelection':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    this.renderModule.refresh();\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'emptyRecordTemplate':\n                    this.emptyRecordTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.emptyRecordTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'enableInfiniteScrolling':\n                case 'childGrid':\n                    requireRefresh = true;\n                    childGridParent = this.parentDetails ? document.querySelector(\"#\" + this.parentDetails.parentID) : null;\n                    parentInstance = childGridParent ? childGridParent.ej2_instances[0] : null;\n                    if (this.childGrid && parentInstance && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parentInstance.childGrid.childGrid)) {\n                        var childGridObject = Object.assign({}, parentInstance.childGrid, { childGrid: newProp.childGrid });\n                        parentInstance.setProperties({ childGrid: childGridObject }, true);\n                        while (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parentInstance.parentDetails)) {\n                            var currentParent = document.querySelector(\"#\" + parentInstance.parentDetails.parentID);\n                            var currentParentInstance = currentParent ? currentParent.ej2_instances[0] : null;\n                            if (currentParentInstance) {\n                                var currentChildObject = Object.assign({}, currentParentInstance.childGrid);\n                                currentChildObject.childGrid = parentInstance.childGrid;\n                                currentParentInstance.setProperties({ childGrid: currentChildObject }, true);\n                            }\n                            parentInstance = currentParentInstance;\n                        }\n                    }\n                    this.headerModule.refreshUI();\n                    break;\n                case 'toolbar':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'toolbar' });\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'groupSettings':\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'aggregate', properties: newProp });\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'enableColumnVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    if (this.isFrozenGrid()) {\n                        this.log('frozen_rows_columns');\n                    }\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    this.addNewRowFocus = true;\n                    break;\n                case 'query':\n                    if (!this.getDataModule().isQueryInvokedFromData) {\n                        requireRefresh = true;\n                    }\n                    this.getDataModule().isQueryInvokedFromData = false;\n                    break;\n                case 'autoFit':\n                    if (this.autoFit) {\n                        this.preventAdjustColumns();\n                    }\n                    else {\n                        this.restoreAdjustColumns();\n                    }\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.getFrozenColumns() || this.frozenRows\n                || (this.frozenLeftColumns.length || this.frozenRightColumns.length)) {\n                this.freezeRefresh();\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule && !this.enableAdaptiveUI) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n                    this.refreshHeader();\n                }\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                if (this.resizeModule) {\n                    this.resizeModule.render();\n                }\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], 'e-grid-min-height');\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                if (this.toolbarModule) {\n                    this.toolbarModule.refreshToolbarItems();\n                }\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                this.refreshHeader();\n                if (this.height === '100%') {\n                    this.scrollModule.refresh();\n                }\n                break;\n            case 'dataSource':\n                // eslint-disable-next-line no-case-declarations\n                var requestPendingState = this.getDataModule().getState();\n                if (this.allowPaging && this.pageSettings.pageSizes && !this.getDataModule().isRemote()\n                    && !(requestPendingState && requestPendingState.isPending)) {\n                    if (this.pagerModule.pagerObj.isAllPage) {\n                        var count = this.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_11__.DataManager ? this.dataSource.dataSource.json.length :\n                            'result' in this.dataSource ? this.dataSource.count : this.dataSource.length;\n                        var isAllPage = Array.isArray(this.pageSettings.pageSizes) &&\n                            this.pageSettings.pageSizes.indexOf('All') > -1 ? true : this.pageSettings.pageSizes;\n                        if (!isAllPage && this.pageSettings.pageSize !== count) {\n                            this.pagerModule.pagerObj.isAllPage = false;\n                        }\n                        else {\n                            this.setProperties({ pageSettings: { pageSize: count } }, true);\n                            this.pagerModule.pagerObj.setProperties({ pageSize: count }, true);\n                        }\n                    }\n                }\n                if (this.allowSelection && this.isPersistSelection && !(requestPendingState && requestPendingState.isPending)) {\n                    this.clearSelection();\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dataSource) && this.dataSource.result) {\n                    this.isVirtualAdaptive = false;\n                }\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(pKeyField, this.dataSource[props[parseInt(i.toString(), 10)]]), this.dataSource[props[parseInt(i.toString(), 10)]]);\n                    }\n                }\n                else if (requestPendingState.isPending) {\n                    var gResult = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dataSource) ? this.dataSource.result : [];\n                    var names = (requestPendingState.group || []);\n                    if (names.length && !this.groupSettings.enableLazyLoading && !(gResult.length && gResult[0].field)) {\n                        for (var i = 0; i < names.length; i++) {\n                            gResult = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_12__.DataUtil.group(gResult, names[parseInt(i.toString(), 10)], requestPendingState.aggregates\n                                || []);\n                        }\n                    }\n                    this.dataSource = {\n                        result: gResult, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    requestPendingState.resolver(this.dataSource);\n                }\n                else {\n                    if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.dataSource) && this.dataSource.result\n                        && this.dataSource.count && this.groupSettings.columns.length)) {\n                        var gResult = this.dataSource.result;\n                        var names = this.groupSettings.columns;\n                        if (names.length && !(gResult.length && gResult[0].field)) {\n                            for (var i = 0; i < names.length; i++) {\n                                gResult = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_12__.DataUtil.group(gResult, names[parseInt(i.toString(), 10)]);\n                            }\n                        }\n                        this.dataSource = {\n                            result: gResult, count: this.dataSource.count\n                        };\n                    }\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                        if (this.isCheckBoxSelection) {\n                            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.beforeRefreshOnDataChange, {});\n                        }\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                // eslint-disable-next-line no-case-declarations\n                var action = newProp.enableHover ? _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass : _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n            case 'resizeSettings':\n                this.widthService.setWidthToTable();\n                break;\n            case 'enableAdaptiveUI':\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.setFullScreenDialog, {});\n                break;\n            case 'rowRenderingMode':\n                this.enableVerticalRendering();\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.rowModeChange, {});\n                this.refresh();\n                break;\n            case 'enableStickyHeader':\n                this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n                break;\n            case 'allowPdfExport':\n                if (this.toolbarModule) {\n                    this.toolbarModule.refreshToolbarItems();\n                }\n                break;\n            case 'allowExcelExport':\n                if (this.toolbarModule) {\n                    this.toolbarModule.refreshToolbarItems();\n                }\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this_1 = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this_1.selectRow(index);\n                _this_1.off(_base_constant__WEBPACK_IMPORTED_MODULE_8__.contentReady, fn_1);\n            };\n            this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @param {Object} prop - Defines the property\n     * @param {boolean} muteOnChange - Defines the mute on change\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[\"\" + filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} - Returns the tables count\n     */\n    Grid.prototype.getTablesCount = function () {\n        return this.tablesCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n        var cols = this.getColumns();\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[parseInt(i.toString(), 10)];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[parseInt(i.toString(), 10)].allowReordering || !cols[parseInt(i.toString(), 10)].allowSorting\n                    || !cols[parseInt(i.toString(), 10)].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[parseInt(count.toString(), 10)].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns, isRecursion) {\n        for (var i = 0, len = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns) ? columns.length : 0); i < len; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.updateColumnModel(columns[parseInt(i.toString(), 10)].columns, true);\n            }\n            else {\n                this.columnModel.push(columns[parseInt(i.toString(), 10)]);\n            }\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(isRecursion) || !isRecursion) {\n            this.updateLockableColumns();\n        }\n    };\n    Grid.prototype.getFrozenLeftCount = function () {\n        return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    };\n    Grid.prototype.isFrozenGrid = function () {\n        return this.getFrozenColumns() !== 0 || this.frozenLeftColumns.length !== 0 || this.frozenRightColumns.length !== 0 ||\n            this.fixedColumns.length !== 0;\n    };\n    Grid.prototype.getFrozenMode = function () {\n        return this.frozenName;\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].columns) {\n                this.checkLockColumns(cols[parseInt(i.toString(), 10)].columns);\n            }\n            else if (cols[parseInt(i.toString(), 10)].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * @param {string} position - specifies position\n     * @returns {number} returns the width\n     * @hidden\n     */\n    Grid.prototype.leftrightColumnWidth = function (position) {\n        var cols = position === 'left' ? this.getFrozenLeftColumns() : position === 'right' ? this.getFrozenRightColumns() : [];\n        var width = 0;\n        cols.filter(function (col) {\n            if (col.visible) {\n                width += parseInt(col.width.toString(), 10);\n            }\n        });\n        return width;\n    };\n    /**\n     * Gets the columns from the Grid.\n     *\n     * @param {boolean} isRefresh - Defines the boolean whether to refresh\n     * @returns {Column[]} - returns the column\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this_1 = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this_1.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.getVisibleColumns().slice(inview[0], inview[vLen - 1] + 1);\n        var left = [];\n        var right = [];\n        var movable = [];\n        var isLeftRightFrozen = this.enableColumnVirtualization && this.isPreparedFrozenColumns && vLen === 0;\n        if (isLeftRightFrozen) {\n            this.frozenRightColumns = [];\n            this.frozenLeftColumns = [];\n        }\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                left.push(columns[parseInt(i.toString(), 10)]);\n                if (isLeftRightFrozen) {\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n            else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                right.push(columns[parseInt(i.toString(), 10)]);\n                if (isLeftRightFrozen) {\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n            else {\n                movable.push(columns[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (this.enableColumnVirtualization && this.isFrozenGrid()) {\n            if (this.frozenLeftColumns.length) {\n                left = this.frozenLeftColumns;\n            }\n            if (this.frozenRightColumns.length) {\n                right = this.frozenRightColumns;\n            }\n        }\n        return left.concat(movable).concat(right);\n    };\n    /**\n     * @private\n     * @param {string} stackedHeader - Defines the stacked header\n     * @param {Column[]} col - Defines the column\n     * @returns {Column} Returns the Column\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[parseInt(i.toString(), 10)];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     * @returns {number[]} Returns the column indexes\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     * @returns {Query} - returns the query\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     * @returns {object} - returns the locale constants\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @param {number[]} indexes - specifies the indexes\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     *\n     * @returns {Column[]} returns the column\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        return this.getCurrentVisibleColumns();\n    };\n    /**\n     * Gets the header div of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     *\n     * @param  {Element} element - Specifies the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     *\n     * @param  {Element} element - Specifies the Grid content table.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     *\n     * @returns {Element} Returns the element\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     *\n     * @param  {Element} element - Specifies the Grid content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     *\n     * @param  {Element} element - Specifies the Grid header table.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContent = function () {\n        this.footerElement = this.element.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.gridFooter)[0];\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        this.footerElement = this.element.getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.gridFooter)[0];\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     *\n     * @param  {Element} element - Specifies the Grid pager.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        if (this.enableVirtualization && this.groupSettings.enableLazyLoading) {\n            return this.lazyLoadRender.getRowByIndex(index);\n        }\n        else {\n            return this.contentModule.getRowByIndex(index);\n        }\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     *\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - specifies the element\n     *\n     * @returns {RowInfo} returns the row info\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(target) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(ele, 'e-detailrowcollapse')\n            && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(ele, 'e-recordplusexpand')))) {\n            var cell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ele, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.rowCell);\n            if (!cell) {\n                var row_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(ele, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.row);\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row_1) && !row_1.classList.contains('e-addedrow')) {\n                    var rowObj = this.getRowObjectFromUID(row_1.getAttribute('data-uid'));\n                    var rowIndex = parseInt(row_1.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaRowIndex), 10) - 1;\n                    args = { row: row_1, rowData: rowObj.data, rowIndex: rowIndex };\n                }\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaColIndex), 10) - 1;\n            var row_2 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(cell, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.row);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell) && !isNaN(cellIndex) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row_2)) {\n                var rowIndex = parseInt(row_2.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaRowIndex), 10) - 1;\n                var rows = this.contentModule.getRows();\n                var index = cellIndex + this.getIndentCount();\n                var rowsObject = rows.filter(function (r) { return r.uid === row_2.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[parseInt(index.toString(), 10)].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_2, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets the Grid's frozen right content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getFrozenRightRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getDataRows = function () {\n        return this.getAllDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd - specifies includeAdd\n     * @returns {Element[]} returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllDataRows = function (includeAdd) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getContentTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody))) {\n            return [];\n        }\n        var tbody = this.getContentTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n        var rows = [].slice.call(tbody.children);\n        if (this.editSettings.showAddNewRow) {\n            if (rows[0].classList.contains('e-addedrow')) {\n                rows.shift();\n            }\n            else if (rows[rows.length - 1].classList.contains('e-addedrow')) {\n                rows.pop();\n            }\n        }\n        if (this.frozenRows) {\n            var hdrTbody = this.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n            var freezeRows = [].slice.call(hdrTbody.children);\n            rows = this.addMovableRows(freezeRows, rows);\n            if (this.editSettings.showAddNewRow && freezeRows[0].classList.contains('e-addedrow')) {\n                freezeRows.shift();\n            }\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * @param {HTMLElement[]} fRows - Defines the frozen Rows\n     * @param {HTMLElement[]} mrows - Defines the movable Rows\n     * @returns {HTMLElement[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[parseInt(i.toString(), 10)]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows, includAdd) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[parseInt(i.toString(), 10)].classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.row)\n                && (!rows[parseInt(i.toString(), 10)].classList.contains('e-hiddenrow') || includAdd)) {\n                if (this.isCollapseStateEnabled()) {\n                    dRows[parseInt(rows[parseInt(i.toString(), 10)].getAttribute('aria-rowindex'), 10) - 1] = rows[parseInt(i.toString(), 10)];\n                }\n                else {\n                    dRows.push(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     *\n     * @returns {Element[]} Returns the element\n\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        return this.getAllMovableDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        return this.getAllFrozenDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Gets all the Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightDataRows = function () {\n        return this.getAllFrozenRightDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new _renderer_cell_renderer__WEBPACK_IMPORTED_MODULE_13__.CellRenderer(this, this.serviceLocator);\n        var fieldIdx = this.getColumnIndexByField(field);\n        var col = this.getColumnByField(field);\n        var rowObjects = this.contentModule.getRows();\n        var selectedRow = rowObjects.filter(function (r) {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(pkName, r.data) === key;\n        })[0];\n        var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[\"\" + rowuID] + ']') : null;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tr)) {\n            if (typeof value === 'string') {\n                value = this.sanitize(value);\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(field, value, selectedRow[\"\" + rowData]);\n            var td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)]\n                : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(td)) {\n                var Idx = 0;\n                if (this.groupSettings.columns.length) {\n                    fieldIdx = fieldIdx + this.groupSettings.columns.length;\n                }\n                if (this.childGrid || this.detailTemplate) {\n                    fieldIdx++;\n                }\n                if (this.isRowDragable()) {\n                    fieldIdx++;\n                }\n                var sRow = selectedRow[\"\" + cells][fieldIdx - Idx];\n                cell.refreshTD(td, sRow, selectedRow[\"\" + rowData], { index: selectedRow[\"\" + rowIdx] });\n                if (this.isReact) {\n                    td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)]\n                        : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n                }\n                if (this.aggregates.length > 0) {\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedRow) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedRow['changes'])) {\n                    selectedRow['changes'][\"\" + field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_8__.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[\"\" + rowData]\n                });\n                if (this.isReact && td.getAttribute('tabindex') === '0' && td.classList.contains('e-focused')) {\n                    td.focus();\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @param {boolean} renderTemplates - Defines renderTemplates need to invoke\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid, renderTemplates) {\n        var _this_1 = this;\n        if (this.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.clearTemplate(['columnTemplate'], undefined, function () {\n                var isChildGrid = _this_1.childGrid && _this_1.element.querySelectorAll('.e-childgrid').length ? true : false;\n                var rows = isChildGrid ? _this_1.getContentTable().querySelectorAll('.e-row') :\n                    _this_1.getDataRows();\n                _this_1.refreshReactTemplateTD(rows, isChildGrid);\n                if (renderTemplates) {\n                    _this_1.renderTemplates();\n                }\n            });\n        }\n    };\n    /**\n     * @param {Element[] | NodeListOf<Element>} rows - Defines the rows\n     * @param {boolean} isChildGrid - Defines whether it is a Hierarchy Grid.\n     * @param {boolean} isFrozen - Defines whether it is a Frozen Grid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactTemplateTD = function (rows, isChildGrid, isFrozen) {\n        var cells = 'cells';\n        var rowIdx = 'index';\n        var indent = this.getIndentCount();\n        var childIndent = 0;\n        var isChildRow = false;\n        for (var j = 0; j < rows.length; j++) {\n            var rowsObj = this.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n            if (isChildGrid && !rowsObj && (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(rows[parseInt(j.toString(), 10)], 'e-childgrid')) {\n                var gridObj = (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(rows[parseInt(j.toString(), 10)], 'e-childgrid').ej2_instances[0];\n                rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n                childIndent = gridObj.getIndentCount();\n                isChildRow = true;\n            }\n            if (rowsObj && rowsObj.isDataRow && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowsObj.index) &&\n                !rows[parseInt(j.toString(), 10)].classList.contains('e-editedrow')) {\n                for (var i = 0; i < rowsObj[\"\" + cells].length; i++) {\n                    var cell = rowsObj[\"\" + cells][parseInt(i.toString(), 10)];\n                    if (cell.isTemplate) {\n                        var cellRenderer = new _renderer_cell_renderer__WEBPACK_IMPORTED_MODULE_13__.CellRenderer(this, this.serviceLocator);\n                        var td = isChildGrid ? rows[parseInt(j.toString(), 10)]\n                            .children[cell.index + (isChildRow ? childIndent : indent)] : this.getCellFromIndex(j, isFrozen ? cell.index : i - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj.data, { index: rowsObj[\"\" + rowIdx] });\n                    }\n                }\n            }\n            isChildRow = false;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshGroupCaptionFooterTemplate = function () {\n        var isChildGrid = this.childGrid && this.element.querySelectorAll('.e-childgrid').length ? true : false;\n        var rows = this.getContentTable().querySelectorAll('.e-groupcaptionrow, .e-groupfooterrow');\n        for (var i = 0; i < rows.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var gridObj = this;\n            var rowsObj = this.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n            if (isChildGrid && !rowsObj && (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(rows[parseInt(i.toString(), 10)], 'e-childgrid')) {\n                gridObj = (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(rows[parseInt(i.toString(), 10)], 'e-childgrid').ej2_instances[0];\n                rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n            }\n            if (rowsObj) {\n                var cells = rowsObj.cells.filter(function (cell) { return cell.isDataCell; });\n                var args = { cells: cells, data: rowsObj.data, dataUid: rowsObj.uid };\n                gridObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshAggregateCell, args);\n            }\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n        if (this.isReact) {\n            var cells = 'cells';\n            var rowsObj = this.headerModule.rows;\n            var cellIndex = this.getNormalizedColumnIndex(columnUid);\n            var _loop_1 = function (j) {\n                var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                if (cell && cell.column.uid === columnUid) {\n                    var headerCellRenderer = new _renderer_header_cell_renderer__WEBPACK_IMPORTED_MODULE_14__.HeaderCellRenderer(this_1, this_1.serviceLocator);\n                    var td = (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(this_1.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n                    headerCellRenderer.refresh(cell, td);\n                    var cols = this_1.sortSettings.columns;\n                    var columnIndex = cols.findIndex(function (col) {\n                        return col.field === cell\n                            .column.field;\n                    });\n                    if (columnIndex !== -1) {\n                        var header = this_1.getColumnHeaderByField(cell.column.field);\n                        this_1.ariaService.setSort(header, (cols[parseInt(columnIndex.toString(), 10)].direction).toLowerCase());\n                        if (cols.length > 1) {\n                            header.querySelector('.e-headercelldiv').insertBefore(this_1.createElement('span', { className: 'e-sortnumber', innerHTML: (columnIndex + 1).toString() }), header.querySelector('.e-headertext'));\n                        }\n                        var filterElement = header.querySelector('.e-sortfilterdiv');\n                        if (cols[parseInt(columnIndex.toString(), 10)].direction === 'Ascending') {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n                        }\n                        else {\n                            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(filterElement, ['e-descending', 'e-icon-descending'], []);\n                        }\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < rowsObj.length; j++) {\n                _loop_1(j);\n            }\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {Object} rowData - To update new data for the particular row.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        var selectedRow = rowObjects.filter(function (r) {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(pkName, r.data) === key;\n        })[0];\n        var selectRowEle = selectedRow ? [].slice.call(this.element.querySelectorAll('[data-uid=' + selectedRow[\"\" + rowuID] + ']')) : undefined;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(selectedRow) && selectRowEle.length) {\n            selectedRow.changes = rowData;\n            if (this.frozenRows) {\n                var fRowTr = this.getRowsObject()[selectedRow.index];\n                this.setFrozenRowData(fRowTr, rowData);\n            }\n            else {\n                this.setFrozenRowData(selectedRow, rowData);\n            }\n            if (this.aggregates.length > 0) {\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    Grid.prototype.setFrozenRowData = function (fTr, rowData) {\n        var rowRenderer = new _renderer_row_renderer__WEBPACK_IMPORTED_MODULE_15__.RowRenderer(this.serviceLocator, null, this);\n        fTr.changes = rowData;\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.refreshForeignData)(fTr, this.getForeignKeyColumns(), fTr.changes);\n        rowRenderer.refresh(fTr, this.getColumns(), true);\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        var col = this.getColumnByIndex(columnIndex);\n        return (0,_util__WEBPACK_IMPORTED_MODULE_9__.getCellByColAndRowIndex)(this, col, rowIndex, columnIndex);\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().getElementsByClassName('e-headercell')[parseInt(index.toString(), 10)];\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Row<Column>} Returns the row object\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        if (rows) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var row = rows_1[_i];\n                if (row.uid === uid) {\n                    return row;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Get an array of row objects.\n     *\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n\n     */\n    Grid.prototype.getFrozenRightRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        var column = this.getColumnByField(field);\n        return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n        return element ? element.parentElement : undefined;\n    };\n    /**\n     * @hidden\n     * @param {number} index - Defines the index\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return (0,_util__WEBPACK_IMPORTED_MODULE_9__.iterateArrayOrObject)(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {number} Returns the index by field\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @param  {boolean} isColumns - Defines the all columns.\n     *\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByUid = function (uid, isColumns) {\n        var cols = isColumns ? this.columns : this.getColumns();\n        return (0,_util__WEBPACK_IMPORTED_MODULE_9__.iterateArrayOrObject)(cols.concat(this.getStackedColumns(this.columns)), function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @param {Column[]} columns - Defines the columns\n     * @param {Column[]} stackedColumn - Defines the stacked columns\n     * @returns {Column[]} Returns the columns\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     *\n     * @returns {number} Returns the column by index\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = (0,_util__WEBPACK_IMPORTED_MODULE_9__.iterateArrayOrObject)(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {string} Returns the column by field\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return (0,_util__WEBPACK_IMPORTED_MODULE_9__.iterateArrayOrObject)(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets column index by column uid value.\n     *\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @returns {number} Returns the column by field\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        return index + this.getIndentCount();\n    };\n    /**\n     * Gets indent cell count.\n     *\n     * @private\n     * @returns {number} Returns the indent count\n     */\n    Grid.prototype.getIndentCount = function () {\n        var index = 0;\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.isRowDragable() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rowDropSettings.targetID)) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} Returns the Field names\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[parseInt(i.toString(), 10)];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     *\n     * @returns {Function} Returns the row TEmplate\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled empty Record template.\n     *\n     * @returns {Function} Returns the empty Record template\n     * @private\n     */\n    Grid.prototype.getEmptyRecordTemplate = function () {\n        return this.emptyRecordTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function} Returns the Detail template\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit template.\n     *\n     * @private\n     * @returns {Function} Returns the Edit template\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit header template.\n     *\n     * @private\n     * @returns {Function} returns template function\n     */\n    Grid.prototype.getEditHeaderTemplate = function () {\n        return this.editHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit footer template.\n     *\n     * @private\n     * @returns {Function} Returns the Footer template\n     */\n    Grid.prototype.getEditFooterTemplate = function () {\n        return this.editFooterTemplateFn;\n    };\n    /**\n     * Gets a compiled column chooser template.\n     *\n     * @private\n     * @returns {Function} Returns the template\n     */\n    Grid.prototype.getColumnChooserTemplate = function () {\n        return this.columnChooserTemplateFn;\n    };\n    /**\n     * Gets a compiled column chooser header template.\n     *\n     * @private\n     * @returns {Function} returns the header template\n     */\n    Grid.prototype.getColumnChooserHeaderTemplate = function () {\n        return this.columnChooserHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled column chooser footer template.\n     *\n     * @private\n     * @returns {Function} Returns the Footer template\n     */\n    Grid.prototype.getColumnChooserFooterTemplate = function () {\n        return this.columnChooserFooterTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     *\n     * @returns {string[]} Returns the field names\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[parseInt(k.toString(), 10)].isPrimaryKey) {\n                keys.push(this.columnModel[parseInt(k.toString(), 10)].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refresh = function () {\n        if (!this.isDestroyed) {\n            this.isManualRefresh = true;\n            this.headerModule.refreshUI();\n            this.updateStackedFilter();\n            this.renderModule.refresh();\n        }\n    };\n    /**\n     * Refreshes the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} Returns the Selected row indexes\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {number[]} Returns the Selected row cell indexes\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} Returns the selected records\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the collection of selected columns uid.\n     *\n     * @returns {string[]} Returns the selected column uid\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedColumnsUid = function () {\n        var _this_1 = this;\n        var uid = [];\n        if (this.selectionModule) {\n            this.selectionModule.selectedColumnsIndexes.filter(function (i) { return uid.push(_this_1.getColumns()[parseInt(i.toString(), 10)].uid); });\n        }\n        return uid;\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {Data} Returns the data\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen column\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    Grid.prototype.getFrozenRightColumnsCount = function () {\n        return this.frozenRightCount || this.rightcount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    Grid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.frozenLeftCount || this.leftcount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    Grid.prototype.getMovableColumnsCount = function () {\n        return this.movableCount || this.movablecount;\n    };\n    Grid.prototype.updateFrozenColumnsWidth = function () {\n        if (this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            var isAutoWidth = true;\n            var autoCol_1 = 0;\n            var difference_1 = 0;\n            var autoWidth_1 = 0;\n            var isFrozenAuto = gcol.some(function (data) {\n                return (data.freeze === 'Left' || data.freeze === 'Right'\n                    || data.freeze === 'Fixed' || data.isFrozen) && data.width === 'auto';\n            });\n            var _loop_2 = function (i) {\n                var col = gcol[parseInt(i.toString(), 10)];\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.width) && (col.freeze === 'Left' || col.freeze === 'Right' || col.freeze === 'Fixed' || col.isFrozen)) {\n                    col.width = Math.max(200, col.minWidth ? parseFloat(col.minWidth.toString()) : 0);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.maxWidth) && parseFloat(col.maxWidth.toString()) < col.width) {\n                        col.width = col.maxWidth;\n                    }\n                }\n                if (col.width === 'auto' && isFrozenAuto) {\n                    var tWidth_1 = 0;\n                    if (isAutoWidth) {\n                        gcol.filter(function (cols) {\n                            if (cols.visible) {\n                                if (cols.width === 'auto') {\n                                    autoCol_1++;\n                                }\n                                if (cols.width !== 'auto') {\n                                    var width = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cols.width) ? parseFloat(cols.width.toString()) :\n                                        Math.max(200, cols.minWidth ? parseFloat(cols.minWidth.toString()) : 0);\n                                    tWidth_1 += width;\n                                }\n                            }\n                        });\n                        var gWidth = this_2.isPercentageWidthGrid() || this_2.width === 'auto' ? this_2.element.getBoundingClientRect().width :\n                            parseFloat(this_2.width.toString());\n                        difference_1 = this_2.height === 'auto' ? gWidth - tWidth_1 : ((gWidth - tWidth_1) - (0,_util__WEBPACK_IMPORTED_MODULE_9__.getScrollBarWidth)());\n                        if (difference_1 < 0) {\n                            difference_1 = 0;\n                        }\n                        autoWidth_1 = parseFloat((difference_1 / autoCol_1).toString());\n                        gcol.filter(function (col) {\n                            if (col.visible) {\n                                if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n                                    difference_1 = difference_1 - parseFloat(col.minWidth.toString());\n                                    autoCol_1--;\n                                }\n                            }\n                        });\n                        isAutoWidth = false;\n                    }\n                    if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n                        col.width = parseFloat(col.minWidth.toString());\n                    }\n                    else {\n                        col.width = difference_1 / autoCol_1;\n                    }\n                }\n            };\n            var this_2 = this;\n            for (var i = 0; i < gcol.length; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    Grid.prototype.refreshSplitFrozenColumn = function () {\n        this.splitFrozenCount(this.columns);\n        this.updateFrozenColumnsWidth();\n        this.isAutoGenerateColumns = true;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setFrozenCount = function () {\n        this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n        this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n        this.frozenLeftColumns = [];\n        this.frozenRightColumns = [];\n        this.movableColumns = [];\n        this.fixedColumns = [];\n        this.splitFrozenCount(this.columns);\n        this.leftcount = this.frozenLeftCount;\n        this.rightcount = this.frozenRightCount;\n        this.movablecount = this.movableCount;\n        // if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n        //     this.setProperties({ frozenColumns: 0 }, true);\n        // }\n        if (this.frozenLeftCount && !this.frozenRightCount) {\n            this.frozenName = 'Left';\n        }\n        else if (this.frozenRightCount && !this.frozenLeftCount) {\n            this.frozenName = 'Right';\n        }\n        else if (this.frozenLeftCount && this.frozenRightCount) {\n            this.frozenName = 'Left-Right';\n        }\n        else if (this.frozenColumns || this.frozenRows) {\n            this.frozenName = 'Left';\n        }\n        else {\n            this.frozenName = undefined;\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    Grid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.visibleFrozenLeft;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    Grid.prototype.getVisibleFrozenRightCount = function () {\n        return this.visibleFrozenRight;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    Grid.prototype.getVisibleMovableCount = function () {\n        return this.visibleMovable;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenRightColumns = function () {\n        return this.frozenRightColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenLeftColumns = function () {\n        return this.frozenLeftColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getMovableColumns = function () {\n        return this.movableColumns;\n    };\n    Grid.prototype.splitStackedColumns = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.leftcount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.rightcount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenFixed++;\n                    }\n                    this.fixedcount++;\n                }\n                else {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movablecount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.pushStackedColumns = function (columns, index, arr, col, stackedcol) {\n        arr[parseInt(index.toString(), 10)] = { headerText: col.headerText };\n        if (col.textAlign) {\n            arr[parseInt(index.toString(), 10)].textAlign = col.textAlign;\n        }\n        if (col.customAttributes) {\n            arr[parseInt(index.toString(), 10)].customAttributes = col.customAttributes;\n        }\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                index = index + 1;\n                this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, index, arr, columns[parseInt(i.toString(), 10)], stackedcol);\n                index = index - 1;\n            }\n            else {\n                var stockCol = [];\n                stockCol = arr.slice().slice(0, index + 1);\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    this.stackedLeft.push(stockCol);\n                    this.stackedarrayLeft.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    this.stackedRight.push(stockCol);\n                    this.stackedarrayRight.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    this.stackedFixed.push(stockCol);\n                    this.stackedarrayFixed.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.stackedMovable.push(stockCol);\n                    this.stackedarrayMovable.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    Grid.prototype.pushallcol = function (text, text1, col, columns, isTrue) {\n        if (col.headerText === text1.headerText) {\n            if (isTrue) {\n                col.columns.push(columns);\n            }\n            else {\n                var newColumn = { headerText: text.headerText, columns: [] };\n                if (text.textAlign) {\n                    newColumn.textAlign = text.textAlign;\n                }\n                if (text.customAttributes) {\n                    newColumn.customAttributes = text.customAttributes;\n                }\n                col.columns.push(newColumn);\n            }\n        }\n        else {\n            if (col.columns && col.columns.length) {\n                for (var i = 0; i < col.columns.length; i++) {\n                    this.pushallcol(text, text1, col.columns[parseInt(i.toString(), 10)], columns, isTrue);\n                }\n            }\n        }\n    };\n    Grid.prototype.resetStackedColumns = function (headercol, gridcolumns, freeze) {\n        var col = {};\n        var tempHead = [];\n        for (var i = 1; i <= headercol.length; i++) {\n            var firstcol = headercol[i - 1];\n            for (var j = 0; j < firstcol.length; j++) {\n                if (!col.columns && i === 1) {\n                    col = { headerText: firstcol[parseInt(j.toString(), 10)].headerText,\n                        textAlign: firstcol[parseInt(j.toString(), 10)].textAlign,\n                        customAttributes: firstcol[parseInt(j.toString(), 10)].customAttributes, columns: [] };\n                    tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n                }\n                else {\n                    if (tempHead.indexOf(firstcol[parseInt(j.toString(), 10)]) === -1) {\n                        this.pushallcol(firstcol[parseInt(j.toString(), 10)], firstcol[j - 1], col);\n                        tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n                    }\n                }\n                if (j === firstcol.length - 1) {\n                    this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n                    var count = 0;\n                    while (count !== headercol.length - 1 && i !== headercol.length) {\n                        var firstColHeaders = firstcol.map(function (col) {\n                            return col.headerText;\n                        }).join(', ');\n                        var headerColHeaders = headercol[parseInt(i.toString(), 10)].map(function (item) { return item.headerText; }).join(', ');\n                        if (firstColHeaders === headerColHeaders) {\n                            i++;\n                            this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n                        }\n                        count++;\n                    }\n                }\n            }\n        }\n        if (freeze === 'Left') {\n            this.frozenLeftColumns.push(col);\n        }\n        else if (freeze === 'Right') {\n            this.frozenRightColumns.push(col);\n        }\n        else {\n            this.movableColumns.push(col);\n        }\n    };\n    Grid.prototype.splitFrozenCount = function (columns) {\n        if (this.frozenColumns || (this.changedProperties && this.changedProperties.frozenColumns === 0)) {\n            var cols = !this.enableColumnVirtualization || (this.enableColumnVirtualization && this.isPreparedFrozenColumns) ?\n                this.enableColumnVirtualization && this.columnModel && this.columnModel.length ? this.columnModel :\n                    this.getColumns() : this.columns;\n            if (!this.changedProperties || (this.changedProperties && !this.changedProperties.frozenColumns)) {\n                for (var i = 0; i < cols.length; i++) {\n                    if (this.frozenColumns > i) {\n                        cols[parseInt(i.toString(), 10)].freeze = 'Left';\n                    }\n                    else if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                        cols[parseInt(i.toString(), 10)].freeze = cols[parseInt(i.toString(), 10)].freeze;\n                    }\n                    else {\n                        cols[parseInt(i.toString(), 10)].freeze = undefined;\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns) ? columns.length : 0); i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.leftcount = 0;\n                this.rightcount = 0;\n                this.movablecount = 0;\n                this.fixedcount = 0;\n                var arr = [];\n                this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n                if (this.leftcount && !this.rightcount && !this.movablecount && !this.fixedcount) {\n                    this.frozenLeftCount += this.leftcount;\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.rightcount && !this.leftcount && !this.movablecount && !this.fixedcount) {\n                    this.frozenRightCount += this.rightcount;\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.movablecount && !this.leftcount && !this.rightcount && !this.fixedcount) {\n                    this.movableCount += this.movablecount;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.fixedcount && !this.leftcount && !this.rightcount && !this.movablecount) {\n                    this.fixedCount += this.fixedcount;\n                    this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount += this.movablecount;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.frozenLeftCount += this.leftcount;\n                    this.frozenRightCount += this.rightcount;\n                    this.movableCount += this.movablecount;\n                    this.fixedCount += this.fixedcount;\n                    this.leftcount = 0;\n                    this.rightcount = 0;\n                    this.movablecount = 0;\n                    this.fixedcount = 0;\n                    this.stackedLeft = [];\n                    this.stackedRight = [];\n                    this.stackedFixed = [];\n                    this.stackedMovable = [];\n                    this.stackedarrayLeft = [];\n                    this.stackedarrayRight = [];\n                    this.stackedarrayFixed = [];\n                    this.stackedarrayMovable = [];\n                    this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, 0, arr, columns[parseInt(i.toString(), 10)], { headerText: columns[parseInt(i.toString(), 10)].headerText,\n                        textAlign: columns[parseInt(i.toString(), 10)].textAlign,\n                        customAttributes: columns[parseInt(i.toString(), 10)].customAttributes, columns: [] });\n                    if (this.stackedarrayLeft.length) {\n                        this.resetStackedColumns(this.stackedLeft, this.stackedarrayLeft, 'Left');\n                    }\n                    if (this.stackedarrayRight.length) {\n                        this.resetStackedColumns(this.stackedRight, this.stackedarrayRight, 'Right');\n                    }\n                    if (this.stackedarrayFixed.length) {\n                        this.resetStackedColumns(this.stackedFixed, this.stackedarrayFixed, 'Fixed');\n                    }\n                    if (this.stackedarrayMovable.length) {\n                        this.resetStackedColumns(this.stackedMovable, this.stackedarrayMovable, 'Movable');\n                    }\n                    this.stackedLeft = [];\n                    this.stackedRight = [];\n                    this.stackedMovable = [];\n                    this.stackedFixed = [];\n                    this.stackedarrayLeft = [];\n                    this.stackedarrayRight = [];\n                    this.stackedarrayMovable = [];\n                    this.stackedarrayFixed = [];\n                }\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.frozenRightCount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.frozenLeftCount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.fixedCount++;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount++;\n                }\n                else {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount++;\n                }\n            }\n        }\n        if (this.frozenLeftColumns.length) {\n            var cols = this.frozenLeftColumns[this.frozenLeftColumns.length - 1];\n            this.removeBorder(this.frozenLeftColumns);\n            this.frozenLeftBorderColumns(cols instanceof _models_column__WEBPACK_IMPORTED_MODULE_2__.Column ? this.lastVisibleLeftCol(this.frozenLeftColumns) : cols);\n        }\n        if (this.frozenRightColumns.length) {\n            var cols = this.frozenRightColumns[0];\n            this.removeBorder(this.frozenRightColumns);\n            this.frozenRightBorderColumns(cols instanceof _models_column__WEBPACK_IMPORTED_MODULE_2__.Column ? this.firstVisibleRightCol(this.frozenRightColumns) : cols);\n        }\n        if ((this.frozenLeftColumns.length || this.frozenRightColumns.length) && this.freezeColumnRefresh) {\n            var cols = (this.frozenLeftColumns.concat(this.movableColumns)).concat(this.frozenRightColumns);\n            this.setProperties({ columns: cols }, true);\n            this.freezeColumnRefresh = false;\n        }\n    };\n    Grid.prototype.removeBorder = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns && columns[parseInt(i.toString(), 10)].columns.length) {\n                if (columns[parseInt(i.toString(), 10)].border === 'Right' ||\n                    columns[parseInt(i.toString(), 10)].border === 'Left') {\n                    columns[parseInt(i.toString(), 10)].border = undefined;\n                }\n                this.removeBorder(columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].border === 'Right' ||\n                    columns[parseInt(i.toString(), 10)].border === 'Left') {\n                    columns[parseInt(i.toString(), 10)].border = undefined;\n                }\n            }\n        }\n    };\n    Grid.prototype.isVisibleColumns = function (column, arr) {\n        if (column.columns && column.columns.length) {\n            for (var i = 0; i < column.columns.length; i++) {\n                this.isVisibleColumns(column.columns[parseInt(i.toString(), 10)], arr);\n                if (column.columns[parseInt(i.toString(), 10)].visible &&\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.columns[parseInt(i.toString(), 10)].columns) &&\n                    (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.columns[parseInt(i.toString(), 10)].freeze) ||\n                        column.columns[parseInt(i.toString(), 10)].isFrozen)) {\n                    arr.push('true');\n                }\n            }\n        }\n        else {\n            if (column.visible && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.freeze) || column.isFrozen)) {\n                arr.push('true');\n            }\n        }\n    };\n    Grid.prototype.lastVisibleLeftCol = function (columns) {\n        var column;\n        for (var i = columns.length - 1; i >= 0; i--) {\n            var arr = [];\n            this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n            if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n                column = columns[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    Grid.prototype.firstVisibleRightCol = function (columns) {\n        var column;\n        for (var i = 0; i < columns.length; i++) {\n            var arr = [];\n            this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n            if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n                column = columns[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    Grid.prototype.frozenLeftBorderColumns = function (columns) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns)) {\n            return;\n        }\n        if (columns.columns && columns.columns.length) {\n            columns.border = 'Left';\n            var cols = columns.columns[columns.columns.length - 1];\n            this.frozenLeftBorderColumns(cols instanceof _models_column__WEBPACK_IMPORTED_MODULE_2__.Column && cols.columns ? this.lastVisibleLeftCol(columns.columns) : cols);\n        }\n        else {\n            columns.border = 'Left';\n        }\n    };\n    Grid.prototype.frozenRightBorderColumns = function (columns) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns)) {\n            return;\n        }\n        if (columns.columns && columns.columns.length) {\n            columns.border = 'Right';\n            var cols = columns.columns[0];\n            this.frozenRightBorderColumns(cols instanceof _models_column__WEBPACK_IMPORTED_MODULE_2__.Column && cols.columns ? this.firstVisibleRightCol(columns.columns) : cols);\n        }\n        else {\n            columns.border = 'Right';\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible frozen columns count\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    /**\n     * Get the current Filter operator and field.\n     *\n     * @returns {FilterUI} Returns the filter UI\n     */\n    Grid.prototype.getFilterUIInfo = function () {\n        return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var columns = this.columnModel;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (columns[parseInt(i.toString(), 10)].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        if ((this.frozenLeftCount || this.leftcount) || (this.frozenRightCount || this.rightcount)) {\n            for (var i = 0; i < columns.length; i++) {\n                if (columns[parseInt(i.toString(), 10)].visible && (columns[parseInt(i.toString(), 10)].freeze === 'Left'\n                    || columns[parseInt(i.toString(), 10)].freeze === 'Right')) {\n                    visibleFrozenColumns++;\n                }\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        if ((!this.frozenLeftCount && !this.leftcount) && (!this.frozenRightCount || !this.rightcount)) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                if (cols[parseInt(i.toString(), 10)].columns) {\n                    cnt = this.getVisibleFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt);\n                }\n                else {\n                    if (cols[parseInt(i.toString(), 10)].isFrozen && cols[parseInt(i.toString(), 10)].visible) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n        for (var i = 0, len = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cols) ? cols.length : 0); i < len; i++) {\n            if (cols[parseInt(i.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt, index);\n            }\n            else {\n                if (cols[parseInt(i.toString(), 10)].isFrozen && index > this.frozenColumns - 1) {\n                    cnt++;\n                }\n                index++;\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule && !this.pagerTemplate) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Remove the existing columns along with the grid actions like sorting, filtering, searching, grouping, aggregate, etc., and grid will refresh with new columns based on the updated new data source.\n     * > * If no columns are specified while changing the data source, then the columns are auto generated in the Grid based on the list of columns in the updated data source.\n     *\n     * @param {Object | DataManager | DataResult} dataSource -  Assign the new datasource.\n     * @param {Column[] | string[] | ColumnModel[]} columns - Defines columns.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <button id=\"btn\">change dataSource </button>\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,  // you can define the datamanager here if you are binding a data through datamanager\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     * });\n     * gridObj.appendTo('#Grid');\n     * document.getElementById('btn').addEventListener(\"click\", function(){\n     * let newColumn: [\n     *     { field: 'CustomerID', headerText: 'Customer ID', width:100 },\n     *     { field: 'FirstName', headerText: 'Name' }];\n     * gridObj.changeDataSource(customerData, newColumn);\n     * });\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.changeDataSource = function (dataSource, columns) {\n        this.isChangeDataSourceCall = true;\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, true);\n        }\n        if (columns && columns.length) {\n            this.setProperties({ columns: columns }, true);\n        }\n        if (dataSource) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns)) {\n                this.setProperties({ columns: [] }, true);\n            }\n            this.setProperties({ dataSource: dataSource }, true);\n        }\n        this.freezeRefresh();\n        this.isChangeDataSourceCall = false;\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.clearGridActions = function () {\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, false);\n        }\n        else {\n            this.freezeRefresh();\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     *\n     * @param {string[]} fields - Defines the Fields\n     * @returns {void}\n     */\n    Grid.prototype.clearFiltering = function (fields) {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering(fields);\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} Returns the batch changes\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this_1 = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell.e-indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.colGroup).childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.colGroup).childNodes);\n        var perPixel = indentWidth / 30;\n        var i = this.getFrozenMode() === 'Right' ? this.groupSettings.columns.length + this.getColumns().length : 0;\n        var parentOffset = this.element.offsetWidth;\n        var applyWidth = function (index, width) {\n            if ((0,_util__WEBPACK_IMPORTED_MODULE_9__.ispercentageWidth)(_this_1)) {\n                var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n                headerCol[parseInt(index.toString(), 10)].style.width = newWidth;\n                contentCol[parseInt(index.toString(), 10)].style.width = newWidth;\n            }\n            else {\n                headerCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n                contentCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n            }\n            _this_1.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (indentWidth < 1) {\n            indentWidth = 1;\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen || (this.columns.length === this.groupSettings.columns.length)) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').classList.add('e-indentRefreshed');\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.resetIndentWidth = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        if ((0,_util__WEBPACK_IMPORTED_MODULE_9__.ispercentageWidth)(this)) {\n            this.getHeaderTable().querySelector('.e-emptycell').classList.remove('e-indentRefreshed');\n            this.widthService.setWidthToColumns();\n            this.recalcIndentWidth();\n            if (this.autoFit) {\n                this.preventAdjustColumns();\n            }\n        }\n        if ((this.width === 'auto' || typeof (this.width) === 'string' && this.width.indexOf('%') !== -1)\n            && this.getColumns().filter(function (col) { return (!col.width || col.width === 'auto') && col.minWidth; }).length > 0) {\n            var tgridWidth = this.widthService.getTableWidth(this.getColumns(), true);\n            this.widthService.setMinwidthBycalculation(tgridWidth);\n        }\n        if (this.isFrozenGrid() && this.enableColumnVirtualization && this.widthService) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n        if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshHandlers, {});\n        }\n        if (this.frozenRows && this.scrollModule) {\n            this.scrollModule.resizeFrozenRowBorder();\n        }\n        if (this.enableStickyHeader) {\n            this.scrollModule.makeStickyHeader();\n        }\n        if (this.enableAutoFill && this.selectionSettings.type === 'Multiple' &&\n            this.selectionSettings.mode === 'Cell' && this.selectionModule.selectedRowCellIndexes.length) {\n            this.selectionModule.updateAutoFillPosition();\n            this.selectionModule.drawBorders();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns isRowDragable\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     *\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     *\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     *\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @param {ReturnType} e - Defines the Return type\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @param {boolean} enable -Defines the enable\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(headerTable.querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.colGroup).childNodes[0], { 'display': disValue });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(contentTable.querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.colGroup).childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[parseInt(i.toString(), 10)].firstElementChild;\n            if (enable) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([ele], 'e-hide');\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([ele], ['e-hide']);\n            }\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[parseInt(j.toString(), 10)];\n            if (enable) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([ele], 'e-hide');\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([ele], ['e-hide']);\n            }\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * > * By specifying the start row index and end row index, providing the range within which the maximum width for that column should be considered when applying `autoFitColumns`.\n     * > * The width of header rows is always calculated. If the width of a header row exceeds the specified range, its width will be allocated to the specific content rows.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @param  {number} startRowIndex - Specifies the start index of the content row.\n     * @param  {number} endRowIndex - Specifies the end index of content row.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID');\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames, startRowIndex, endRowIndex) {\n        var injectedModules = this.getInjectedModules();\n        var resize = injectedModules.find(function (item) {\n            if (typeof item === 'function' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(item.prototype)) {\n                return item.prototype.getModuleName() === 'resize';\n            }\n            else {\n                return item.name === 'Resize';\n            }\n        });\n        if (!this.resizeModule && resize) {\n            this.autoFitColumnsResize = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.injectModules();\n        }\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames, startRowIndex, endRowIndex);\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.preventAdjustColumns = function () {\n        if ((this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical')\n            || (this.allowResizing && this.resizeSettings.mode === 'Auto')) {\n            return;\n        }\n        var columns = this.getColumns();\n        var headerTable = this.getHeaderTable();\n        var tableWidth = 0;\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].visible) {\n                if (this.groupSettings.columns.length\n                    && this.groupSettings.columns.indexOf(columns[parseInt(i.toString(), 10)].field) > -1) {\n                    var headerCol = [].slice.call(headerTable.querySelector('colgroup')\n                        .querySelectorAll(':not(.e-group-intent):not(.e-detail-intent):not(.e-drag-intent)'));\n                    if (headerCol[parseInt(i.toString(), 10)].style.display === 'none') {\n                        continue;\n                    }\n                }\n                if (columns[parseInt(i.toString(), 10)].width) {\n                    tableWidth += parseFloat(columns[parseInt(i.toString(), 10)].width.toString());\n                }\n                else {\n                    tableWidth = 0;\n                    break;\n                }\n            }\n        }\n        if (tableWidth) {\n            var percentageWidth = this.isPercentageWidthGrid();\n            var unit = this.widthUnit(percentageWidth);\n            var contentTable = this.getContentTable();\n            if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n                var indentWidth = this.defaultIndentWidth(percentageWidth);\n                var indentWidthUnitFormat = indentWidth.toString() + unit;\n                var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup')\n                    .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n                var contentIndentCol = [].slice.call(contentTable.querySelector('colgroup')\n                    .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n                for (var i = 0; i < headerIndentCol.length; i++) {\n                    headerIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n                    contentIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n                    tableWidth += indentWidth;\n                }\n            }\n            if ((percentageWidth && tableWidth < 100)\n                || (!percentageWidth && tableWidth < contentTable.parentElement.clientWidth)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(contentTable.querySelector('.e-emptyrow'))) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([headerTable], ['e-tableborder']);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([contentTable], ['e-tableborder']);\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([headerTable, contentTable], ['e-tableborder']);\n                }\n            }\n            var tableWidthUnitFormat = tableWidth.toString() + unit;\n            headerTable.style.setProperty('width', tableWidthUnitFormat);\n            contentTable.style.setProperty('width', tableWidthUnitFormat);\n        }\n        else {\n            this.restoreAdjustColumns();\n        }\n    };\n    Grid.prototype.restoreAdjustColumns = function () {\n        if ((this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical')\n            || (this.allowResizing && this.resizeSettings.mode === 'Auto')) {\n            return;\n        }\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([headerTable, contentTable], ['e-tableborder']);\n        headerTable.style.removeProperty('width');\n        contentTable.style.removeProperty('width');\n        if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n            var percentageWidth = this.isPercentageWidthGrid();\n            var indentWidthUnitFormat_1 = this.defaultIndentWidth(percentageWidth).toString() + this.widthUnit(percentageWidth);\n            var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup')\n                .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n            headerIndentCol.forEach(function (element) {\n                element.style.setProperty('width', indentWidthUnitFormat_1);\n            });\n            headerTable.querySelector('.e-emptycell').classList.remove('e-indentRefreshed');\n            this.recalcIndentWidth();\n        }\n    };\n    Grid.prototype.widthUnit = function (percentageWidth) {\n        return percentageWidth ? '%' : 'px';\n    };\n    Grid.prototype.defaultIndentWidth = function (percentageWidth) {\n        return percentageWidth ? parseFloat((30 / this.element.offsetWidth * 100).toFixed(1)) : 30;\n    };\n    Grid.prototype.isPercentageWidthGrid = function () {\n        var column = this.getColumns().find(function (col) { return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.width); });\n        return column ? column.width.toString().indexOf('%') > -1 : false;\n    };\n    /**\n     * @param {number} x - Defines the number\n     * @param {number} y - Defines the number\n     * @param {Element} target - Defines the Element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new _services_width_controller__WEBPACK_IMPORTED_MODULE_16__.ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new _services_cell_render_factory__WEBPACK_IMPORTED_MODULE_17__.CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new _services_renderer_factory__WEBPACK_IMPORTED_MODULE_18__.RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new _services_value_formatter__WEBPACK_IMPORTED_MODULE_19__.ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new _actions_show_hide__WEBPACK_IMPORTED_MODULE_20__.ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new _services_aria_service__WEBPACK_IMPORTED_MODULE_21__.AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new _services_focus_strategy__WEBPACK_IMPORTED_MODULE_22__.FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_3 = function (i, len) {\n                flag = false;\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[parseInt(j.toString(), 10)].field === gCols[parseInt(i.toString(), 10)]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[parseInt(i.toString(), 10)], direction: 'Ascending', isFromGroup: true });\n                }\n                else {\n                    if (this_3.allowSorting) {\n                        this_3.sortedColumns.push(sCols[parseInt(j.toString(), 10)].field);\n                    }\n                    else {\n                        sCols[parseInt(j.toString(), 10)].direction = 'Ascending';\n                    }\n                }\n                if (!this_3.groupSettings.showGroupedColumn) {\n                    var column = this_3.enableColumnVirtualization ?\n                        this_3.columns.filter(function (c) { return c.field === gCols[parseInt(i.toString(), 10)]; })[0]\n                        : this_3.getColumnByField(gCols[parseInt(i.toString(), 10)]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_3.log('initial_action', { moduleName: 'group', columnName: gCols[parseInt(i.toString(), 10)] });\n                    }\n                }\n            };\n            var this_3 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_3(i, len);\n            }\n        }\n        if (!gCols.length) {\n            for (var i = 0; i < sCols.length; i++) {\n                this.sortedColumns.push(sCols[parseInt(i.toString(), 10)].field);\n            }\n        }\n        this.rowTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.rowTemplate);\n        this.emptyRecordTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.emptyRecordTemplate);\n        this.detailTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.detailTemplate);\n        this.editTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.editSettings.template);\n        this.editHeaderTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.editSettings.headerTemplate);\n        this.editFooterTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.editSettings.footerTemplate);\n        this.columnChooserTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.columnChooserSettings.template);\n        this.columnChooserHeaderTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.columnChooserSettings.headerTemplate);\n        this.columnChooserFooterTemplateFn = (0,_util__WEBPACK_IMPORTED_MODULE_9__.templateCompiler)(this.columnChooserSettings.footerTemplate);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parentDetails)) {\n            var value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.enableVerticalRendering = function () {\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        else {\n            this.element.classList.remove('e-row-responsive');\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        var _a;\n        this.updateRTL();\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent) || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isSafari()) {\n            this.element.classList.add('e-mac-safari');\n        }\n        if (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            this.element.classList.add('e-device');\n            if (this.adaptiveUIMode === 'Desktop') {\n                this.enableAdaptiveUI = false;\n            }\n        }\n        if (this.adaptiveUIMode === 'Mobile' && !(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.rowRenderingMode === 'Vertical')) {\n            this.enableAdaptiveUI = false;\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        if (this.cssClass) {\n            if (this.cssClass.indexOf(' ') !== -1) {\n                (_a = this.element.classList).add.apply(_a, this.cssClass.split(' '));\n            }\n            else {\n                this.element.classList.add(this.cssClass);\n            }\n        }\n        // If the below if statement is removed, then drag and drop between grids will not work in firefox browser.\n        if (this.allowRowDragAndDrop && this.rowDropSettings.targetID && _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.info.name === 'mozilla') {\n            this.element.classList.add('e-disableuserselect');\n        }\n        if (this.editSettings.showAddNewRow && (this.enableVirtualization || this.enableInfiniteScrolling)) {\n            this.editSettings.newRowPosition = 'Top';\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(_enum__WEBPACK_IMPORTED_MODULE_23__.RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(_enum__WEBPACK_IMPORTED_MODULE_23__.RenderType.Content);\n        this.printModule = new _actions_print__WEBPACK_IMPORTED_MODULE_24__.Print(this, this.scrollModule);\n        this.clipboardModule = new _actions_clipboard__WEBPACK_IMPORTED_MODULE_25__.Clipboard(this, this.serviceLocator);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup' });\n        popup.style.display = 'none';\n        var content = this.createElement('div', { className: _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.content, attrs: { tabIndex: '-1' } });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(this.element, false);\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(this.getContent(), false);\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(headerRows, true);\n                    break;\n                case 'Content':\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(this.getContent(), true);\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(this.element, false);\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(headerRows, false);\n                    break;\n                default:\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(this.element, true);\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(this.getContent(), false);\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(headerRows, false);\n            }\n            if (this.textWrapSettings.wrapMode !== 'Content') {\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshHandlers, {});\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(this.element, false);\n        var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(headerRows, false);\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.wrap)(this.getContent(), false);\n        if (this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshHandlers, {});\n        }\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_26__.Tooltip({\n            opensOn: 'custom',\n            content: '',\n            cssClass: this.cssClass ? this.cssClass : null\n        }, this.element);\n    };\n    /** @hidden\n     * @returns {void}\n     */\n    Grid.prototype.freezeRefresh = function () {\n        if (this.enableVirtualization || this.enableInfiniteScrolling) {\n            this.pageSettings.currentPage = 1;\n        }\n        this.componentRefresh();\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var headerTable = this.getHeaderTable();\n        var headerDivTag = this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' ? 'e-gridcontent' : 'e-gridheader';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        var targetElement = table.querySelector(ele);\n        targetElement.innerHTML = '';\n        Array.from(element.childNodes).forEach(function (child) {\n            targetElement.appendChild(child.cloneNode(true));\n        });\n        var width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if ((width > element.getBoundingClientRect().width && !element.classList.contains('e-editedbatchcell')) ||\n            (this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' &&\n                width > (element.getBoundingClientRect().width * 0.55) - (this.height !== 'auto' ? 16 : 0))) {\n            // 0.55 - defines the width of adaptive content cell, 16 - defines the scrollbar width\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-ellipsistooltip');\n            if (e.type === 'mouseout' && (this.prevElement !== element || element !== (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.relatedTarget, 'e-ellipsistooltip'))) {\n                this.toolTipObj.close();\n                this.prevElement = null;\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (this.getTooltipStatus(element)) {\n                    var col = this.getColumns()[parseInt(element.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.ariaColIndex), 10) - 1];\n                    var domSetter = col && col.disableHtmlEncode ? 'innerText' : 'innerHTML';\n                    var contentDiv = this.createElement('div');\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        var innerElement = element.getElementsByClassName('e-headertext')[0];\n                        contentDiv[\"\" + domSetter] = this.sanitize(innerElement.innerText);\n                        this.toolTipObj.content = contentDiv;\n                    }\n                    else {\n                        contentDiv[\"\" + domSetter] = this.sanitize(element.innerText);\n                        this.toolTipObj.content = contentDiv;\n                    }\n                    if (this.enableHtmlSanitizer) {\n                        this.toolTipObj.enableHtmlSanitizer = true;\n                    }\n                    if (col && col.disableHtmlEncode) {\n                        this.toolTipObj.enableHtmlParse = false;\n                    }\n                    if (element !== this.prevElement) {\n                        this.toolTipObj['open'](element);\n                    }\n                    this.prevElement = element;\n                }\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     *\n     * @param {Element} table - Defines the table\n     * @param {string} tag - Defines the tag\n     * @param {string} type - Defines the type\n     * @returns {HTMLDivElement} Returns the HTML div ELement\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table');\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr', { attrs: { role: 'row' } });\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.wireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'mouseover', this.mouseMoveHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.unwireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'mouseover', this.mouseMoveHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(window, 'resize', this.resetIndentWidth);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.dataReady, this.dataReady, this);\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.contentReady, this.recalcIndentWidth, this);\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.headerRefreshed, this.recalcIndentWidth, this);\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshFrozenPosition, this.refreshFrozenPosition, this);\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_8__.dataBound, this.dataBoundFunction);\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.keyPressed, this.onKeyPressed, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(_base_constant__WEBPACK_IMPORTED_MODULE_8__.dataReady, this.dataReady);\n        this.off(_base_constant__WEBPACK_IMPORTED_MODULE_8__.contentReady, this.recalcIndentWidth);\n        this.off(_base_constant__WEBPACK_IMPORTED_MODULE_8__.headerRefreshed, this.recalcIndentWidth);\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshFrozenPosition, this.refreshFrozenPosition, this);\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n        this.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_8__.dataBound, this.dataBoundFunction);\n        this.off(_base_constant__WEBPACK_IMPORTED_MODULE_8__.keyPressed, this.onKeyPressed);\n    };\n    /**\n     * Get current visible data of grid.\n     *\n     * @returns {Object[]} Returns the current view records\n     *\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if ((0,_util__WEBPACK_IMPORTED_MODULE_9__.isGroupAdaptive)(this)) {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            return this.currentViewData;\n        }\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length\n            && this.currentViewData.records) ? this.currentViewData.records\n            : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || ((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && ((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.gridContent) ||\n            e.target.tagName === 'TD')) || ((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-headercell') &&\n            (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-headercell').querySelector('.e-checkselectall')) ||\n            (!(this.allowGrouping || this.allowReordering) && (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-gridheader'))) &&\n            e.touches) {\n            return;\n        }\n        if ((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-gridheader') && this.allowRowDragAndDrop &&\n            !((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-filterbarcell')) && (e.target &&\n            ['A', 'BUTTON', 'INPUT'].indexOf(e.target.tagName) === -1)) {\n            e.preventDefault();\n        }\n        var args = this.getRowInfo(e.target);\n        var cancel = 'cancel';\n        args[\"\" + cancel] = false;\n        var isDataRow = false;\n        var tr = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            isDataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        if (isDataRow) {\n            this.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_8__.recordClick, args);\n        }\n        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.row);\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.editedRow) || (tr.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.addedRow)) &&\n            !this.editSettings.showAddNewRow);\n        return !(0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-unboundcelldiv') && (isEdit || ((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.rowCell) &&\n            (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.rowCell).classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-grid');\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(grid) || grid.id !== this.element.id || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_8__.recordDoubleClick, args);\n        }\n        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!(0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear && !filterClear.parentElement.classList.contains('e-tbar-btn')) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!(0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(relatedTarget, 'e-grid') &&\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch' && !((((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(relatedTarget, 'e-ddl') || (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(relatedTarget, 'e-ddt')) &&\n                ((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(relatedTarget, 'e-multi-select-list-wrapper') || (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(relatedTarget, 'e-input-filter'))) &&\n                (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(relatedTarget, 'e-input-group')) && ((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(relatedTarget, 'e-uploader') || (!(relatedTarget &&\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(relatedTarget, 'e-input-group'))) && !(0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'edit-custom-template')))) {\n                this.editModule.saveCell();\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal' && !this.isWidgetsDestroyed) {\n                this.editModule.editFormValidate();\n            }\n        }\n        if (this.editSettings.showAddNewRow) {\n            this.editModule.isShowAddedRowValidate = false;\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-grid');\n        if ((gridElement && gridElement.id !== this.element.id) || ((0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-unboundcelldiv') &&\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gridElement))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {Object} persistedData - Defines the persisted data\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mergePersistGridData = function (persistedData) {\n        var data = this.getLocalData();\n        if (!((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data) || (data === '')) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(persistedData)) {\n            var dataObj = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[\"\" + key] === 'object') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this[\"\" + key])) {\n                    if (Array.isArray(this[\"\" + key]) && key === 'columns') {\n                        this.setFrozenCount();\n                        (0,_util__WEBPACK_IMPORTED_MODULE_9__.setColumnIndex)(this[\"\" + key]);\n                        this.mergeColumns(dataObj[\"\" + key], this[\"\" + key]);\n                        this.mergedColumns = true;\n                        this[\"\" + key] = dataObj[\"\" + key];\n                    }\n                    else {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(this[\"\" + key], dataObj[\"\" + key]);\n                    }\n                }\n                else {\n                    this[\"\" + key] = dataObj[\"\" + key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var storedColumns = storedColumn;\n        var isFrozenGrid = this.isFrozenGrid();\n        var _loop_4 = function (i) {\n            var localCol = columns.filter(function (tCol) { return isFrozenGrid ?\n                tCol.index === storedColumns[parseInt(i.toString(), 10)][\"\" + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.initialFrozenColumnIndex] :\n                tCol.index === storedColumns[parseInt(i.toString(), 10)].index; })[0];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(localCol)) {\n                if (isFrozenGrid) {\n                    localCol = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, localCol, {}, true);\n                    localCol.freeze = storedColumns[parseInt(i.toString(), 10)].freeze;\n                }\n                if (localCol.columns && localCol.columns.length) {\n                    this_4.mergeColumns(storedColumns[parseInt(i.toString(), 10)].columns, localCol.columns);\n                    storedColumns[parseInt(i.toString(), 10)] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n                }\n                else {\n                    storedColumns[parseInt(i.toString(), 10)] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n                }\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_4(i);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns the isDetail\n     */\n    Grid.prototype.isDetail = function () {\n        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.detailTemplate) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this_1 = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this_1.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this_1 = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this_1.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(e, { cancel: false });\n        this.trigger('keyPressed', presskey);\n        if (presskey.cancel === true || (this.isEdit && e && (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-gridform') &&\n            (0,_util__WEBPACK_IMPORTED_MODULE_9__.parentsUntil)(e.target, 'e-ddl') && e.action === 'open' && e.altKey === true && e.code === 'ArrowDown')) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                if (this.keyA) { //alt A J\n                    this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.groupCollapse, { target: e.target, collapse: false });\n                    this.keyA = false;\n                }\n                else {\n                    if (this.focusModule && this.focusModule.currentInfo && this.focusModule.currentInfo.element) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.focusModule.currentInfo.element, this.focusModule.currentInfo.elementToFocus], ['e-focused', 'e-focus']);\n                        this.focusModule.currentInfo.element.tabIndex = -1;\n                    }\n                    if (!this.element.classList.contains('e-childgrid')) {\n                        this.element.focus();\n                    }\n                }\n            }\n            if (e.keyCode === 87) { //alt w\n                var focusModule = this.focusModule;\n                if (focusModule) {\n                    if (!this.currentViewData.length) {\n                        return;\n                    }\n                    focusModule.focusContent();\n                    focusModule.addOutline();\n                }\n            }\n            if (e.keyCode === 65) { //alt A\n                this.keyA = true;\n            }\n            if (e.keyCode === 72 && this.keyA) { //alt A H\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.groupCollapse, { target: e.target, collapse: true });\n                this.keyA = false;\n            }\n        }\n        if (e.keyCode === 13) {\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.enterKeyHandler, e);\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        if (this.isChildGrid(e) ||\n            (this.editModule && ((this.editModule.alertDObj && this.editModule.alertDObj.visible) ||\n                (this.editModule.dialogObj && this.editModule.dialogObj.visible))) ||\n            ((this.isEdit && (!this.editSettings.showAddNewRow || (this.editSettings.showAddNewRow &&\n                this.element.querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.editedRow)))) && e.action !== 'escape' && e.action !== 'enter'\n                && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        else {\n            this.keyPress = true;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.keyPressed, e);\n        }\n    };\n    /**\n     * @param {Function[]} modules - Defines the modules\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.prepareColumns)(this.columns, this.enableColumnVirtualization, this);\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.setColumnIndex)(this.columns);\n        this.initForeignColumn();\n        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.autoCol, {});\n    };\n    Grid.prototype.refreshFrozenPosition = function (obj) {\n        if (obj && obj.isModeChg) {\n            this.refreshColumns();\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.refreshResizePosition, {});\n        }\n        else {\n            this.refreshColumns();\n        }\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     *\n     * @returns {Column[]} Returns Foreign key column\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        return this.getColumns().filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     * @param {boolean} accurateHeight - Defines the accurate row height\n     * @returns {number} Returns row height\n     */\n    Grid.prototype.getRowHeight = function (accurateHeight) {\n        return this.rowHeight ? this.rowHeight : (0,_util__WEBPACK_IMPORTED_MODULE_9__.getRowHeight)(this.element, accurateHeight);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshColumns = function () {\n        this.freezeColumnRefresh = true;\n        this.setFrozenCount();\n        this.updateFrozenColumnsWidth();\n        if (this.isFrozenGrid()) {\n            this.isPreventScrollEvent = true;\n        }\n        this.updateColumnObject();\n        this.checkLockColumns(this.getColumns());\n        this.refresh();\n        if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n            var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n            this.getHeaderContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.headerContent).scrollLeft = left;\n            this.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.content).scrollLeft = left;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns the excelexport\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        if (this.exportGrids && this.exportGrids.length) {\n            var gridIds = this.exportGrids.slice();\n            return this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n        else {\n            return this.excelExportModule ?\n                this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n        }\n    };\n    /**\n     * Export Grid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns csv export\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     *\n     * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     *\n     * @returns {Promise<any>} Returns pdfexport\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.exportGrids && this.exportGrids.length) {\n            var gridIds = this.exportGrids.slice();\n            return this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n        else {\n            return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n        }\n    };\n    Grid.prototype.exportMultiplePdfGrids = function (gridIds, pdfExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    pdfDoc, isBlob) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var _this = this;\n        if (gridIds.length !== 0) {\n            var currentGridId = gridIds.shift();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var exportPromise = currentGridInstance.pdfExportModule ?\n                currentGridInstance.pdfExportModule.Map(currentGridInstance, pdfExportProperties, isMultipleExport, pdfDoc, isBlob)\n                : Promise.resolve();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return exportPromise.then(function (exportedGridResults) {\n                isMultipleExport = gridIds.length === 1 ? false : true;\n                return _this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, exportedGridResults, isBlob);\n            });\n        }\n        return null;\n    };\n    Grid.prototype.exportMultipleExcelGrids = function (gridIds, excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var _this = this;\n        if (gridIds.length !== 0) {\n            var currentGridId = gridIds.shift();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n            var exportPromise = currentGridInstance.excelExportModule ?\n                currentGridInstance.excelExportModule.Map(currentGridInstance, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return exportPromise.then(function (exportedGridResults) {\n                isMultipleExport = gridIds.length === 1 ? false : true;\n                return _this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, exportedGridResults, isBlob);\n            });\n        }\n        return null;\n    };\n    /**\n     * Groups a column by column name.\n     *\n     * @param  {string} columnName - Defines the column name to group.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n     * Collapses all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     *\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @returns {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     *\n     * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n     *\n     * @param  {string} columnName - Defines the column name to ungroup.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this_1 = this;\n        var refresh = function () {\n            _this_1.scrollModule.refresh();\n            _this_1.off(_base_constant__WEBPACK_IMPORTED_MODULE_8__.contentReady, refresh);\n        };\n        this.on(_base_constant__WEBPACK_IMPORTED_MODULE_8__.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @returns {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @returns {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n     * Expands all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns whether context menu is open or not\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @param {Function} module - Defines the module\n     * @returns {boolean} return the injected modules\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     *\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     * @param {any} index - specifies the index\n     *\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @param {string | string[]} type - Defines the type\n     * @param {Object} args - Defines the arguments\n     * @returns {void}\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        var injectedModules = this.getInjectedModules();\n        var logger = injectedModules.find(function (item) { return item.name === 'Logger'; });\n        if (!logger) {\n            Grid_1.Inject(_actions_logger__WEBPACK_IMPORTED_MODULE_27__.Logger);\n            this.enableLogger = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.injectModules();\n        }\n        // eslint-disable-next-line\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @param {Element} element - Defines the element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Object} Returns the previous row data\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.content);\n        if (content.scrollHeight <= content.clientHeight) {\n            this.scrollModule.removePadding();\n            content.style.overflowY = 'auto';\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     *\n     * @param  {string | Object} value - Defines the primary key value.\n     *\n     * @returns {number} Returns the index\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[\"\" + pkName] : value;\n        var rows = this.getRowsObject();\n        for (var i = 0; i < rows.length; i++) {\n            if (rows[parseInt(i.toString(), 10)].isDetailRow || rows[parseInt(i.toString(), 10)].isCaptionRow) {\n                continue;\n            }\n            var pKvalue = rows[parseInt(i.toString(), 10)].data[\"\" + pkName];\n            if (pkName.split('.').length > 1) {\n                pKvalue = (0,_util__WEBPACK_IMPORTED_MODULE_9__.performComplexDataOperation)(pkName, rows[parseInt(i.toString(), 10)].data);\n            }\n            if (pKvalue === value) {\n                return rows[parseInt(i.toString(), 10)].index;\n            }\n        }\n        return -1;\n    };\n    /**\n     * @param {string} field - Defines the field name\n     * @param {boolean} isForeignKey - Defines the foreign key\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field, isForeignKey) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if ((!isForeignKey && field === gCols[parseInt(i.toString(), 10)].field) ||\n                (isForeignKey && gCols[parseInt(i.toString(), 10)].isForeignColumn() &&\n                    field === gCols[parseInt(i.toString(), 10)].foreignKeyValue)) {\n                column = gCols[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (uid === gCols[parseInt(i.toString(), 10)].uid) {\n                column = gCols[parseInt(i.toString(), 10)];\n            }\n        }\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     *\n     * @returns {Object[] | Promise<Object>} Returns the filtered records\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if ((this.allowFiltering && this.filterSettings.columns.length) || this.searchSettings.key.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_11__.DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_11__.DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_11__.DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad|macintosh/.test(userAgent);\n    };\n    /**\n     * @param {TouchEventArgs} e - Defines the TouchEventArgs\n     * @returns {void}\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    // eslint-disable-next-line\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!_util__WEBPACK_IMPORTED_MODULE_9__.Global.timer) {\n                _util__WEBPACK_IMPORTED_MODULE_9__.Global.timer = setTimeout(function () {\n                    _util__WEBPACK_IMPORTED_MODULE_9__.Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(_util__WEBPACK_IMPORTED_MODULE_9__.Global.timer);\n                _util__WEBPACK_IMPORTED_MODULE_9__.Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @param {string} prefix - specifies the prefix\n     * @returns {string} returns the row uid\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @param {string} uid - specifies the uid\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        var cntRows = [].slice.call(this.getContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody).children);\n        if (this.frozenRows) {\n            rows = [].slice.call(this.getHeaderContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody).children);\n            rows = rows.concat(cntRows);\n        }\n        else {\n            rows = cntRows;\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n     * Gets the hidden columns from the Grid.\n     *\n     * @returns {Column[]} Returns the Column\n     */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * Calculates the page size by parent element height\n     *\n     * @param {number | string } containerHeight - specifies the container height\n     * @returns {number} returns the page size\n     */\n    Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n        if (this.allowPaging) {\n            if ((this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header') || (!this.allowTextWrap)) {\n                var pagesize = 0;\n                if (containerHeight.indexOf('%') !== -1) {\n                    containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n                }\n                var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n                if (containerHeight > nonContentHeight) {\n                    var contentHeight = 0;\n                    contentHeight = containerHeight - this.getNoncontentHeight();\n                    pagesize = (contentHeight / this.getRowHeight());\n                }\n                if (pagesize > 0) {\n                    return Math.floor(pagesize);\n                }\n            }\n        }\n        return 0;\n    };\n    Grid.prototype.getNoncontentHeight = function () {\n        var height = 0;\n        if (this.getHeaderContent() && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.getHeaderContent().clientHeight)) {\n            height += this.getHeaderContent().clientHeight;\n        }\n        if (this.toolbar && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-toolbar').clientHeight)) {\n            height += this.element.querySelector('.e-toolbar').clientHeight;\n        }\n        if (this.allowPaging && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-gridpager').clientHeight)) {\n            height += this.element.querySelector('.e-gridpager').clientHeight;\n        }\n        if (this.showColumnChooser && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-columnheader').clientHeight)) {\n            height += this.element.querySelector('.e-columnheader').clientHeight;\n        }\n        if (this.allowGrouping && this.groupSettings.showDropArea && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n            height += this.element.querySelector('.e-groupdroparea').clientHeight;\n        }\n        if (this.aggregates.length > 0 && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.element.querySelector('.e-summaryrow').clientHeight)) {\n            for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n                height += this.element.getElementsByClassName('e-summaryrow')[parseInt(i.toString(), 10)].clientHeight;\n            }\n        }\n        return height;\n    };\n    /**\n     *To perform aggregate operation on a column.\n     *\n     * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n     * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n     *\n     * @returns {number} returns the summary values\n     */\n    Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n        return _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_12__.DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n    };\n    /**\n     * Sends a Post request to export Grid to Excel file in server side.\n     *\n     * @param  {string} url - Pass Url for server side excel export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverExcelExport = function (url, headers) {\n        this.isExcel = true;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * Sends a Post request to export Grid to Pdf file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverPdfExport = function (url, headers) {\n        this.isExcel = false;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * Sends a Post request to export Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass Url for server side csv export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverCsvExport = function (url, headers) {\n        this.isExcel = true;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * @param {string} url - Defines exporting url\n     * @param {ExportHeaders} headers - The optional headers for the export request.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.exportGrid = function (url, headers) {\n        var _this_1 = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var grid = this;\n        var query = grid.getDataModule().generateQuery(true);\n        var state = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_28__.UrlAdaptor().processQuery(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_11__.DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        gridModel.filterSettings.columns = queries.where;\n        gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        gridModel.sortSettings.columns = queries.sorted;\n        gridModel.columns = this.setHeaderText(gridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm' });\n        form.style.display = 'none';\n        var gridInput = this.createElement('input', { id: 'gridInput', attrs: { name: 'gridModel' } });\n        gridInput.value = JSON.stringify(gridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(gridInput);\n        if (headers && headers.headers && Array.isArray(headers.headers)) {\n            headers.headers.forEach(function (header) {\n                Object.keys(header).forEach(function (key) {\n                    var value = typeof header[\"\" + key] === 'string' ? header[\"\" + key] : JSON.stringify(header[\"\" + key]);\n                    var headerInput = _this_1.createElement('input', { attrs: { name: key, value: value, type: 'hidden' } });\n                    form.appendChild(headerInput);\n                });\n            });\n        }\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     * @hidden\n     */\n    Grid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[parseInt(i.toString(), 10)].uid);\n            columns[parseInt(i.toString(), 10)].headerText = column.headerText;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.template)) {\n                columns[parseInt(i.toString(), 10)].template = 'true';\n            }\n            if (columns[parseInt(i.toString(), 10)].format) {\n                columns[parseInt(i.toString(), 10)].format = (0,_util__WEBPACK_IMPORTED_MODULE_9__.getNumberFormat)(this.getFormat(columns[parseInt(i.toString(), 10)].format), columns[parseInt(i.toString(), 10)].type, false, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.defaultCurrencyCode);\n                if (column.type === 'datetime' || column.type === 'date' || column.type === 'time') {\n                    columns[parseInt(i.toString(), 10)].format = columns[parseInt(i.toString(), 10)].format.toString().replace('AM/PM', 'tt');\n                }\n            }\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.setHeaderText(columns[parseInt(i.toString(), 10)].columns, include);\n            }\n            var keys = Object.keys(columns[parseInt(i.toString(), 10)]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[parseInt(j.toString(), 10)]) < 0) {\n                    delete columns[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                }\n            }\n        }\n        return columns;\n    };\n    Grid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * @hidden\n     * @returns {boolean} returns the isCollapseStateEnabled\n     */\n    Grid.prototype.isCollapseStateEnabled = function () {\n        var isExpanded = 'isExpanded';\n        return this[\"\" + isExpanded] === false;\n    };\n    /**\n     * @param {number} key - Defines the primary key value.\n     * @param {Object} rowData - Defines the rowData\n     * @returns {void}\n     */\n    Grid.prototype.updateRowValue = function (key, rowData) {\n        var args = {\n            requestType: 'save', data: rowData\n        };\n        this.showSpinner();\n        this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.updateData, args);\n        this.refresh();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setForeignKeyData = function () {\n        this.dataBind();\n        var colpending = this.getDataModule().getForeignKeyDataState();\n        if (colpending.isPending) {\n            this.getDataModule().setForeignKeyDataState({});\n            colpending.resolver();\n        }\n        else {\n            this.getDataModule().setForeignKeyDataState({ isDataChanged: false });\n            if (this.contentModule || this.headerModule) {\n                this.renderModule.render();\n            }\n        }\n    };\n    /**\n     * @param {string} field - specifies the field\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.resetFilterDlgPosition = function (field) {\n        var header = this.getColumnHeaderByField(field);\n        if (header) {\n            var target = header.querySelector('.e-filtermenudiv');\n            var filterDlg = this.element.querySelector('.e-filter-popup');\n            if (target) {\n                var gClient = this.element.getBoundingClientRect();\n                var fClient = target.getBoundingClientRect();\n                if (filterDlg) {\n                    if ((filterDlg.offsetWidth + fClient.right) > gClient.right) {\n                        filterDlg.style.left = ((fClient.right - filterDlg.offsetWidth) - gClient.left).toString() + 'px';\n                    }\n                    else {\n                        filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {any} callBack - specifies the callBack method\n     * @returns {void}\n     * @hidden\n     */\n    // eslint-disable-next-line\n    Grid.prototype.renderTemplates = function (callBack) {\n        var isReactChild = this.parentDetails && this.parentDetails.parentInstObj && this.parentDetails.parentInstObj.isReact;\n        var isReactPrintGrid = this.printGridParent && this.printGridParent.isReact;\n        if ((isReactChild || isReactPrintGrid) && this['portals']) {\n            var parentInstObj = isReactPrintGrid ? this.printGridParent : this.parentDetails.parentInstObj;\n            parentInstObj['portals'] = parentInstObj['portals'].concat(this['portals']);\n            parentInstObj.renderTemplates(callBack);\n            this['portals'] = undefined;\n        }\n        else {\n            var portals = 'portals';\n            this.notify('reactTemplateRender', this[\"\" + portals]);\n            this.renderReactTemplates(callBack);\n        }\n    };\n    /**\n     * Apply the changes to the Grid without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchUpdate = function (changes) {\n        this.processRowChanges(changes);\n    };\n    /**\n     * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchAsyncUpdate = function (changes) {\n        this.processBulkRowChanges(changes);\n    };\n    Grid.prototype.processBulkRowChanges = function (changes) {\n        var _this_1 = this;\n        if (!this.dataToBeUpdated) {\n            this.dataToBeUpdated = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n            setTimeout(function () {\n                _this_1.processRowChanges(_this_1.dataToBeUpdated);\n                _this_1.dataToBeUpdated = null;\n            }, this.asyncTimeOut);\n        }\n        else {\n            var loopstring = [_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.addedRecords, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.changedRecords, _base_string_literals__WEBPACK_IMPORTED_MODULE_10__.deletedRecords];\n            var keyField = this.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < loopstring.length; i++) {\n                if (changes[loopstring[parseInt(i.toString(), 10)]]) {\n                    (0,_util__WEBPACK_IMPORTED_MODULE_9__.compareChanges)(this, changes, loopstring[parseInt(i.toString(), 10)], keyField);\n                }\n            }\n        }\n    };\n    Grid.prototype.processRowChanges = function (changes) {\n        var _this_1 = this;\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        changes = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n        var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n        if (this.getDataModule().isRemote()) {\n            promise.then(function () {\n                _this_1.setNewData();\n            });\n        }\n        else {\n            this.setNewData();\n        }\n    };\n    Grid.prototype.setNewData = function () {\n        var _this_1 = this;\n        var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n        var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n        getData.then(function (e) {\n            _this_1.bulkRefresh(e.result, oldValues, e.count);\n        });\n    };\n    Grid.prototype.deleteRowElement = function (row) {\n        var tr = this.getRowElementByUID(row.uid);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(tr);\n    };\n    Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n        var _this_1 = this;\n        var rowObj = this.getRowsObject();\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        var _loop_5 = function (i) {\n            if (!result.filter(function (e) { return e[\"\" + keyField] === rowObj[parseInt(i.toString(), 10)].data[\"\" + keyField]; }).length) {\n                this_5.deleteRowElement(rowObj[parseInt(i.toString(), 10)]);\n                rowObj.splice(i, 1);\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_5 = this, out_i_1;\n        for (var i = 0; i < rowObj.length; i++) {\n            _loop_5(i);\n            i = out_i_1;\n        }\n        var _loop_6 = function (i) {\n            var isRowExist;\n            oldValues.filter(function (e) {\n                if (e[\"\" + keyField] === result[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (e !== result[parseInt(i.toString(), 10)]) {\n                        _this_1.setRowData(result[parseInt(i.toString(), 10)][\"\" + keyField], result[parseInt(i.toString(), 10)]);\n                    }\n                    isRowExist = true;\n                }\n            });\n            if (!isRowExist) {\n                this_6.renderRowElement(result[parseInt(i.toString(), 10)], i);\n            }\n        };\n        var this_6 = this;\n        for (var i = 0; i < result.length; i++) {\n            _loop_6(i);\n        }\n        this.currentViewData = result;\n        var rows = [].slice.call(this.getContentTable().getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.row));\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.resetRowIndex)(this, this.getRowsObject(), rows);\n        (0,_util__WEBPACK_IMPORTED_MODULE_9__.setRowElements)(this);\n        if (this.allowPaging) {\n            this.notify(_base_constant__WEBPACK_IMPORTED_MODULE_8__.inBoundModelChanged, { module: 'pager', properties: { totalRecordsCount: count } });\n        }\n    };\n    Grid.prototype.renderRowElement = function (data, index) {\n        var row = new _renderer_row_renderer__WEBPACK_IMPORTED_MODULE_15__.RowRenderer(this.serviceLocator, null, this);\n        var model = new _services_row_model_generator__WEBPACK_IMPORTED_MODULE_29__.RowModelGenerator(this);\n        var modelData = model.generateRows([data]);\n        var tr = row.render(modelData[0], this.getColumns());\n        this.addRowObject(modelData[0], index);\n        var tbody = this.getContentTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n        if (tbody.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n            if (this.frozenRows && this.element.querySelector('.e-frozenrow-empty')) {\n                this.element.querySelector('.e-frozenrow-empty').classList.remove('e-frozenrow-empty');\n            }\n        }\n        if (this.frozenRows && index < this.frozenRows) {\n            tbody = this.getHeaderContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n        }\n        else {\n            tbody = this.getContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n        }\n        tbody = this.getContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n        tbody.appendChild(tr);\n    };\n    Grid.prototype.addRowObject = function (row, index) {\n        this.getRowsObject().splice(index, 1, row);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateVisibleExpandCollapseRows = function () {\n        var rows = this.getRowsObject();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if ((rows[parseInt(i.toString(), 10)].isDataRow || rows[parseInt(i.toString(), 10)].isAggregateRow)\n                && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid)\n                && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid).style.display === 'none') {\n                rows[parseInt(i.toString(), 10)].visible = false;\n            }\n            else {\n                rows[parseInt(i.toString(), 10)].visible = true;\n            }\n        }\n    };\n    /**\n     * Method to sanitize any suspected untrusted strings and scripts before rendering them.\n     *\n     * @param {string} value - Specifies the html value to sanitize\n     * @returns {string} Returns the sanitized html string\n     * @hidden\n     */\n    Grid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer) {\n            return _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * @param {string | number} height - specifies the height\n     * @returns {number | string} - specifies the height number\n     * @hidden\n     */\n    Grid.prototype.getHeight = function (height) {\n        if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n            height = parseInt(height, 10) / 100 * this.element.clientHeight;\n        }\n        else if (!Number.isInteger(height) && this.height !== 'auto') {\n            height = parseInt(height, 10);\n        }\n        else {\n            height = this.height;\n        }\n        return height;\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right content\n\n     */\n    Grid.prototype.getFrozenRightContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header\n\n     */\n    Grid.prototype.getFrozenRightHeader = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable header tbody\n\n     */\n    Grid.prototype.getMovableHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable content tbody\n\n     */\n    Grid.prototype.getMovableContentTbody = function () {\n        return this.getContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen header tbody\n\n     */\n    Grid.prototype.getFrozenHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen left content tbody\n\n     */\n    Grid.prototype.getFrozenLeftContentTbody = function () {\n        return this.getContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header tbody\n\n     */\n    Grid.prototype.getFrozenRightHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n    };\n    /**\n     * @returns {Element} returns frozen right content tbody\n\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightContentTbody = function () {\n        return this.getContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_10__.tbody);\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom filter dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n        if (this.filterModule) {\n            this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom sort dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n        if (this.sortModule) {\n            this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom column chooser dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomColumnChooser = function (isCustom) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.showCustomColumnChooser(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * To manually show the vertical row mode filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveFilterDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomFilter(true);\n        }\n    };\n    /**\n     * To manually show the vertical row sort filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveSortDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomSort(true);\n        }\n    };\n    /**\n     * @param {boolean} isColVirtualization - Defines column virtualization\n     * @returns {Column[]} returns array of column models\n     * @hidden\n     */\n    Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n        var cols = [];\n        var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n        for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n            var col = gridCols_1[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    Grid.prototype.enableInfiniteAggrgate = function () {\n        if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates\n            && !this.groupSettings.enableLazyLoading) {\n            this.setProperties({ groupSettings: { disablePageWiseAggregates: true } }, true);\n        }\n    };\n    var Grid_1;\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Grid.prototype, \"currentViewData\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"parentDetails\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"showHider\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableStickyHeader\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, ResizeSettings)\n    ], Grid.prototype, \"resizeSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _models_page_settings__WEBPACK_IMPORTED_MODULE_30__.PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, LoadingIndicator)\n    ], Grid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Grid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, InfiniteScrollSettings)\n    ], Grid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Horizontal')\n    ], Grid.prototype, \"rowRenderingMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Both')\n    ], Grid.prototype, \"adaptiveUIMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"autoFit\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], _models_aggregate__WEBPACK_IMPORTED_MODULE_31__.AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Complex)({}, _models_column_chooser_settings__WEBPACK_IMPORTED_MODULE_32__.ColumnChooserSettings)\n    ], Grid.prototype, \"columnChooserSettings\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"emptyRecordTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"exportGrids\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Grid.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"recordClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnSelecting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnSelected\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnDeselecting\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnDeselected\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"exportDetailTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"columnDataStateChange\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Grid.prototype, \"beforeDetailTemplateDetach\", void 0);\n    Grid = Grid_1 = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addedRecords: () => (/* binding */ addedRecords),\n/* harmony export */   addedRow: () => (/* binding */ addedRow),\n/* harmony export */   ariaColIndex: () => (/* binding */ ariaColIndex),\n/* harmony export */   ariaRowIndex: () => (/* binding */ ariaRowIndex),\n/* harmony export */   beforeOpen: () => (/* binding */ beforeOpen),\n/* harmony export */   change: () => (/* binding */ change),\n/* harmony export */   changedRecords: () => (/* binding */ changedRecords),\n/* harmony export */   colGroup: () => (/* binding */ colGroup),\n/* harmony export */   content: () => (/* binding */ content),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   deletedRecords: () => (/* binding */ deletedRecords),\n/* harmony export */   downArrow: () => (/* binding */ downArrow),\n/* harmony export */   editedRow: () => (/* binding */ editedRow),\n/* harmony export */   enter: () => (/* binding */ enter),\n/* harmony export */   focus: () => (/* binding */ focus),\n/* harmony export */   frozenContent: () => (/* binding */ frozenContent),\n/* harmony export */   frozenHeader: () => (/* binding */ frozenHeader),\n/* harmony export */   frozenLeft: () => (/* binding */ frozenLeft),\n/* harmony export */   frozenRight: () => (/* binding */ frozenRight),\n/* harmony export */   gridChkBox: () => (/* binding */ gridChkBox),\n/* harmony export */   gridContent: () => (/* binding */ gridContent),\n/* harmony export */   gridFooter: () => (/* binding */ gridFooter),\n/* harmony export */   gridHeader: () => (/* binding */ gridHeader),\n/* harmony export */   groupCaptionRow: () => (/* binding */ groupCaptionRow),\n/* harmony export */   headerContent: () => (/* binding */ headerContent),\n/* harmony export */   initialFrozenColumnIndex: () => (/* binding */ initialFrozenColumnIndex),\n/* harmony export */   leftRight: () => (/* binding */ leftRight),\n/* harmony export */   movableContent: () => (/* binding */ movableContent),\n/* harmony export */   movableHeader: () => (/* binding */ movableHeader),\n/* harmony export */   open: () => (/* binding */ open),\n/* harmony export */   pageDown: () => (/* binding */ pageDown),\n/* harmony export */   pageUp: () => (/* binding */ pageUp),\n/* harmony export */   row: () => (/* binding */ row),\n/* harmony export */   rowCell: () => (/* binding */ rowCell),\n/* harmony export */   shiftEnter: () => (/* binding */ shiftEnter),\n/* harmony export */   shiftTab: () => (/* binding */ shiftTab),\n/* harmony export */   tab: () => (/* binding */ tab),\n/* harmony export */   table: () => (/* binding */ table),\n/* harmony export */   tbody: () => (/* binding */ tbody),\n/* harmony export */   upArrow: () => (/* binding */ upArrow)\n/* harmony export */ });\n/**\n * Specifies class names\n */\n/** @hidden */\nvar rowCell = 'e-rowcell';\n/** @hidden */\nvar gridHeader = 'e-gridheader';\n/** @hidden */\nvar gridContent = 'e-gridcontent';\n/** @hidden */\nvar gridFooter = 'e-gridfooter';\n/** @hidden */\nvar headerContent = 'e-headercontent';\n/** @hidden */\nvar movableContent = 'e-movablecontent';\n/** @hidden */\nvar movableHeader = 'e-movableheader';\n/** @hidden */\nvar frozenContent = 'e-frozencontent';\n/** @hidden */\nvar frozenHeader = 'e-frozenheader';\n/** @hidden */\nvar content = 'e-content';\n/** @hidden */\nvar table = 'e-table';\n/** @hidden */\nvar row = 'e-row';\n/** @hidden */\nvar gridChkBox = 'e-gridchkbox';\n/** @hidden */\nvar editedRow = 'e-editedrow';\n/** @hidden */\nvar addedRow = 'e-addedrow';\n/** @hidden */\nvar groupCaptionRow = 'e-groupcaptionrow';\n/**\n * Specifies repeated strings\n */\n/** @hidden */\nvar changedRecords = 'changedRecords';\n/** @hidden */\nvar addedRecords = 'addedRecords';\n/** @hidden */\nvar deletedRecords = 'deletedRecords';\n/** @hidden */\nvar leftRight = 'Left-Right';\n/** @hidden */\nvar frozenRight = 'frozen-right';\n/** @hidden */\nvar frozenLeft = 'frozen-left';\n/** @hidden */\nvar ariaColIndex = 'aria-colindex';\n/** @hidden */\nvar ariaRowIndex = 'aria-rowindex';\n/** @hidden */\nvar tbody = 'tbody';\n/** @hidden */\nvar colGroup = 'colgroup';\n/** @hidden */\nvar open = 'open';\n/** @hidden */\nvar change = 'change';\n/** @hidden */\nvar focus = 'focus';\n/** @hidden */\nvar create = 'created';\n/** @hidden */\nvar beforeOpen = 'beforeOpen';\n/** @hidden */\nvar downArrow = 'downArrow';\n/** @hidden */\nvar upArrow = 'upArrow';\n/** @hidden */\nvar pageUp = 'PageUp';\n/** @hidden */\nvar pageDown = 'PageDown';\n/** @hidden */\nvar enter = 'enter';\n/** @hidden */\nvar shiftEnter = 'shiftEnter';\n/** @hidden */\nvar tab = 'tab';\n/** @hidden */\nvar shiftTab = 'shiftTab';\n/** @hidden */\nvar initialFrozenColumnIndex = 'initialFrozenColumnIndex';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9iYXNlL3N0cmluZy1saXRlcmFscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3RyYXZlbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3luY2Z1c2lvbitlajItZ3JpZHNAMjkuMS40MC9ub2RlX21vZHVsZXMvQHN5bmNmdXNpb24vZWoyLWdyaWRzL3NyYy9ncmlkL2Jhc2Uvc3RyaW5nLWxpdGVyYWxzLmpzPzk1NmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTcGVjaWZpZXMgY2xhc3MgbmFtZXNcbiAqL1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCB2YXIgcm93Q2VsbCA9ICdlLXJvd2NlbGwnO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCB2YXIgZ3JpZEhlYWRlciA9ICdlLWdyaWRoZWFkZXInO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCB2YXIgZ3JpZENvbnRlbnQgPSAnZS1ncmlkY29udGVudCc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBncmlkRm9vdGVyID0gJ2UtZ3JpZGZvb3Rlcic7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBoZWFkZXJDb250ZW50ID0gJ2UtaGVhZGVyY29udGVudCc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBtb3ZhYmxlQ29udGVudCA9ICdlLW1vdmFibGVjb250ZW50Jztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIG1vdmFibGVIZWFkZXIgPSAnZS1tb3ZhYmxlaGVhZGVyJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGZyb3plbkNvbnRlbnQgPSAnZS1mcm96ZW5jb250ZW50Jztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGZyb3plbkhlYWRlciA9ICdlLWZyb3plbmhlYWRlcic7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBjb250ZW50ID0gJ2UtY29udGVudCc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciB0YWJsZSA9ICdlLXRhYmxlJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIHJvdyA9ICdlLXJvdyc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBncmlkQ2hrQm94ID0gJ2UtZ3JpZGNoa2JveCc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBlZGl0ZWRSb3cgPSAnZS1lZGl0ZWRyb3cnO1xuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCB2YXIgYWRkZWRSb3cgPSAnZS1hZGRlZHJvdyc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBncm91cENhcHRpb25Sb3cgPSAnZS1ncm91cGNhcHRpb25yb3cnO1xuLyoqXG4gKiBTcGVjaWZpZXMgcmVwZWF0ZWQgc3RyaW5nc1xuICovXG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBjaGFuZ2VkUmVjb3JkcyA9ICdjaGFuZ2VkUmVjb3Jkcyc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBhZGRlZFJlY29yZHMgPSAnYWRkZWRSZWNvcmRzJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGRlbGV0ZWRSZWNvcmRzID0gJ2RlbGV0ZWRSZWNvcmRzJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGxlZnRSaWdodCA9ICdMZWZ0LVJpZ2h0Jztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGZyb3plblJpZ2h0ID0gJ2Zyb3plbi1yaWdodCc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBmcm96ZW5MZWZ0ID0gJ2Zyb3plbi1sZWZ0Jztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGFyaWFDb2xJbmRleCA9ICdhcmlhLWNvbGluZGV4Jztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGFyaWFSb3dJbmRleCA9ICdhcmlhLXJvd2luZGV4Jztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIHRib2R5ID0gJ3Rib2R5Jztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGNvbEdyb3VwID0gJ2NvbGdyb3VwJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIG9wZW4gPSAnb3Blbic7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBjaGFuZ2UgPSAnY2hhbmdlJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGZvY3VzID0gJ2ZvY3VzJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGNyZWF0ZSA9ICdjcmVhdGVkJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGJlZm9yZU9wZW4gPSAnYmVmb3JlT3Blbic7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBkb3duQXJyb3cgPSAnZG93bkFycm93Jztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIHVwQXJyb3cgPSAndXBBcnJvdyc7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciBwYWdlVXAgPSAnUGFnZVVwJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIHBhZ2VEb3duID0gJ1BhZ2VEb3duJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGVudGVyID0gJ2VudGVyJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIHNoaWZ0RW50ZXIgPSAnc2hpZnRFbnRlcic7XG4vKiogQGhpZGRlbiAqL1xuZXhwb3J0IHZhciB0YWIgPSAndGFiJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIHNoaWZ0VGFiID0gJ3NoaWZ0VGFiJztcbi8qKiBAaGlkZGVuICovXG5leHBvcnQgdmFyIGluaXRpYWxGcm96ZW5Db2x1bW5JbmRleCA9ICdpbml0aWFsRnJvemVuQ29sdW1uSW5kZXgnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Global: () => (/* binding */ Global),\n/* harmony export */   addBiggerDialog: () => (/* binding */ addBiggerDialog),\n/* harmony export */   addFixedColumnBorder: () => (/* binding */ addFixedColumnBorder),\n/* harmony export */   addRemoveActiveClasses: () => (/* binding */ addRemoveActiveClasses),\n/* harmony export */   addRemoveEventListener: () => (/* binding */ addRemoveEventListener),\n/* harmony export */   addStickyColumnPosition: () => (/* binding */ addStickyColumnPosition),\n/* harmony export */   appendChildren: () => (/* binding */ appendChildren),\n/* harmony export */   applyBiggerTheme: () => (/* binding */ applyBiggerTheme),\n/* harmony export */   applyStickyLeftRightPosition: () => (/* binding */ applyStickyLeftRightPosition),\n/* harmony export */   calculateAggregate: () => (/* binding */ calculateAggregate),\n/* harmony export */   capitalizeFirstLetter: () => (/* binding */ capitalizeFirstLetter),\n/* harmony export */   checkDepth: () => (/* binding */ checkDepth),\n/* harmony export */   checkIsVirtual: () => (/* binding */ checkIsVirtual),\n/* harmony export */   clearReactVueTemplates: () => (/* binding */ clearReactVueTemplates),\n/* harmony export */   compareChanges: () => (/* binding */ compareChanges),\n/* harmony export */   createCboxWithWrap: () => (/* binding */ createCboxWithWrap),\n/* harmony export */   createEditElement: () => (/* binding */ createEditElement),\n/* harmony export */   distinctStringValues: () => (/* binding */ distinctStringValues),\n/* harmony export */   doesImplementInterface: () => (/* binding */ doesImplementInterface),\n/* harmony export */   ensureFirstRow: () => (/* binding */ ensureFirstRow),\n/* harmony export */   ensureLastRow: () => (/* binding */ ensureLastRow),\n/* harmony export */   eventPromise: () => (/* binding */ eventPromise),\n/* harmony export */   extend: () => (/* binding */ extend),\n/* harmony export */   extendObjWithFn: () => (/* binding */ extendObjWithFn),\n/* harmony export */   findCellIndex: () => (/* binding */ findCellIndex),\n/* harmony export */   frozenDirection: () => (/* binding */ frozenDirection),\n/* harmony export */   generateExpandPredicates: () => (/* binding */ generateExpandPredicates),\n/* harmony export */   getActualPropFromColl: () => (/* binding */ getActualPropFromColl),\n/* harmony export */   getActualProperties: () => (/* binding */ getActualProperties),\n/* harmony export */   getActualRowHeight: () => (/* binding */ getActualRowHeight),\n/* harmony export */   getCellByColAndRowIndex: () => (/* binding */ getCellByColAndRowIndex),\n/* harmony export */   getCellFromRow: () => (/* binding */ getCellFromRow),\n/* harmony export */   getCellsByTableName: () => (/* binding */ getCellsByTableName),\n/* harmony export */   getCollapsedRowsCount: () => (/* binding */ getCollapsedRowsCount),\n/* harmony export */   getColumnByForeignKeyValue: () => (/* binding */ getColumnByForeignKeyValue),\n/* harmony export */   getColumnModelByFieldName: () => (/* binding */ getColumnModelByFieldName),\n/* harmony export */   getColumnModelByUid: () => (/* binding */ getColumnModelByUid),\n/* harmony export */   getComplexFieldID: () => (/* binding */ getComplexFieldID),\n/* harmony export */   getCustomDateFormat: () => (/* binding */ getCustomDateFormat),\n/* harmony export */   getDatePredicate: () => (/* binding */ getDatePredicate),\n/* harmony export */   getEditedDataIndex: () => (/* binding */ getEditedDataIndex),\n/* harmony export */   getElementIndex: () => (/* binding */ getElementIndex),\n/* harmony export */   getExpandedState: () => (/* binding */ getExpandedState),\n/* harmony export */   getFilterMenuPostion: () => (/* binding */ getFilterMenuPostion),\n/* harmony export */   getForeignData: () => (/* binding */ getForeignData),\n/* harmony export */   getGroupKeysAndFields: () => (/* binding */ getGroupKeysAndFields),\n/* harmony export */   getListHeight: () => (/* binding */ getListHeight),\n/* harmony export */   getNumberFormat: () => (/* binding */ getNumberFormat),\n/* harmony export */   getObject: () => (/* binding */ getObject),\n/* harmony export */   getParentIns: () => (/* binding */ getParentIns),\n/* harmony export */   getParsedFieldID: () => (/* binding */ getParsedFieldID),\n/* harmony export */   getPosition: () => (/* binding */ getPosition),\n/* harmony export */   getPredicates: () => (/* binding */ getPredicates),\n/* harmony export */   getPrintGridModel: () => (/* binding */ getPrintGridModel),\n/* harmony export */   getPrototypesOfObj: () => (/* binding */ getPrototypesOfObj),\n/* harmony export */   getRowHeight: () => (/* binding */ getRowHeight),\n/* harmony export */   getRowIndexFromElement: () => (/* binding */ getRowIndexFromElement),\n/* harmony export */   getScrollBarWidth: () => (/* binding */ getScrollBarWidth),\n/* harmony export */   getScrollWidth: () => (/* binding */ getScrollWidth),\n/* harmony export */   getStateEventArgument: () => (/* binding */ getStateEventArgument),\n/* harmony export */   getTransformValues: () => (/* binding */ getTransformValues),\n/* harmony export */   getUid: () => (/* binding */ getUid),\n/* harmony export */   getUpdateUsingRaf: () => (/* binding */ getUpdateUsingRaf),\n/* harmony export */   getVisiblePage: () => (/* binding */ getVisiblePage),\n/* harmony export */   getZIndexCalcualtion: () => (/* binding */ getZIndexCalcualtion),\n/* harmony export */   groupCaptionRowLeftRightPos: () => (/* binding */ groupCaptionRowLeftRightPos),\n/* harmony export */   groupReorderRowObject: () => (/* binding */ groupReorderRowObject),\n/* harmony export */   headerValueAccessor: () => (/* binding */ headerValueAccessor),\n/* harmony export */   inArray: () => (/* binding */ inArray),\n/* harmony export */   infiniteAppendElements: () => (/* binding */ infiniteAppendElements),\n/* harmony export */   infiniteRemoveElements: () => (/* binding */ infiniteRemoveElements),\n/* harmony export */   isActionPrevent: () => (/* binding */ isActionPrevent),\n/* harmony export */   isCellHaveWidth: () => (/* binding */ isCellHaveWidth),\n/* harmony export */   isChildColumn: () => (/* binding */ isChildColumn),\n/* harmony export */   isComplexField: () => (/* binding */ isComplexField),\n/* harmony export */   isEditable: () => (/* binding */ isEditable),\n/* harmony export */   isExportColumns: () => (/* binding */ isExportColumns),\n/* harmony export */   isGroupAdaptive: () => (/* binding */ isGroupAdaptive),\n/* harmony export */   isRowEnteredInGrid: () => (/* binding */ isRowEnteredInGrid),\n/* harmony export */   ispercentageWidth: () => (/* binding */ ispercentageWidth),\n/* harmony export */   iterateArrayOrObject: () => (/* binding */ iterateArrayOrObject),\n/* harmony export */   iterateExtend: () => (/* binding */ iterateExtend),\n/* harmony export */   measureColumnDepth: () => (/* binding */ measureColumnDepth),\n/* harmony export */   padZero: () => (/* binding */ padZero),\n/* harmony export */   parents: () => (/* binding */ parents),\n/* harmony export */   parentsUntil: () => (/* binding */ parentsUntil),\n/* harmony export */   performComplexDataOperation: () => (/* binding */ performComplexDataOperation),\n/* harmony export */   prepareColumns: () => (/* binding */ prepareColumns),\n/* harmony export */   pushuid: () => (/* binding */ pushuid),\n/* harmony export */   recursive: () => (/* binding */ recursive),\n/* harmony export */   refreshFilteredColsUid: () => (/* binding */ refreshFilteredColsUid),\n/* harmony export */   refreshForeignData: () => (/* binding */ refreshForeignData),\n/* harmony export */   registerEventHandlers: () => (/* binding */ registerEventHandlers),\n/* harmony export */   removeAddCboxClasses: () => (/* binding */ removeAddCboxClasses),\n/* harmony export */   removeElement: () => (/* binding */ removeElement),\n/* harmony export */   removeEventHandlers: () => (/* binding */ removeEventHandlers),\n/* harmony export */   resetCachedRowIndex: () => (/* binding */ resetCachedRowIndex),\n/* harmony export */   resetColandRowSpanStickyPosition: () => (/* binding */ resetColandRowSpanStickyPosition),\n/* harmony export */   resetColspanGroupCaption: () => (/* binding */ resetColspanGroupCaption),\n/* harmony export */   resetDialogAppend: () => (/* binding */ resetDialogAppend),\n/* harmony export */   resetRowIndex: () => (/* binding */ resetRowIndex),\n/* harmony export */   setChecked: () => (/* binding */ setChecked),\n/* harmony export */   setColumnIndex: () => (/* binding */ setColumnIndex),\n/* harmony export */   setComplexFieldID: () => (/* binding */ setComplexFieldID),\n/* harmony export */   setCssInGridPopUp: () => (/* binding */ setCssInGridPopUp),\n/* harmony export */   setDisplayValue: () => (/* binding */ setDisplayValue),\n/* harmony export */   setFormatter: () => (/* binding */ setFormatter),\n/* harmony export */   setRowElements: () => (/* binding */ setRowElements),\n/* harmony export */   setStyleAndAttributes: () => (/* binding */ setStyleAndAttributes),\n/* harmony export */   setValidationRuels: () => (/* binding */ setValidationRuels),\n/* harmony export */   sliceElements: () => (/* binding */ sliceElements),\n/* harmony export */   templateCompiler: () => (/* binding */ templateCompiler),\n/* harmony export */   toggleFilterUI: () => (/* binding */ toggleFilterUI),\n/* harmony export */   toogleCheckbox: () => (/* binding */ toogleCheckbox),\n/* harmony export */   updateColumnTypeForExportColumns: () => (/* binding */ updateColumnTypeForExportColumns),\n/* harmony export */   updatecloneRow: () => (/* binding */ updatecloneRow),\n/* harmony export */   valueAccessor: () => (/* binding */ valueAccessor),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/util.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/query.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/manager.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/adaptors.js\");\n/* harmony import */ var _models_column__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/column */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-popups@29.1.37/node_modules/@syncfusion/ej2-popups/src/common/position.js\");\n/* harmony import */ var _actions_print__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../actions/print */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/print.js\");\n/* harmony import */ var _common_checkbox_filter_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/checkbox-filter-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/common/checkbox-filter-base.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n\n\n\n//https://typescript.codeplex.com/discussions/401501\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {Object} target - specifies the target\n * @param  {string} checkFor - specifies the checkfors\n * @returns {boolean} returns the boolean\n * @hidden\n */\nfunction doesImplementInterface(target, checkFor) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return target.prototype && checkFor in target.prototype;\n}\n/**\n * Function to get value from provided data\n *\n * @param  {string} field - specifies the field\n * @param  {Object} data - specifies the data\n * @param  {ColumnModel} column - specifies the column\n * @returns {Object} returns the object\n * @hidden\n */\n// eslint-disable-next-line\nfunction valueAccessor(field, data, column) {\n    return ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(field) || field === '') ? '' : _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataUtil.getObject(field, data);\n}\n/**\n * Defines the method used to apply custom header cell values from external function and display this on each header cell rendered.\n *\n * @param  {string} field - specifies the field\n * @param  {ColumnModel} column - specifies the column\n * @returns {object} headerValueAccessor\n * @hidden\n */\nfunction headerValueAccessor(field, column) {\n    return ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(field) || field === '') ? '' : _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataUtil.getObject(field, column);\n}\n/**\n * The function used to update Dom using requestAnimationFrame.\n *\n * @param {Function} updateFunction - Function that contains the actual action\n * @param {object} callBack - defines the callback\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nfunction getUpdateUsingRaf(updateFunction, callBack) {\n    requestAnimationFrame(function () {\n        try {\n            callBack(null, updateFunction());\n        }\n        catch (e) {\n            callBack(e);\n        }\n    });\n}\n/**\n * @hidden\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @returns {boolean} Returns isExportColumns\n */\nfunction isExportColumns(exportProperties) {\n    return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(exportProperties) &&\n        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(exportProperties.columns) && exportProperties.columns.length > 0;\n}\n/**\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nfunction updateColumnTypeForExportColumns(exportProperties, gObj) {\n    var exportColumns = exportProperties.columns;\n    var gridColumns = gObj.columns;\n    for (var i = 0; i < exportColumns.length; i++) {\n        if (gridColumns.length - 1 >= i) {\n            if (gridColumns[parseInt(i.toString(), 10)].columns) {\n                for (var j = 0; j < gridColumns[parseInt(i.toString(), 10)].columns.length; j++) {\n                    exportColumns[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)]\n                        .type = gridColumns[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)].type;\n                }\n            }\n            else {\n                exportColumns[parseInt(i.toString(), 10)].type = gridColumns[parseInt(i.toString(), 10)].type;\n            }\n        }\n    }\n}\n/**\n * @hidden\n * @param {IGrid} grid - Defines the grid\n * @returns {void}\n */\nfunction updatecloneRow(grid) {\n    var nRows = [];\n    var actualRows = grid.vRows;\n    for (var i = 0; i < actualRows.length; i++) {\n        if (actualRows[parseInt(i.toString(), 10)].isDataRow) {\n            nRows.push(actualRows[parseInt(i.toString(), 10)]);\n        }\n        else if (!actualRows[parseInt(i.toString(), 10)].isDataRow) {\n            nRows.push(actualRows[parseInt(i.toString(), 10)]);\n            if (!actualRows[parseInt(i.toString(), 10)].isExpand && actualRows[parseInt(i.toString(), 10)].isCaptionRow) {\n                i += getCollapsedRowsCount(actualRows[parseInt(i.toString(), 10)], grid);\n            }\n        }\n    }\n    grid.vcRows = nRows;\n}\nvar count = 0;\n/**\n * @hidden\n * @param {Row<Column>} val - Defines the value\n * @param {IGrid} grid - Defines the grid\n * @returns {number} Returns the collapsed row count\n */\nfunction getCollapsedRowsCount(val, grid) {\n    count = 0;\n    var gSummary = 'gSummary';\n    var total = 'count';\n    var gLen = grid.groupSettings.columns.length;\n    var records = 'records';\n    var items = 'items';\n    var value = val[\"\" + gSummary];\n    var dataRowCnt = 0;\n    var agrCnt = 'aggregatesCount';\n    if (value === val.data[\"\" + total]) {\n        if (grid.groupSettings.columns.length && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val[\"\" + agrCnt]) && val[\"\" + agrCnt]) {\n            if (grid.groupSettings.columns.length !== 1) {\n                count += (val.indent !== 0 && (value) < 2) ? (val[\"\" + gSummary] * ((gLen - val.indent) + (gLen - val.indent) * val[\"\" + agrCnt])) :\n                    (val[\"\" + gSummary] * ((gLen - val.indent) + (gLen - val.indent - 1) * val[\"\" + agrCnt])) + val[\"\" + agrCnt];\n            }\n            else if (grid.groupSettings.columns.length === 1) {\n                count += (val[\"\" + gSummary] * (gLen - val.indent)) + val[\"\" + agrCnt];\n            }\n        }\n        else if (grid.groupSettings.columns.length) {\n            if (grid.groupSettings.columns.length !== 1) {\n                count += val[\"\" + gSummary] * (grid.groupSettings.columns.length - val.indent);\n            }\n            else {\n                count += val[\"\" + gSummary];\n            }\n        }\n        return count;\n    }\n    else {\n        for (var i = 0, len = val.data[\"\" + items].length; i < len; i++) {\n            var gLevel = val.data[\"\" + items][parseInt(i.toString(), 10)];\n            count += gLevel[\"\" + items].length + ((gLen !== grid.columns.length) &&\n                !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gLevel[\"\" + items][\"\" + records]) ? gLevel[\"\" + items][\"\" + records].length : 0);\n            dataRowCnt += (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gLevel[\"\" + items][\"\" + records]) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val[\"\" + agrCnt])) ? gLevel[\"\" + items][\"\" + records].length :\n                gLevel[\"\" + items].length;\n            if (gLevel[\"\" + items].GroupGuid && gLevel[\"\" + items].childLevels !== 0) {\n                recursive(gLevel);\n            }\n        }\n        count += val.data[\"\" + items].length;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val[\"\" + agrCnt])) {\n            if (val[\"\" + agrCnt] && count && dataRowCnt !== 0) {\n                count += ((count - dataRowCnt) * val[\"\" + agrCnt]) + val[\"\" + agrCnt];\n            }\n        }\n    }\n    return count;\n}\n/**\n * @param {Object[]} row - Defines the row\n * @returns {void}\n * @hidden\n */\nfunction recursive(row) {\n    var items = 'items';\n    var rCount = 'count';\n    for (var j = 0, length_1 = row[\"\" + items].length; j < length_1; j++) {\n        var nLevel = row[\"\" + items][parseInt(j.toString(), 10)];\n        count += nLevel[\"\" + rCount];\n        if (nLevel[\"\" + items].childLevels !== 0) {\n            recursive(nLevel);\n        }\n    }\n}\n/**\n * @param {Object[]} collection - Defines the array\n * @param {Object} predicate - Defines the predicate\n * @returns {Object} Returns the object\n * @hidden\n */\nfunction iterateArrayOrObject(collection, predicate) {\n    var result = [];\n    for (var i = 0, len = collection.length; i < len; i++) {\n        var pred = predicate(collection[parseInt(i.toString(), 10)], i);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pred)) {\n            result.push(pred);\n        }\n    }\n    return result;\n}\n/**\n * @param {Object[]} array - Defines the array\n * @returns {Object} Returns the object\n * @hidden\n */\nfunction iterateExtend(array) {\n    var obj = [];\n    for (var i = 0; i < array.length; i++) {\n        obj.push((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, getActualProperties(array[parseInt(i.toString(), 10)]), {}, true));\n    }\n    return obj;\n}\n/**\n * @param {string | Function} template - Defines the template\n * @returns {Function} Returns the function\n * @hidden\n */\nfunction templateCompiler(template) {\n    if (template) {\n        try {\n            var validSelector = template[0] !== '<';\n            if (typeof template === 'function') {\n                return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n            }\n            else if (validSelector && document.querySelectorAll(template).length) {\n                return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(document.querySelector(template).innerHTML.trim());\n            }\n            else {\n                return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n            }\n        }\n        catch (e) {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n        }\n    }\n    return undefined;\n}\n/**\n * @param {Element} node - Defines the column\n * @param {Object} customAttributes - Defines the index\n * @returns {void}\n * @hidden\n */\nfunction setStyleAndAttributes(node, customAttributes) {\n    var copyAttr = {};\n    var literals = ['style', 'class'];\n    //Dont touch the original object - make a copy\n    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(copyAttr, customAttributes, {});\n    if ('style' in copyAttr) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(node, copyAttr[literals[0]]);\n        delete copyAttr[literals[0]];\n    }\n    if ('class' in copyAttr) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([node], copyAttr[literals[1]]);\n        delete copyAttr[literals[1]];\n    }\n    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(node, copyAttr);\n}\n/**\n * @param {Object} copied - Defines the column\n * @param {Object} first - Defines the inndex\n * @param {Object} second - Defines the second object\n * @param {string[]} exclude - Defines the exclude\n * @returns {Object} Returns the object\n * @hidden\n */\nfunction extend(copied, first, second, exclude) {\n    var moved = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(copied, first, second);\n    var values = Object.keys(moved);\n    for (var i = 0; i < values.length; i++) {\n        if (exclude && exclude.indexOf(values[parseInt(i.toString(), 10)]) !== -1) {\n            delete moved[values[parseInt(i.toString(), 10)]];\n        }\n    }\n    return moved;\n}\n/**\n * @param {Column[]} columnModel - Defines the column\n * @param {number} ind - Defines the inndex\n * @returns {number} - Returns the columnindex\n * @hidden\n */\nfunction setColumnIndex(columnModel, ind) {\n    if (ind === void 0) { ind = 0; }\n    for (var i = 0, len = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columnModel) ? columnModel.length : 0); i < len; i++) {\n        if (columnModel[parseInt(i.toString(), 10)].columns) {\n            columnModel[parseInt(i.toString(), 10)].index = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columnModel[parseInt(i.toString(), 10)].index) ? ind\n                : columnModel[parseInt(i.toString(), 10)].index;\n            ind++;\n            ind = setColumnIndex(columnModel[parseInt(i.toString(), 10)].columns, ind);\n        }\n        else {\n            columnModel[parseInt(i.toString(), 10)].index = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columnModel[parseInt(i.toString(), 10)].index) ? ind\n                : columnModel[parseInt(i.toString(), 10)].index;\n            ind++;\n        }\n    }\n    return ind;\n}\n/**\n * @param {Column[] | string[] | ColumnModel[]} columns - Defines the column\n * @param {boolean} autoWidth - Defines the autowidth\n * @param {IGrid} gObj - Defines the class name\n * @returns {Column} - Returns the columns\n * @hidden\n */\nfunction prepareColumns(columns, autoWidth, gObj) {\n    for (var c = 0, len = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns) ? columns.length : 0); c < len; c++) {\n        var column = void 0;\n        if (typeof columns[parseInt(c.toString(), 10)] === 'string') {\n            column = new _models_column__WEBPACK_IMPORTED_MODULE_2__.Column({ field: columns[parseInt(c.toString(), 10)] }, gObj);\n        }\n        else if (!(columns[parseInt(c.toString(), 10)] instanceof _models_column__WEBPACK_IMPORTED_MODULE_2__.Column) || columns[parseInt(c.toString(), 10)].columns) {\n            if (!columns[parseInt(c.toString(), 10)].columns) {\n                column = new _models_column__WEBPACK_IMPORTED_MODULE_2__.Column(columns[parseInt(c.toString(), 10)], gObj);\n            }\n            else {\n                columns[parseInt(c.toString(), 10)].columns = prepareColumns(columns[parseInt(c.toString(), 10)].columns, null, gObj);\n                column = new _models_column__WEBPACK_IMPORTED_MODULE_2__.Column(columns[parseInt(c.toString(), 10)], gObj);\n            }\n        }\n        else {\n            column = columns[parseInt(c.toString(), 10)];\n        }\n        if (column.type && column.type.toLowerCase() === 'checkbox') {\n            column.allowReordering = false;\n        }\n        column.headerText = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.headerText) ? column.foreignKeyValue || column.field || '' : column.headerText;\n        column.foreignKeyField = column.foreignKeyField || column.field;\n        column.valueAccessor = (typeof column.valueAccessor === 'string' ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(column.valueAccessor, window)\n            : column.valueAccessor) || valueAccessor;\n        column.headerValueAccessor = typeof column.headerValueAccessor === 'string' ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(column.headerValueAccessor, window)\n            : column.headerValueAccessor;\n        column.width = autoWidth && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.width) ? 200 : column.width;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.visible)) {\n            column.visible = true;\n        }\n        columns[parseInt(c.toString(), 10)] = column;\n    }\n    return columns;\n}\n/**\n * @param {HTMLElement} popUp - Defines the popup element\n * @param {MouseEvent | TouchEvent} e - Defines the moouse event\n * @param {string} className - Defines the class name\n * @returns {void}\n * @hidden\n */\nfunction setCssInGridPopUp(popUp, e, className) {\n    var popUpSpan = popUp.querySelector('span');\n    var position = popUp.parentElement.getBoundingClientRect();\n    var targetPosition = e.target.getBoundingClientRect();\n    popUpSpan.className = className;\n    popUp.style.display = '';\n    var isBottomTail = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.clientY) ? e.changedTouches[0].clientY :\n        e.clientY) > popUp.offsetHeight + 10;\n    popUp.style.top = targetPosition.top - position.top +\n        (isBottomTail ? -(popUp.offsetHeight + 10) : popUp.offsetHeight + 10) + 'px'; //10px for tail element\n    popUp.style.left = getPopupLeftPosition(popUp, e, targetPosition, position.left) + 'px';\n    if (isBottomTail) {\n        popUp.querySelector('.e-downtail').style.display = '';\n        popUp.querySelector('.e-uptail').style.display = 'none';\n    }\n    else {\n        popUp.querySelector('.e-downtail').style.display = 'none';\n        popUp.querySelector('.e-uptail').style.display = '';\n    }\n}\n/**\n * @param {HTMLElement} popup - Defines the popup element\n * @param {MouseEvent | TouchEvent} e  - Defines the mouse event\n * @param {Object} targetPosition - Defines the target position\n * @param {number} targetPosition.top - Defines the top position\n * @param {number} targetPosition.left  - Defines the left position\n * @param {number} targetPosition.right  - Defines the right position\n * @param {number} left - Defines the left position\n * @returns {number} Returns the popup left position\n * @hidden\n */\nfunction getPopupLeftPosition(popup, e, targetPosition, left) {\n    var width = popup.offsetWidth / 2;\n    var x = getPosition(e).x;\n    if (x - targetPosition.left < width) {\n        return targetPosition.left - left;\n    }\n    else if (targetPosition.right - x < width) {\n        return targetPosition.right - left - width * 2;\n    }\n    else {\n        return x - left - width;\n    }\n}\n/**\n * @param {Object} obj - Defines the object\n * @returns {Object} Returns the Properties\n * @hidden\n */\nfunction getActualProperties(obj) {\n    if (obj instanceof _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty) {\n        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('properties', obj);\n    }\n    else {\n        return obj;\n    }\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the string selector\n * @param {boolean} isID - Defines the isID\n * @returns {Element} Returns the element\n * @hidden\n */\nfunction parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return parent;\n}\n/**\n * @param {Element} element - Defines the element\n * @param {Element} elements - Defines the element\n * @returns {number} Returns the element index\n * @hidden\n */\nfunction getElementIndex(element, elements) {\n    var index = -1;\n    for (var i = 0, len = elements.length; i < len; i++) {\n        if (elements[parseInt(i.toString(), 10)].isEqualNode(element)) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @param {Object} value - Defines the value\n * @param {Object} collection - defines the collection\n * @returns {number} Returns the array\n * @hidden\n */\nfunction inArray(value, collection) {\n    for (var i = 0, len = collection.length; i < len; i++) {\n        if (collection[parseInt(i.toString(), 10)] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * @param {Object} collection - Defines the collection\n * @returns {Object} Returns the object\n * @hidden\n */\nfunction getActualPropFromColl(collection) {\n    var coll = [];\n    for (var i = 0, len = collection.length; i < len; i++) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (collection[parseInt(i.toString(), 10)].hasOwnProperty('properties')) {\n            coll.push(collection[parseInt(i.toString(), 10)].properties);\n        }\n        else {\n            coll.push(collection[parseInt(i.toString(), 10)]);\n        }\n    }\n    return coll;\n}\n/**\n * @param {Element} target - Defines the target element\n * @param {string} selector - Defines the selector\n * @returns {void}\n * @hidden\n */\nfunction removeElement(target, selector) {\n    var elements = [].slice.call(target.querySelectorAll(selector));\n    for (var i = 0; i < elements.length; i++) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(elements[parseInt(i.toString(), 10)]);\n    }\n}\n/**\n * @param {MouseEvent | TouchEvent} e Defines the mouse event\n * @returns {IPosition} Returns the position\n * @hidden\n */\nfunction getPosition(e) {\n    var position = {};\n    position.x = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.clientX) ? e.changedTouches[0].clientX :\n        e.clientX);\n    position.y = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.clientY) ? e.changedTouches[0].clientY :\n        e.clientY);\n    return position;\n}\nvar uid = 0;\n/**\n * @param {string} prefix - Defines the prefix string\n * @returns {string} Returns the uid\n * @hidden\n */\nfunction getUid(prefix) {\n    return prefix + uid++;\n}\n/**\n * @param {Element | DocumentFragment} elem - Defines the element\n * @param {Element[] | NodeList} children - Defines the Element\n * @returns {Element} Returns the element\n * @hidden\n */\nfunction appendChildren(elem, children) {\n    for (var i = 0, len = children.length; i < len; i++) {\n        if (len === children.length) {\n            elem.appendChild(children[parseInt(i.toString(), 10)]);\n        }\n        else {\n            elem.appendChild(children[0]);\n        }\n    }\n    return elem;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the selector\n * @param {boolean} isID - Defines isID\n * @returns {Element} Return the element\n * @hidden\n */\nfunction parents(elem, selector, isID) {\n    var parent = elem;\n    var parents = [];\n    while (parent) {\n        if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n            parents.push(parent);\n        }\n        parent = parent.parentElement;\n    }\n    return parents;\n}\n/**\n * @param {AggregateType | string} type - Defines the type\n * @param {Object} data - Defines the data\n * @param {AggregateColumnModel} column - Defines the column\n * @param {Object} context - Defines the context\n * @returns {Object} Returns the calculated aggragate\n * @hidden\n */\nfunction calculateAggregate(type, data, column, context) {\n    if (type === 'Custom') {\n        var temp = column.customAggregate;\n        if (typeof temp === 'string') {\n            temp = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(temp, window);\n        }\n        return temp ? temp.call(context, data, column) : '';\n    }\n    return (column.field in data || data instanceof Array) ? _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.DataUtil.aggregates[type.toLowerCase()](data, column.field) : null;\n}\n/** @hidden */\nvar scrollWidth = null;\n/** @hidden\n * @returns {number} - Returns the scrollbarwidth\n */\nfunction getScrollBarWidth() {\n    if (scrollWidth !== null) {\n        return scrollWidth;\n    }\n    var divNode = document.createElement('div');\n    var value = 0;\n    divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n    document.body.appendChild(divNode);\n    value = (divNode.offsetWidth - divNode.clientWidth) | 0;\n    document.body.removeChild(divNode);\n    return scrollWidth = value;\n}\n/** @hidden */\nvar rowHeight;\n/** @hidden */\nvar accurateRowHeight;\n/**\n * @param {HTMLElement} element - Defines the element\n * @param {boolean} accurateHeight - Defines the accurate row height\n * @returns {number} Returns the roww height\n * @hidden\n */\nfunction getRowHeight(element, accurateHeight) {\n    if (accurateHeight && accurateRowHeight !== undefined) {\n        return accurateRowHeight;\n    }\n    if (rowHeight !== undefined) {\n        return rowHeight;\n    }\n    var table = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('table', { className: _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.table, attrs: { role: 'grid' } });\n    table.style.visibility = 'hidden';\n    table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n    element.appendChild(table);\n    var rect = table.querySelector('td').getBoundingClientRect();\n    element.removeChild(table);\n    accurateRowHeight = rect.height;\n    rowHeight = Math.ceil(rect.height);\n    if (accurateHeight) {\n        return accurateRowHeight;\n    }\n    return rowHeight;\n}\n/**\n * @param {HTMLElement} element - Defines the HTMl element\n * @returns {number} Returns the row height\n * @hidden\n */\nfunction getActualRowHeight(element) {\n    var table = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('table', { className: _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.table, attrs: { role: 'grid' } });\n    table.style.visibility = 'hidden';\n    table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n    element.appendChild(table);\n    var rect = table.querySelector('tr').getBoundingClientRect();\n    element.removeChild(table);\n    return rect.height;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {boolean} - Returns is complex field\n * @hidden\n */\nfunction isComplexField(field) {\n    return field.split('.').length > 1;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the get complex field ID\n * @hidden\n */\nfunction getComplexFieldID(field) {\n    if (field === void 0) { field = ''; }\n    return field.replace(/\\./g, '___');\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the parsed column field id\n * @hidden\n */\nfunction getParsedFieldID(field) {\n    if (field === void 0) { field = ''; }\n    return field.replace(/[^a-zA-Z0-9_.]/g, '\\\\$&');\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the set complex field ID\n * @hidden\n */\nfunction setComplexFieldID(field) {\n    if (field === void 0) { field = ''; }\n    return field.replace(/___/g, '.');\n}\n/**\n * @param {Column} col - Defines the column\n * @param {string} type - Defines the type\n * @param {Element} elem - Defines th element\n * @returns {boolean} Returns is Editable\n * @hidden\n */\nfunction isEditable(col, type, elem) {\n    var row = parentsUntil(elem, _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.row);\n    var isOldRow = !row ? true : row && !row.classList.contains('e-insertedrow');\n    if (type === 'beginEdit' && isOldRow) {\n        if (col.isIdentity || col.isPrimaryKey || !col.allowEditing) {\n            return false;\n        }\n        return true;\n    }\n    else if (type === 'add' && col.isIdentity) {\n        return false;\n    }\n    else {\n        if (isOldRow && !col.allowEditing && !col.isIdentity && !col.isPrimaryKey) {\n            return false;\n        }\n        return true;\n    }\n}\n/**\n * @param {Element} elem - Defines th element\n * @returns {boolean} Returns is Editable\n * @hidden\n */\nfunction isCellHaveWidth(elem) {\n    return elem.getBoundingClientRect().width === 0 ? false : true;\n}\n/**\n * @param {IGrid} inst - Defines the IGrid\n * @returns {boolean} Returns is action prevent in boolean\n * @hidden\n */\nfunction isActionPrevent(inst) {\n    var dlg = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.select)('#' + inst.element.id + 'EditConfirm', inst.element);\n    return inst.editSettings.mode === 'Batch' &&\n        ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.e-updatedtd', inst.element).length || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.selectAll)('.e-gridform.e-formvalidator', inst.element).length)\n        && inst.editSettings.showConfirmDialog && (dlg ? dlg.classList.contains('e-popup-close') : true);\n}\n/**\n * @param {any} elem - Defines the element\n * @param {boolean} action - Defines the boolean for action\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nfunction wrap(elem, action) {\n    var clName = 'e-wrap';\n    elem = elem instanceof Array ? elem : [elem];\n    for (var i = 0; i < elem.length; i++) {\n        if (action) {\n            elem[parseInt(i.toString(), 10)].classList.add(clName);\n        }\n        else {\n            elem[parseInt(i.toString(), 10)].classList.remove(clName);\n        }\n    }\n}\n/**\n * @param {ServiceLocator} serviceLocator - Defines the service locator\n * @param {Column} column  - Defines the column\n * @returns {void}\n * @hidden\n */\nfunction setFormatter(serviceLocator, column) {\n    var fmtr = serviceLocator.getService('valueFormatter');\n    var format = 'format';\n    var args;\n    if (column.type === 'date' || column.type === 'datetime' || column.type === 'dateonly') {\n        args = { type: column.type === 'dateonly' ? 'date' : column.type, skeleton: column.format };\n        if ((typeof (column.format) === 'string') && column.format !== 'yMd') {\n            args[\"\" + format] = column.format;\n        }\n    }\n    switch (column.type) {\n        case 'date':\n            column.setFormatter(fmtr.getFormatFunction(args));\n            column.setParser(fmtr.getParserFunction(args));\n            break;\n        case 'dateonly':\n            column.setFormatter(fmtr.getFormatFunction(args));\n            column.setParser(fmtr.getParserFunction(args));\n            break;\n        case 'datetime':\n            column.setFormatter(fmtr.getFormatFunction(args));\n            column.setParser(fmtr.getParserFunction(args));\n            break;\n        case 'number':\n            column.setFormatter(fmtr.getFormatFunction({ format: column.format }));\n            column.setParser(fmtr.getParserFunction({ format: column.format }));\n            break;\n    }\n}\n/**\n * @param {Element} cells - Defines the cell element\n * @param {boolean} add - Defines the add\n * @param {string} args - Defines the args\n * @returns {void}\n * @hidden\n */\nfunction addRemoveActiveClasses(cells, add) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    for (var i = 0, len = cells.length; i < len; i++) {\n        if (add) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(cells[parseInt(i.toString(), 10)], args.slice(), []);\n            cells[parseInt(i.toString(), 10)].setAttribute('aria-selected', 'true');\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(cells[parseInt(i.toString(), 10)], [], args.slice());\n            cells[parseInt(i.toString(), 10)].removeAttribute('aria-selected');\n        }\n    }\n}\n/**\n * @param {string} result - Defines th string\n * @returns {string} Returns the distinct staing values\n * @hidden\n */\nfunction distinctStringValues(result) {\n    var temp = {};\n    var res = [];\n    for (var i = 0; i < result.length; i++) {\n        if (!(result[parseInt(i.toString(), 10)] in temp)) {\n            res.push(result[parseInt(i.toString(), 10)].toString());\n            temp[result[parseInt(i.toString(), 10)]] = 1;\n        }\n    }\n    return res;\n}\n/**\n * @param {Element} target - Defines the target\n * @param {Dialog} dialogObj - Defines the dialog\n * @returns {void}\n * @hidden\n */\nfunction getFilterMenuPostion(target, dialogObj) {\n    var elementVisible = dialogObj.element.style.display;\n    dialogObj.element.style.display = 'block';\n    var dlgWidth = dialogObj.width;\n    var newpos = (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_4__.calculateRelativeBasedPosition)(target, dialogObj.element);\n    dialogObj.element.style.display = elementVisible;\n    dialogObj.element.style.top = (newpos.top + target.getBoundingClientRect().height) - 5 + 'px';\n    var leftPos = ((newpos.left - dlgWidth) + target.clientWidth);\n    if (leftPos < 1) {\n        dialogObj.element.style.left = (dlgWidth + leftPos) - 16 + 'px'; // right calculation\n    }\n    else {\n        dialogObj.element.style.left = leftPos + -4 + 'px';\n    }\n}\n/**\n * @param {Object} args - Defines the args\n * @param {Popup} args.popup - Defines the args for popup\n * @param {Dialog} dialogObj - Defines the dialog obj\n * @returns {void}\n * @hidden\n */\nfunction getZIndexCalcualtion(args, dialogObj) {\n    args.popup.element.style.zIndex = (dialogObj.zIndex + 1).toString();\n}\n/**\n * @param {string} operator - Defines the operator\n * @param {string} columnUid - Defines the column uid\n * @param {Column} column - Defines the column\n * @param {string} columnType - Defines the column type\n * @param {Dialog} dlgObj - Defines the dialog\n * @param {string} previousValue - Defines the previous operator\n * @returns {void}\n * @hidden\n */\nfunction toggleFilterUI(operator, columnUid, column, columnType, dlgObj, previousValue) {\n    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.filterTemplate)) {\n        var columnID = '';\n        if (columnType === 'string') {\n            columnID = 'strui-' + columnUid;\n        }\n        else if (columnType === 'number') {\n            columnID = 'numberui-' + columnUid;\n        }\n        else if (columnType === 'boolean') {\n            columnID = 'bool-ui-' + columnUid;\n        }\n        else if (columnType === 'date') {\n            columnID = 'dateui-' + columnUid;\n        }\n        var isPreviousValue = previousValue === 'in' || previousValue === 'notin';\n        var isMultiSelect = operator === 'in' || operator === 'notin';\n        var multiselectParent = parentsUntil(dlgObj.element.querySelector(\"#multiselect\" + columnID), 'e-control-wrapper');\n        var singleInputParent = parentsUntil(dlgObj.element.querySelector(\"#\" + columnID), 'e-popup-flmenu');\n        if (multiselectParent) {\n            multiselectParent.style.display = isMultiSelect ? 'inline-flex' : 'none';\n        }\n        if (singleInputParent) {\n            singleInputParent.style.display = isMultiSelect ? 'none' : 'inline-flex';\n        }\n    }\n}\n/**\n * @param {Element} elem - Defines the element\n * @returns {void}\n * @hidden\n */\nfunction toogleCheckbox(elem) {\n    var span = elem.querySelector('.e-frame');\n    var input = span.previousSibling;\n    if (span.classList.contains('e-check')) {\n        input.checked = false;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(span, ['e-uncheck'], ['e-check']);\n    }\n    else {\n        input.checked = true;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(span, ['e-check'], ['e-uncheck']);\n    }\n}\n/**\n * @param {HTMLInputElement} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nfunction setChecked(elem, checked) {\n    elem.checked = checked;\n}\n/**\n * @param {string} uid - Defines the string\n * @param {Element} elem - Defines the Element\n * @param {string} className - Defines the classname\n * @returns {Element} Returns the box wrap\n * @hidden\n */\nfunction createCboxWithWrap(uid, elem, className) {\n    var div = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: className });\n    div.appendChild(elem);\n    div.setAttribute('uid', uid);\n    return div;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nfunction removeAddCboxClasses(elem, checked) {\n    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([elem], ['e-check', 'e-stop', 'e-uncheck']);\n    if (checked) {\n        elem.classList.add('e-check');\n    }\n    else {\n        elem.classList.add('e-uncheck');\n    }\n}\n/**\n * Refresh the Row model's foreign data.\n *\n * @param {IRow<Column>} row - Grid Row model object.\n * @param {Column[]} columns - Foreign columns array.\n * @param {Object} data - Updated Row data.\n * @returns {void}\n * @hidden\n */\nfunction refreshForeignData(row, columns, data) {\n    for (var i = 0; i < (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns) ? columns.length : 0); i++) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(columns[parseInt(i.toString(), 10)].field, getForeignData(columns[parseInt(i.toString(), 10)], data), row.foreignKeyData);\n    }\n    var cells = row.cells;\n    for (var i = 0; i < cells.length; i++) {\n        if (cells[parseInt(i.toString(), 10)].isForeignKey) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('foreignKeyData', (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(cells[parseInt(i.toString(), 10)].column.field, row.foreignKeyData), cells[parseInt(i.toString(), 10)]);\n        }\n    }\n}\n/**\n * Get the foreign data for the corresponding cell value.\n *\n * @param {Column} column - Foreign Key column\n * @param {Object} data - Row data.\n * @param {string | number} lValue - cell value.\n * @param {Object} foreignKeyData - foreign data source.\n * @returns {Object} Returns the object\n * @hidden\n */\nfunction getForeignData(column, data, lValue, foreignKeyData) {\n    var fField = column.foreignKeyField;\n    var key = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(lValue) ? lValue : valueAccessor(column.field, data, column));\n    key = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(key) ? '' : key;\n    var query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Query();\n    var fdata = foreignKeyData || ((column.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_6__.DataManager) && column.dataSource.dataSource.json.length ?\n        column.dataSource.dataSource.json : column.columnData);\n    if (key.getDay) {\n        query.where(getDatePredicate({ field: fField, operator: 'equal', value: key, matchCase: false }));\n    }\n    else {\n        query.where(fField, '==', key, false);\n    }\n    return new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_6__.DataManager(fdata).executeLocal(query);\n}\n/**\n * To use to get the column's object by the foreign key value.\n *\n * @param {string} foreignKeyValue - Defines ForeignKeyValue.\n * @param {Column[]} columns - Array of column object.\n * @returns {Column} Returns the element\n * @hidden\n */\nfunction getColumnByForeignKeyValue(foreignKeyValue, columns) {\n    var column;\n    return columns.some(function (col) {\n        column = col;\n        return col.foreignKeyValue === foreignKeyValue;\n    }) && column;\n}\n/**\n * @param {number} value - Defines the date or month value\n * @returns {string} Returns string\n * @hidden\n */\nfunction padZero(value) {\n    if (value < 10) {\n        return '0' + value;\n    }\n    return String(value);\n}\n/**\n * @param {PredicateModel} filterObject - Defines the filterObject\n * @param {string} type - Defines the type\n * @param {boolean} isExecuteLocal - Defines whether the data actions performed in client and used for dateonly type field\n * @returns {Predicate} Returns the Predicate\n * @hidden\n */\nfunction getDatePredicate(filterObject, type, isExecuteLocal) {\n    var datePredicate;\n    var prevDate;\n    var nextDate;\n    var prevObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, getActualProperties(filterObject));\n    var nextObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, getActualProperties(filterObject));\n    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filterObject.value) || filterObject.value === '') {\n        datePredicate = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n        return datePredicate;\n    }\n    var value = new Date(filterObject.value);\n    if (type === 'dateonly' && !isExecuteLocal) {\n        if (typeof (prevObj.value) === 'string') {\n            prevObj.value = new Date(prevObj.value);\n        }\n        var dateOnlyString = prevObj.value.getFullYear() + '-' + padZero(prevObj.value.getMonth() + 1) + '-' + padZero(prevObj.value.getDate());\n        var predicates = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Predicate(prevObj.field, prevObj.operator, dateOnlyString, false);\n        datePredicate = predicates;\n    }\n    else {\n        filterObject.operator = filterObject.operator.toLowerCase();\n        if (filterObject.operator === 'equal' || filterObject.operator === 'notequal') {\n            if (type === 'datetime') {\n                prevDate = new Date(value.setSeconds(value.getSeconds() - 1));\n                nextDate = new Date(value.setSeconds(value.getSeconds() + 2));\n                filterObject.value = new Date(value.setSeconds(nextDate.getSeconds() - 1));\n            }\n            else {\n                prevDate = new Date(value.setHours(0) - 1);\n                nextDate = new Date(value.setHours(24));\n            }\n            prevObj.value = prevDate;\n            nextObj.value = nextDate;\n            if (filterObject.operator === 'equal') {\n                prevObj.operator = 'greaterthan';\n                nextObj.operator = 'lessthan';\n            }\n            else if (filterObject.operator === 'notequal') {\n                prevObj.operator = 'lessthanorequal';\n                nextObj.operator = 'greaterthanorequal';\n            }\n            var predicateSt = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n            var predicateEnd = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Predicate(nextObj.field, nextObj.operator, nextObj.value, false);\n            datePredicate = filterObject.operator === 'equal' ? predicateSt.and(predicateEnd) : predicateSt.or(predicateEnd);\n        }\n        else {\n            if (type === 'date' && (filterObject.operator === 'lessthanorequal' || filterObject.operator === 'greaterthan')) {\n                prevObj.value = new Date(value.setHours(24) - 1);\n            }\n            if (typeof (prevObj.value) === 'string') {\n                prevObj.value = new Date(prevObj.value);\n            }\n            var predicates = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n            datePredicate = predicates;\n        }\n    }\n    if (filterObject.setProperties) {\n        filterObject.setProperties({ ejpredicate: datePredicate }, true);\n    }\n    else {\n        filterObject.ejpredicate = datePredicate;\n    }\n    return datePredicate;\n}\n/**\n * @param {IGrid} grid - Defines the IGrid\n * @returns {boolean} Returns true if group adaptive is true\n * @hidden\n */\nfunction isGroupAdaptive(grid) {\n    return grid.enableVirtualization && grid.groupSettings.columns.length > 0 && grid.isVirtualAdaptive &&\n        !grid.groupSettings.enableLazyLoading;\n}\n/**\n * @param {string} field - Defines the Field\n * @param {Object} object - Defines the objec\n * @returns {any} Returns the object\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getObject(field, object) {\n    if (field === void 0) { field = ''; }\n    if (field) {\n        var value = object;\n        var splits = field.split('.');\n        for (var i = 0; i < splits.length && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value); i++) {\n            value = value[splits[parseInt(i.toString(), 10)]];\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(value)) {\n                var newCase = splits[parseInt(i.toString(), 10)].charAt(0).toUpperCase()\n                    + splits[parseInt(i.toString(), 10)].slice(1);\n                value = object[\"\" + newCase] || object[(\"\" + newCase).charAt(0).toLowerCase() + (\"\" + newCase).slice(1)];\n            }\n        }\n        return value;\n    }\n}\n/**\n * @param {string | Object} format - defines the format\n * @param {string} colType - Defines the coltype\n * @returns {string} Returns the custom Data format\n * @hidden\n */\nfunction getCustomDateFormat(format, colType) {\n    var intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n    var formatvalue;\n    var formatter = 'format';\n    var type = 'type';\n    if (colType === 'date') {\n        formatvalue = typeof (format) === 'object' ?\n            intl.getDatePattern({ type: format[\"\" + type] ? format[\"\" + type] : 'date', format: format[\"\" + formatter] }, false) :\n            intl.getDatePattern({ type: 'dateTime', skeleton: format }, false);\n    }\n    else {\n        formatvalue = typeof (format) === 'object' ?\n            intl.getDatePattern({ type: format[\"\" + type] ? format[\"\" + type] : 'dateTime', format: format[\"\" + formatter] }, false) :\n            intl.getDatePattern({ type: 'dateTime', skeleton: format }, false);\n    }\n    return formatvalue;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {Object} Returns the object\n * @hidden\n */\nfunction getExpandedState(gObj, hierarchyPrintMode) {\n    var rows = gObj.getRowsObject();\n    var obj = {};\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n        var row = rows_1[_i];\n        if (row.isExpand && !row.isDetailRow) {\n            var index = gObj.allowPaging && gObj.printMode === 'AllPages' ? row.index +\n                (gObj.pageSettings.currentPage * gObj.pageSettings.pageSize) - gObj.pageSettings.pageSize : row.index;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index)) {\n                obj[parseInt(index.toString(), 10)] = {};\n                obj[parseInt(index.toString(), 10)].isExpand = true;\n                if (gObj.childGrid) {\n                    obj[parseInt(index.toString(), 10)].gridModel = getPrintGridModel(row.childGrid, hierarchyPrintMode);\n                    obj[parseInt(index.toString(), 10)].gridModel.query = gObj.childGrid.query;\n                }\n            }\n        }\n    }\n    return obj;\n}\n/**\n * @param {IGrid} gObj - Defines the grid objct\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {IGrid} Returns the IGrid\n * @hidden\n */\nfunction getPrintGridModel(gObj, hierarchyPrintMode) {\n    if (hierarchyPrintMode === void 0) { hierarchyPrintMode = 'Expanded'; }\n    var printGridModel = {};\n    if (!gObj) {\n        return printGridModel;\n    }\n    for (var _i = 0, _a = _actions_print__WEBPACK_IMPORTED_MODULE_7__.Print.printGridProp; _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (key === 'columns') {\n            printGridModel[\"\" + key] = getActualPropFromColl(gObj[\"\" + key]);\n        }\n        else if (key === 'allowPaging') {\n            printGridModel[\"\" + key] = gObj.printMode === 'CurrentPage';\n        }\n        else {\n            printGridModel[\"\" + key] = getActualProperties(gObj[\"\" + key]);\n        }\n    }\n    printGridModel['enableHover'] = false;\n    if ((gObj.childGrid || gObj.detailTemplate) && hierarchyPrintMode !== 'None') {\n        printGridModel.expandedRows = getExpandedState(gObj, hierarchyPrintMode);\n    }\n    return printGridModel;\n}\n/**\n * @param {Object} copied - Defines the copied object\n * @param {Object} first - Defines the first object\n * @param {Object} second - Defines the second object\n * @param {boolean} deep - Defines the deep\n * @returns {Object} Returns the extended object\n * @hidden\n */\nfunction extendObjWithFn(copied, first, second, deep) {\n    var res = copied || {};\n    var len = arguments.length;\n    if (deep) {\n        len = len - 1;\n    }\n    for (var i = 1; i < len; i++) {\n        // eslint-disable-next-line prefer-rest-params\n        if (!arguments[parseInt(i.toString(), 10)]) {\n            continue;\n        }\n        // eslint-disable-next-line prefer-rest-params\n        var obj1 = arguments[parseInt(i.toString(), 10)];\n        var keys = Object.keys(Object.getPrototypeOf(obj1)).length ?\n            Object.keys(obj1).concat(getPrototypesOfObj(obj1)) : Object.keys(obj1);\n        for (var i_1 = 0; i_1 < keys.length; i_1++) {\n            var source = res[keys[parseInt(i_1.toString(), 10)]];\n            var cpy = obj1[keys[parseInt(i_1.toString(), 10)]];\n            var cln = void 0;\n            if (deep && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isObject)(cpy) || Array.isArray(cpy))) {\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isObject)(cpy)) {\n                    cln = source ? source : {};\n                    res[keys[parseInt(i_1.toString(), 10)]] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, cln, cpy, deep);\n                }\n                else {\n                    cln = source ? source : [];\n                    res[keys[parseInt(i_1.toString(), 10)]] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], cln, cpy, deep);\n                }\n            }\n            else {\n                res[keys[parseInt(i_1.toString(), 10)]] = cpy;\n            }\n        }\n    }\n    return res;\n}\n/**\n * @param {Object} obj - Defines the obj\n * @returns {string[]} Returns the string\n * @hidden\n */\nfunction getPrototypesOfObj(obj) {\n    var keys = [];\n    while (Object.getPrototypeOf(obj) && Object.keys(Object.getPrototypeOf(obj)).length) {\n        keys = keys.concat(Object.keys(Object.getPrototypeOf(obj)));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return keys;\n}\n/**\n * @param {Column[]} column - Defines the Column\n * @returns {number} Returns the column Depth\n * @hidden\n */\nfunction measureColumnDepth(column) {\n    var max = 0;\n    for (var i = 0; i < (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column) ? column.length : 0); i++) {\n        var depth = checkDepth(column[parseInt(i.toString(), 10)], 0);\n        if (max < depth) {\n            max = depth;\n        }\n    }\n    return max + 1;\n}\n/**\n * @param {Column} col - Defines the Column\n * @param {number} index - Defines the index\n * @returns {number} Returns the depth\n * @hidden\n */\nfunction checkDepth(col, index) {\n    var max = index;\n    var indices = [];\n    if (col.columns) {\n        index++;\n        for (var i = 0; i < col.columns.length; i++) {\n            indices[parseInt(i.toString(), 10)] = checkDepth(col.columns[parseInt(i.toString(), 10)], index);\n        }\n        for (var j = 0; j < indices.length; j++) {\n            if (max < indices[parseInt(j.toString(), 10)]) {\n                max = indices[parseInt(j.toString(), 10)];\n            }\n        }\n        index = max;\n    }\n    return index;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {PredicateModel[]} filteredCols - Defines the PredicateModel\n * @returns {void}\n * @hidden\n */\nfunction refreshFilteredColsUid(gObj, filteredCols) {\n    for (var i = 0; i < filteredCols.length; i++) {\n        filteredCols[parseInt(i.toString(), 10)].uid = filteredCols[parseInt(i.toString(), 10)].isForeignKey ?\n            getColumnByForeignKeyValue(filteredCols[parseInt(i.toString(), 10)].field, gObj.getForeignKeyColumns()).uid\n            : gObj.enableColumnVirtualization ? getColumnModelByFieldName(gObj, filteredCols[parseInt(i.toString(), 10)].field).uid\n                : gObj.getColumnByField(filteredCols[parseInt(i.toString(), 10)].field).uid;\n    }\n}\n/** @hidden */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar Global;\n(function (Global) {\n    // eslint-disable-next-line prefer-const\n    Global.timer = null;\n})(Global || (Global = {}));\n/**\n * @param {Element} element - Defines the element\n * @returns {Object} Returns the transform values\n * @hidden\n */\nfunction getTransformValues(element) {\n    var style = document.defaultView.getComputedStyle(element, null);\n    var transformV = style.getPropertyValue('transform');\n    var replacedTv = transformV.replace(/,/g, '');\n    var translateX = parseFloat((replacedTv).split(' ')[4]);\n    var translateY = parseFloat((replacedTv).split(' ')[5]);\n    return { width: translateX, height: translateY };\n}\n/**\n * @param {Element} rootElement - Defines the root Element\n * @param {Element} element - Defines the element\n * @returns {void}\n * @hidden\n */\nfunction applyBiggerTheme(rootElement, element) {\n    if (rootElement.classList.contains('e-bigger')) {\n        element.classList.add('e-bigger');\n    }\n}\n/**\n * @param {IGrid} gObj - Defines grid object\n * @returns {number}  - Returns scroll width\n * @hidden\n */\nfunction getScrollWidth(gObj) {\n    var scrollElem = gObj.getContent().firstElementChild;\n    return scrollElem.scrollWidth > scrollElem.offsetWidth ? getScrollBarWidth() : 0;\n}\n/**\n * @param {IGrid} gObj - Defines grid object\n * @param {number} idx - Defines the index\n * @returns {number} Returns colSpan index\n * @hidden\n */\nfunction resetColspanGroupCaption(gObj, idx) {\n    var colspan = 0;\n    var cols = gObj.getColumns();\n    var width = idx * 30;\n    if (gObj.isRowDragable()) {\n        colspan++;\n        width += 30;\n    }\n    colspan += (gObj.groupSettings.columns.length - idx);\n    width += (30 * (gObj.groupSettings.columns.length - idx));\n    var gridWidth = (gObj.width === 'auto' ? gObj.element.offsetWidth : gObj.width.toString().indexOf('%') !== -1 ?\n        gObj.element.getBoundingClientRect().width : parseInt(gObj.width.toString(), 10)) - getScrollWidth(gObj);\n    for (var i = 0; i < cols.length; i++) {\n        if (cols[parseInt(i.toString(), 10)].visible) {\n            width += parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10);\n            colspan++;\n        }\n        if (width > gridWidth) {\n            colspan--;\n            break;\n        }\n    }\n    return colspan;\n}\n/**\n * @param {HTMLElement} tr - Defines the tr Element\n * @param {IGrid} gObj - Defines grid object\n * @returns {void}\n * @hidden\n */\nfunction groupCaptionRowLeftRightPos(tr, gObj) {\n    var width = 0;\n    var idx = 0;\n    var frozenCount = gObj.getVisibleFrozenLeftCount();\n    for (var j = 0; j < tr.childNodes.length; j++) {\n        var td = tr.childNodes[parseInt(j.toString(), 10)];\n        if (frozenCount === idx) {\n            break;\n        }\n        if (td.classList.contains('e-groupcaption') || td.classList.contains('e-summarycell')) {\n            idx += parseInt(td.getAttribute('colspan'), 10);\n        }\n        td.classList.add('e-leftfreeze');\n        if (td.classList.contains('e-groupcaption') && parseInt(td.getAttribute('colspan'), 10) === 1) {\n            td.classList.add('e-freezeleftborder');\n        }\n        applyStickyLeftRightPosition(td, width, gObj.enableRtl, 'Left');\n        if (td.classList.contains('e-indentcell') || td.classList.contains('e-recordplusexpand') ||\n            td.classList.contains('e-recordpluscollapse')) {\n            width += 30;\n        }\n        if (td.classList.contains('e-groupcaption')) {\n            var colspan = parseInt(td.getAttribute('colspan'), 10);\n            if (gObj.isRowDragable()) {\n                colspan--;\n                width += 30;\n            }\n            colspan = colspan - (gObj.groupSettings.columns.length - j);\n            width = width + (30 * (gObj.groupSettings.columns.length - j));\n            var cols = gObj.getColumns();\n            for (var i = 0; i < cols.length; i++) {\n                if ((parseInt(td.getAttribute('colspan'), 10) > 1) &&\n                    (parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10)\n                        + width) > (parseInt(gObj.width.toString(), 10) - getScrollWidth(gObj))) {\n                    var newColspan = resetColspanGroupCaption(gObj, j);\n                    td.setAttribute('colspan', newColspan.toString());\n                    break;\n                }\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseInt(cols[parseInt(i.toString(), 10)].width.toString(), 10);\n                    colspan--;\n                }\n                if (colspan === 0) {\n                    break;\n                }\n            }\n        }\n        if (td.classList.contains('e-summarycell')) {\n            var uid_1 = td.getAttribute('e-mappinguid');\n            var column = gObj.getColumnByUid(uid_1);\n            width += parseInt(column.width.toString(), 10);\n        }\n    }\n}\n/**\n * @param {Element} row - Defines row element\n * @param {IGrid} gridObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nfunction ensureLastRow(row, gridObj) {\n    var content = gridObj.getContent().firstElementChild;\n    return row && (row.getBoundingClientRect().top - content.getBoundingClientRect().top +\n        gridObj.getRowHeight()) > content.offsetHeight;\n}\n/**\n * @param {Element} row - Defines row element\n * @param {number} rowTop - Defines row top number\n * @returns {boolean} Returns first row is true\n * @hidden\n */\nfunction ensureFirstRow(row, rowTop) {\n    return row && row.getBoundingClientRect().top < rowTop;\n}\n/**\n * @param {number} index - Defines index\n * @param {IGrid} gObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nfunction isRowEnteredInGrid(index, gObj) {\n    var rowHeight = gObj.getRowHeight();\n    var startIndex = gObj.getContent().firstElementChild.scrollTop / rowHeight;\n    var endIndex = startIndex + (gObj.getContent().firstElementChild.offsetHeight / rowHeight);\n    return index < endIndex && index > startIndex;\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} data - Defines the query\n * @returns {number} Returns the edited data index\n * @hidden\n */\nfunction getEditedDataIndex(gObj, data) {\n    var keyField = gObj.getPrimaryKeyFieldNames()[0];\n    var dataIndex;\n    gObj.getCurrentViewRecords().filter(function (e, index) {\n        if (keyField.includes('.')) {\n            var currentValue = getObject(keyField, e);\n            var originalValue = getObject(keyField, data);\n            if (currentValue === originalValue) {\n                dataIndex = index;\n            }\n        }\n        else {\n            if (e[\"\" + keyField] === data[\"\" + keyField]) {\n                dataIndex = index;\n            }\n        }\n    });\n    return dataIndex;\n}\n/**\n * @param {Object} args - Defines the argument\n * @param {Query} query - Defines the query\n * @returns {FilterStateObj} Returns the filter state object\n * @hidden\n */\nfunction eventPromise(args, query) {\n    var state = getStateEventArgument(query);\n    var def = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_6__.Deferred();\n    state.dataSource = def.resolve;\n    state.action = args;\n    return { state: state, deffered: def };\n}\n/**\n * @param {Query} query - Defines the query\n * @returns {Object} Returns the state event argument\n * @hidden\n */\nfunction getStateEventArgument(query) {\n    var adaptr = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_8__.UrlAdaptor();\n    var dm = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_6__.DataManager({ url: '', adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_8__.UrlAdaptor });\n    var state = adaptr.processQuery(dm, query);\n    var data = JSON.parse(state.data);\n    return data;\n}\n/**\n * @param {IGrid} gObj - Defines the Igrid\n * @returns {boolean} Returns the ispercentageWidth\n * @hidden\n */\nfunction ispercentageWidth(gObj) {\n    var columns = gObj.getVisibleColumns();\n    var percentageCol = 0;\n    var undefinedWidthCol = 0;\n    for (var i = 0; i < columns.length; i++) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(columns[parseInt(i.toString(), 10)].width)) {\n            undefinedWidthCol++;\n        }\n        else if (columns[parseInt(i.toString(), 10)].width.toString().indexOf('%') !== -1) {\n            percentageCol++;\n        }\n    }\n    return (gObj.width === 'auto' || typeof (gObj.width) === 'string' && gObj.width.indexOf('%') !== -1) &&\n        !gObj.groupSettings.showGroupedColumn && gObj.groupSettings.columns.length\n        && percentageCol && !undefinedWidthCol;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {Row<Column>[]} rows - Defines the row\n * @param {HTMLTableRowElement[]} rowElms - Row elements\n * @param {number} index - Row index\n * @param {number} startRowIndex - Start Row Index\n * @returns {void}\n * @hidden\n */\nfunction resetRowIndex(gObj, rows, rowElms, index, startRowIndex) {\n    var startIndex = index ? index : 0;\n    for (var i = startRowIndex ? startRowIndex : 0; i < rows.length; i++) {\n        if (rows[parseInt(i.toString(), 10)] && rows[parseInt(i.toString(), 10)].isDataRow) {\n            rows[parseInt(i.toString(), 10)].index = startIndex;\n            rows[parseInt(i.toString(), 10)].isAltRow = gObj.enableAltRow ? startIndex % 2 !== 0 : false;\n            rowElms[parseInt(i.toString(), 10)].setAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.ariaRowIndex, (startIndex + 1).toString());\n            if (rows[parseInt(i.toString(), 10)].isAltRow) {\n                rowElms[parseInt(i.toString(), 10)].classList.add('e-altrow');\n            }\n            else {\n                rowElms[parseInt(i.toString(), 10)].classList.remove('e-altrow');\n            }\n            for (var j = 0; j < rowElms[parseInt(i.toString(), 10)].cells.length; j++) {\n                rowElms[parseInt(i.toString(), 10)].cells[parseInt(j.toString(), 10)].setAttribute('index', startIndex.toString());\n            }\n            startIndex++;\n        }\n    }\n    if (!rows.length) {\n        gObj.renderModule.emptyRow(true);\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @returns {void}\n * @hidden\n */\nfunction resetCachedRowIndex(gObj) {\n    var rowObjects = gObj.enableInfiniteScrolling && gObj.infiniteScrollSettings.enableCache ?\n        gObj.getRowsObject() : gObj.vRows;\n    var rowElements = gObj.getRows();\n    for (var i = 0, startIndex = 0, k = 0; i < rowObjects.length; i++) {\n        var rowObject = rowObjects[parseInt(i.toString(), 10)];\n        if (rowObject.isDataRow) {\n            rowObject.index = startIndex;\n            rowObject.isAltRow = gObj.enableAltRow ? startIndex % 2 !== 0 : false;\n            var rowElement = gObj.getRowElementByUID(rowObject.uid);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowElement)) {\n                rowElements[parseInt(k.toString(), 10)] = rowElement;\n                rowElement.setAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.ariaRowIndex, (startIndex + 1).toString());\n                if (rowObject.isAltRow) {\n                    rowElement.classList.add('e-altrow');\n                }\n                else {\n                    rowElement.classList.remove('e-altrow');\n                }\n                for (var j = 0; j < rowElement.cells.length; j++) {\n                    rowElement.cells[parseInt(j.toString(), 10)].setAttribute('index', startIndex.toString());\n                }\n                k++;\n            }\n            startIndex++;\n        }\n    }\n    if (gObj.enableInfiniteScrolling && gObj.infiniteScrollSettings.enableCache) {\n        gObj.infiniteScrollModule.resetInfiniteCache(rowObjects);\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {RowDropEventArgs} args - Defines the row drop event argument\n * @param {HTMLTableRowElement[]} tr - Row elements\n * @param {Row<Column>} dropRObj - dropped row object\n * @returns {void}\n * @hidden\n */\nfunction groupReorderRowObject(gObj, args, tr, dropRObj) {\n    var rowObjects = gObj.enableVirtualization ? gObj.vRows : gObj.getRowsObject();\n    var orderChangeRowObjects = [];\n    var dropRowObject = dropRObj ? dropRObj :\n        gObj.getRowObjectFromUID(args.target.closest('tr').getAttribute('data-uid'));\n    var rowObjectDropIndex;\n    for (var i = 0; i < args.rows.length; i++) {\n        var orderChangeRowObject = gObj.getRowObjectFromUID(args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n        if (dropRowObject === orderChangeRowObject) {\n            rowObjectDropIndex = rowObjects.indexOf(dropRowObject);\n        }\n        orderChangeRowObjects.push(rowObjects.splice(rowObjects.indexOf(orderChangeRowObject), 1)[0]);\n    }\n    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rowObjectDropIndex)) {\n        rowObjectDropIndex = rowObjects.indexOf(dropRowObject);\n        if (args.fromIndex > args.dropIndex) {\n            rowObjects.splice.apply(rowObjects, [rowObjectDropIndex, 0].concat(orderChangeRowObjects));\n        }\n        else {\n            rowObjects.splice.apply(rowObjects, [rowObjectDropIndex + 1, 0].concat(orderChangeRowObjects));\n        }\n    }\n    else {\n        rowObjects.splice.apply(rowObjects, [rowObjectDropIndex, 0].concat(orderChangeRowObjects));\n    }\n    if (!gObj.enableVirtualization && !gObj.infiniteScrollSettings.enableCache) {\n        var record = {};\n        var currentViewData = gObj.getCurrentViewRecords();\n        for (var i = 0, len = tr.length; i < len; i++) {\n            var index = parseInt(tr[parseInt(i.toString(), 10)].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.ariaRowIndex), 10) - 1;\n            record[parseInt(i.toString(), 10)] = currentViewData[parseInt(index.toString(), 10)];\n        }\n        var rows = gObj.getRows();\n        for (var i = 0, len = tr.length; i < len; i++) {\n            rows[parseInt(i.toString(), 10)] = tr[parseInt(i.toString(), 10)];\n            currentViewData[parseInt(i.toString(), 10)] = record[parseInt(i.toString(), 10)];\n        }\n    }\n    if (gObj.enableInfiniteScrolling && gObj.infiniteScrollSettings.enableCache) {\n        gObj.infiniteScrollModule.resetInfiniteCache(rowObjects);\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} changes - Defines the changes\n * @param {string} type - Defines the type\n * @param {string} keyField - Defines the keyfield\n * @returns {void}\n * @hidden\n */\nfunction compareChanges(gObj, changes, type, keyField) {\n    var newArray = gObj.dataToBeUpdated[\"\" + type].concat(changes[\"\" + type]).reduce(function (r, o) {\n        r[o[\"\" + keyField]] = r[o[\"\" + keyField]] === undefined ? o : Object.assign(r[o[\"\" + keyField]], o);\n        return r;\n    }, {});\n    gObj.dataToBeUpdated[\"\" + type] = Object.keys(newArray).map(function (k) { return newArray[\"\" + k]; });\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nfunction setRowElements(gObj) {\n    if (gObj.enableInfiniteScrolling && (gObj.childGrid || gObj.detailTemplate)) {\n        (gObj).contentModule.rowElements = [].slice.call(gObj.getContentTable().rows)\n            .filter(function (row) { return (row.classList.contains('e-row') || row.classList.contains('e-detailrow'))\n            && !row.classList.contains('e-addedrow'); });\n        return;\n    }\n    (gObj).contentModule.rowElements =\n        [].slice.call(gObj.element.querySelectorAll('.e-row:not(.e-addedrow):not(.e-cloneproperties .e-row)'));\n}\n/**\n * @param {Element} row - Defines the row\n * @param {number} start - Defines the start index\n * @param {number} end - Defines the end index\n * @returns {void}\n * @hidden\n */\nfunction sliceElements(row, start, end) {\n    var cells = row.children;\n    var len = cells.length;\n    var k = 0;\n    for (var i = 0; i < len; i++, k++) {\n        if (i >= start && i < end) {\n            continue;\n        }\n        row.removeChild(row.children[parseInt(k.toString(), 10)]);\n        k--;\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @param {Dialog} dlgObj - Defines the dialog\n * @returns {void}\n * @hidden\n */\nfunction resetDialogAppend(gObj, dlgObj) {\n    var element = gObj.createElement('div', { className: 'e-grid-popup', id: gObj.element.id + '_e-popup' });\n    var pos = (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_4__.calculatePosition)(gObj.element, 'left', 'Top');\n    if (document.getElementById(gObj.element.id + '_e-popup')) {\n        element = document.getElementById(gObj.element.id + '_e-popup');\n    }\n    element.style.top = pos.top + 'px';\n    element.style.left = pos.left + 'px';\n    element.style.zIndex = (dlgObj.zIndex).toString();\n    element.style.width = dlgObj.element.offsetWidth + 'px';\n    element.appendChild(dlgObj.element);\n    var sbPanel = parentsUntil(gObj.element, 'sb-demo-section') || parentsUntil(gObj.element, 'e-grid-dialog-fixed');\n    if (sbPanel) {\n        var sbPos = (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_4__.calculateRelativeBasedPosition)(gObj.element, sbPanel);\n        element.style.top = sbPos.top + 'px';\n        element.style.left = sbPos.left + 'px';\n        sbPanel.insertBefore(element, sbPanel.firstChild);\n    }\n    else {\n        document.body.insertBefore(element, document.body.firstChild);\n    }\n}\n/**\n * @param {Column} column - Defines the column\n * @param {string} uid - Defines the uid\n * @returns {boolean} Returns is child column\n * @hidden\n */\nfunction isChildColumn(column, uid) {\n    var uids = [];\n    uids.push(column.uid);\n    pushuid(column, uids);\n    if (uids.indexOf(uid) > -1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/**\n * @param {Column} column - Defines the column\n * @param {string[]} uids - Defines the uid\n * @returns {void}\n * @hidden\n */\nfunction pushuid(column, uids) {\n    for (var i = 0; i < column.columns.length; i++) {\n        if (column.columns[parseInt(i.toString(), 10)].uid) {\n            uids.push(column.columns[parseInt(i.toString(), 10)].uid);\n        }\n        if (column.columns[parseInt(i.toString(), 10)].columns &&\n            column.columns[parseInt(i.toString(), 10)].columns.length) {\n            pushuid(column.columns[parseInt(i.toString(), 10)], uids);\n        }\n    }\n}\n/**\n * @param {Column} column - Defines the column\n * @returns {string} Returns the direction\n * @hidden\n */\nfunction frozenDirection(column) {\n    if (column.columns[0].freeze || column.columns[0].isFrozen) {\n        if (column.columns[0].freeze === 'Left' || column.columns[0].isFrozen) {\n            return 'Left';\n        }\n        else if (column.columns[0].freeze === 'Right') {\n            return 'Right';\n        }\n        else if (column.columns[0].freeze === 'Fixed') {\n            return 'Fixed';\n        }\n        else {\n            return 'None';\n        }\n    }\n    else {\n        if (column.columns[0].columns && column.columns[0].columns.length) {\n            return frozenDirection(column.columns[0]);\n        }\n        else {\n            return 'None';\n        }\n    }\n}\n/**\n * @param {Element} row - Defines the row\n * @returns {void}\n * @hidden\n */\nfunction addFixedColumnBorder(row) {\n    if (row.querySelector('.e-fixedfreeze')) {\n        var cells = [].slice.call(row.querySelectorAll('.e-filterbarcell:not(.e-hide),.e-summarycell:not(.e-hide),.e-headercell:not(.e-hide),.e-rowcell:not(.e-hide)'));\n        for (var j = 0; j < cells.length; j++) {\n            if (cells[parseInt(j.toString(), 10)].classList.contains('e-fixedfreeze') && (!(cells[j - 1]) ||\n                (cells[j - 1] && !cells[j - 1].classList.contains('e-fixedfreeze')))) {\n                cells[parseInt(j.toString(), 10)].classList.add('e-freezeleftborder');\n            }\n            if (cells[parseInt(j.toString(), 10)].classList.contains('e-fixedfreeze') && (!(cells[j + 1]) ||\n                (cells[j + 1] && !cells[j + 1].classList.contains('e-fixedfreeze')))) {\n                cells[parseInt(j.toString(), 10)].classList.add('e-freezerightborder');\n            }\n        }\n    }\n}\n/**\n * @param {HTMLElement} node - Defines the row\n * @param {number} width - Defines the width\n * @param {boolean} isRtl - Boolean property\n * @param {string} position - Defines the position\n * @returns {void}\n * @hidden\n */\nfunction applyStickyLeftRightPosition(node, width, isRtl, position) {\n    if (position === 'Left') {\n        if (isRtl) {\n            node.style.right = width + 'px';\n        }\n        else {\n            node.style.left = width + 'px';\n        }\n    }\n    if (position === 'Right') {\n        if (isRtl) {\n            node.style.left = width + 'px';\n        }\n        else {\n            node.style.right = width + 'px';\n        }\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @param {Column} column - Defines the column\n * @param {Element} node - Defines the Element\n * @param {number} colSpan - Defines the colSpan value\n * @returns {void}\n * @hidden\n */\nfunction resetColandRowSpanStickyPosition(gObj, column, node, colSpan) {\n    var columns = gObj.getColumns();\n    var index = column.index;\n    if (column.freeze === 'Left' && column.border !== 'Left') {\n        var idx = index + (colSpan - 1);\n        while (columns[parseInt(idx.toString(), 10)].visible === false) {\n            idx++;\n        }\n        if (columns[parseInt(idx.toString(), 10)].border === 'Left') {\n            node.classList.add('e-freezeleftborder');\n        }\n    }\n    else if (column.freeze === 'Right' || column.freeze === 'Fixed') {\n        var width = 0;\n        for (var j = index + 1; j < index + colSpan; j++) {\n            if (j === columns.length) {\n                break;\n            }\n            if (columns[parseInt(j.toString(), 10)].visible) {\n                width += parseInt(columns[parseInt(j.toString(), 10)].width.toString(), 10);\n            }\n            else {\n                colSpan++;\n            }\n        }\n        if (gObj.enableRtl) {\n            node.style.left = parseInt(node.style.left, 10) - width + 'px';\n        }\n        else {\n            node.style.right = parseInt(node.style.right, 10) - width + 'px';\n        }\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @param {number} rowIndex - Defines the row index\n * @param {number} colIndex - Defines the colum index\n * @returns {void}\n * @hidden\n */\nfunction getCellFromRow(gObj, rowIndex, colIndex) {\n    var row = (gObj.getRowByIndex(rowIndex));\n    for (var i = 0; i < row.cells.length; i++) {\n        if (parseInt(row.cells[parseInt(i.toString(), 10)].getAttribute('aria-colindex').toString(), 10) - 1 === colIndex) {\n            return row.cells[parseInt(i.toString(), 10)];\n        }\n    }\n    return null;\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @param {Column} column - Defines the column\n * @param {Element} node - Defines the Element\n * @returns {void}\n * @hidden\n */\nfunction addStickyColumnPosition(gObj, column, node) {\n    if (column.freeze === 'Left' || column.isFrozen) {\n        node.classList.add('e-leftfreeze');\n        if (column.border === 'Left') {\n            node.classList.add('e-freezeleftborder');\n        }\n        if (column.index === 0) {\n            applyStickyLeftRightPosition(node, (gObj.getIndentCount() * 30), gObj.enableRtl, 'Left');\n            if (gObj.enableColumnVirtualization) {\n                column.valueX = (gObj.getIndentCount() * 30);\n            }\n        }\n        else {\n            var cols = gObj.getColumns();\n            var width = gObj.getIndentCount() * 30;\n            for (var i = 0; i < cols.length; i++) {\n                if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n                    break;\n                }\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n            applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Left');\n            if (gObj.enableColumnVirtualization) {\n                column.valueX = width;\n            }\n        }\n    }\n    else if (column.freeze === 'Right') {\n        node.classList.add('e-rightfreeze');\n        var cols = gObj.getColumns();\n        if (column.border === 'Right') {\n            node.classList.add('e-freezerightborder');\n        }\n        if (column.index === cols[cols.length - 1].index) {\n            var width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n            applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Right');\n            if (gObj.enableColumnVirtualization) {\n                column.valueX = width;\n            }\n        }\n        else {\n            var width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n            for (var i = cols.length - 1; i >= 0; i--) {\n                if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n                    break;\n                }\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n            applyStickyLeftRightPosition(node, width, gObj.enableRtl, 'Right');\n            if (gObj.enableColumnVirtualization) {\n                column.valueX = width;\n            }\n        }\n    }\n    else if (column.freeze === 'Fixed') {\n        node.classList.add('e-fixedfreeze');\n        var cols = gObj.getColumns();\n        var width = 0;\n        if (gObj.getVisibleFrozenLeftCount()) {\n            width = gObj.getIndentCount() * 30;\n        }\n        else if (gObj.getFrozenMode() === 'Right') {\n            width = gObj.groupSettings.columns.length * 30;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n                break;\n            }\n            if ((cols[parseInt(i.toString(), 10)].freeze === 'Left' || cols[parseInt(i.toString(), 10)].isFrozen) ||\n                cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n        }\n        applyStickyLeftRightPosition(node, (width - 1), gObj.enableRtl, 'Left');\n        width = gObj.getFrozenMode() === 'Right' && gObj.isRowDragable() ? 30 : 0;\n        for (var i = cols.length - 1; i >= 0; i--) {\n            if (column.uid === cols[parseInt(i.toString(), 10)].uid) {\n                break;\n            }\n            if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n        }\n        applyStickyLeftRightPosition(node, (width - 1), gObj.enableRtl, 'Right');\n    }\n    else {\n        node.classList.add('e-unfreeze');\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid Object\n * @param {Column} col - Defines the column\n * @param {number} rowIndex - Defines the rowindex\n * @returns {Element} Returns the element\n * @hidden\n */\nfunction getCellsByTableName(gObj, col, rowIndex) {\n    return [].slice.call(gObj.getDataRows()[parseInt(rowIndex.toString(), 10)].getElementsByClassName(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.rowCell));\n}\n/**\n * @param {IGrid} gObj - Defines the column\n * @param {Column} col - Defines the index\n * @param {number} rowIndex - Defines the rules\n * @param {number} index - Defines the movable column rules\n * @returns {Element} Returns the Element\n * @hidden\n */\nfunction getCellByColAndRowIndex(gObj, col, rowIndex, index) {\n    return getCellsByTableName(gObj, col, rowIndex)[parseInt(index.toString(), 10)];\n}\n/**\n * @param {Column} col - Defines the column\n * @param {number} index - Defines the index\n * @param {Object} rules - Defines the rules\n * @param {Object} mRules - Defines the movable column rules\n * @param {Object} frRules - Defines the Frozen rules\n * @param {number} len - Defines the length\n * @param {boolean} isCustom - Defines custom form validation\n * @returns {void}\n * @hidden\n */\nfunction setValidationRuels(col, index, rules, mRules, frRules, len, isCustom) {\n    if (isCustom) {\n        rules[getComplexFieldID(col.field)] = col.validationRules;\n    }\n    else {\n        if (col.getFreezeTableName() === _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.frozenLeft\n            || (!index && col.getFreezeTableName() === _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.frozenRight) || len === 1) {\n            rules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n        else if (col.getFreezeTableName() === 'movable' || !col.getFreezeTableName()) {\n            mRules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n        else if (col.getFreezeTableName() === _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.frozenRight) {\n            frRules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n    }\n}\n/**\n * @param {string} numberFormat - Format\n * @param {string} type - Value type\n * @param {boolean} isExcel - Boolean property\n * @param {string} currencyCode - Specifies the currency code to be used for formatting.\n * @returns {string} returns formated value\n * @hidden\n */\nfunction getNumberFormat(numberFormat, type, isExcel, currencyCode) {\n    var format;\n    var intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n    if (type === 'number') {\n        try {\n            format = intl.getNumberPattern({ format: numberFormat, currency: currencyCode, useGrouping: true }, true);\n        }\n        catch (error) {\n            format = numberFormat;\n        }\n    }\n    else if (type === 'date' || type === 'time' || type === 'datetime') {\n        try {\n            format = intl.getDatePattern({ skeleton: numberFormat, type: type }, isExcel);\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format)) {\n                // eslint-disable-next-line\n                throw 'error';\n            }\n        }\n        catch (error) {\n            try {\n                format = intl.getDatePattern({ format: numberFormat, type: type }, isExcel);\n            }\n            catch (error) {\n                format = numberFormat;\n            }\n        }\n    }\n    else {\n        format = numberFormat;\n    }\n    if (type !== 'number') {\n        var patternRegex = /G|H|c|'| a|yy|y|EEEE|E/g;\n        var mtch_1 = { 'G': '', 'H': 'h', 'c': 'd', '\\'': '\"', ' a': ' AM/PM', 'yy': 'yy', 'y': 'yyyy', 'EEEE': 'dddd', 'E': 'ddd' };\n        format = format.replace(patternRegex, function (pattern) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return mtch_1[\"\" + pattern];\n        });\n    }\n    return format;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @returns {void}\n * @hidden\n */\nfunction addBiggerDialog(gObj) {\n    if (gObj.enableAdaptiveUI) {\n        var dialogs = document.getElementsByClassName('e-responsive-dialog');\n        for (var i = 0; i < dialogs.length; i++) {\n            dialogs[parseInt(i.toString(), 10)].classList.add('e-bigger');\n        }\n    }\n}\n/**\n * @param {string} value - specifies the trr\n * @param {Object} mapObject - specifies the idx\n * @returns {Object | string} returns object or string\n * @hidden\n */\nfunction performComplexDataOperation(value, mapObject) {\n    var returnObj;\n    var length = value.split('.').length;\n    var splits = value.split('.');\n    var duplicateMap = mapObject;\n    for (var i = 0; i < length; i++) {\n        returnObj = duplicateMap[splits[parseInt(i.toString(), 10)]];\n        duplicateMap = returnObj;\n    }\n    return returnObj;\n}\n/**\n * @param {Object} tr - specifies the trr\n * @param {number} idx - specifies the idx\n * @param {string} displayVal - specifies the displayval\n * @param {Row<Column>} rows - specifies the rows\n * @param {IGrid} parent - Grid instance\n * @param {boolean} isContent - check for content renderer\n * @returns {void}\n * @hidden\n */\nfunction setDisplayValue(tr, idx, displayVal, rows, parent, isContent) {\n    var trs = Object.keys(tr);\n    var actualIndex = idx;\n    for (var i = 0; i < trs.length; i++) {\n        var td = tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)];\n        if (parent && !parent.isFrozenGrid() && !parent.isRowDragable()) {\n            td = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(td) && (parseInt(td.getAttribute('aria-colindex'), 10) - 1 === idx ||\n                (parentsUntil(td, 'e-addedrow') && td.parentElement.childNodes[parseInt(idx.toString(), 10)] === td)))\n                ? td : tr[parseInt(i.toString(), 10)].querySelector(\"td[aria-colindex=\\\"\" + (idx + 1) + \"\\\"]\");\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(td)) {\n                continue;\n            }\n            else {\n                idx = (parent.getContentTable().querySelector('.e-detailrowcollapse, .e-detailrowexpand')) ?\n                    (td.cellIndex - 1) : td.cellIndex;\n            }\n        }\n        if (tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell').length && td) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)], { 'display': displayVal });\n            if (tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)].classList.contains('e-hide')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)]], ['e-hide']);\n            }\n            if ((isContent && parent.isRowDragable()) || (parent && parent.isDetail())) {\n                var index = idx + 1;\n                rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(index.toString(), 10)].visible = displayVal === '' ? true : false;\n            }\n            else {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(rows[trs[parseInt(i.toString(), 10)]])) {\n                    rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(idx.toString(), 10)].visible = displayVal === '' ? true : false;\n                    if (rows[trs[parseInt(i.toString(), 10)]].cells[parseInt(idx.toString(), 10)].visible === false) {\n                        tr[trs[parseInt(i.toString(), 10)]].querySelectorAll('td.e-rowcell')[parseInt(idx.toString(), 10)].classList.add('e-hide');\n                    }\n                }\n            }\n            idx = actualIndex;\n        }\n    }\n}\n// eslint-disable-next-line\n/** @hidden */\nfunction addRemoveEventListener(parent, evt, isOn, module) {\n    for (var _i = 0, evt_1 = evt; _i < evt_1.length; _i++) {\n        var inst = evt_1[_i];\n        if (isOn) {\n            parent.on(inst.event, inst.handler, module);\n        }\n        else {\n            parent.off(inst.event, inst.handler);\n        }\n    }\n}\n// eslint-disable-next-line\n/** @hidden */\nfunction createEditElement(parent, column, classNames, attr) {\n    var complexFieldName = getComplexFieldID(column.field);\n    attr = Object.assign(attr, {\n        id: parent.element.id + complexFieldName,\n        name: complexFieldName, 'e-mappinguid': column.uid\n    });\n    return parent.createElement('input', {\n        className: classNames, attrs: attr\n    });\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} uid - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nfunction getColumnModelByUid(gObj, uid) {\n    var column;\n    for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n        var col = _a[_i];\n        if (col.uid === uid) {\n            column = col;\n            break;\n        }\n    }\n    return column;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} field - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nfunction getColumnModelByFieldName(gObj, field) {\n    var column;\n    if (!gObj.columnModel) {\n        gObj.getColumns();\n    }\n    for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n        var col = _a[_i];\n        if (col.field === field) {\n            column = col;\n            break;\n        }\n    }\n    return column;\n}\n/**\n * @param {string} id - Defines component id\n * @param {string[]} evts - Defines events\n * @param {object} handlers - Defines event handlers\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nfunction registerEventHandlers(id, evts, handlers, instance) {\n    instance.eventHandlers[\"\" + id] = {};\n    for (var i = 0; i < evts.length; i++) {\n        instance.eventHandlers[\"\" + id][evts[parseInt(i.toString(), 10)]] = handlers[evts[parseInt(i.toString(), 10)]];\n    }\n}\n/**\n * @param {any} component - Defines component instance\n * @param {string[]} evts - Defines events\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nfunction removeEventHandlers(component, evts, instance) {\n    for (var i = 0; i < evts.length; i++) {\n        if (component.isDestroyed) {\n            break;\n        }\n        component.removeEventListener(evts[parseInt(i.toString(), 10)], instance.eventHandlers[component.element.id][evts[parseInt(i.toString(), 10)]]);\n    }\n}\n/**\n * @param {IGrid | IXLFilter} parent - Defines parent instance\n * @param {string[]} templates - Defines the templates name which are needs to clear\n * @returns {void}\n * @hidden\n */\nfunction clearReactVueTemplates(parent, templates) {\n    parent.destroyTemplate(templates);\n    if (parent.isReact) {\n        parent.renderTemplates();\n    }\n}\n/**\n *\n * @param { HTMLElement[] } removeElem - Defines checkbox wrapper element\n * @returns {void}\n * @hidden\n */\nfunction infiniteRemoveElements(removeElem) {\n    for (var i = 0; i < removeElem.length; i++) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(removeElem[i]);\n    }\n}\n/**\n *\n * @param { HTMLElement[] } appendElem - Defines checkbox wrapper element\n * @param { HTMLElement } ulElement - Defines ul element\n * @returns {void}\n * @hidden\n */\nfunction infiniteAppendElements(appendElem, ulElement) {\n    for (var i = 0; i < appendElem.length; i++) {\n        ulElement.insertBefore(appendElem[i], ulElement.children[i]);\n    }\n}\n/**\n *\n * @param { HTMLElement } element - Defines checkbox wrapper element\n * @param { boolean } isChooser - Defines checkbox filter column chooser\n * @returns { number } list height value\n * @hidden\n */\nfunction getListHeight(element, isChooser) {\n    var listDiv = isChooser ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('li', { className: 'e-cclist' })\n        : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-ftrchk' });\n    listDiv.style.visibility = 'hidden';\n    if (isChooser) {\n        listDiv.style.listStyle = 'none';\n    }\n    listDiv.innerHTML = isChooser ? '<div class=\"e-ccheck\"><div class=\"e-checkbox-wrapper\"><span class=\"e-frame e-icons e-check\"></span><span class=\"e-label\">A</span></div></div>' :\n        '<div class=\"e-checkbox-wrapper\"><span class=\"e-frame e-icons e-check\"></span><span class=\"e-label e-checkboxfiltertext\">A</div></span>';\n    element.appendChild(listDiv);\n    var rect = listDiv.getBoundingClientRect();\n    element.removeChild(listDiv);\n    var listHeight = Math.round(rect.height);\n    return listHeight;\n}\n/**\n *\n * @param { Element } row - Defines row element\n * @returns { number } row index\n */\nfunction getRowIndexFromElement(row) {\n    return parseInt(row.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.ariaRowIndex), 10) - 1;\n}\n/**\n *\n * @param { IGrid } grid - Defines grid instance\n * @returns { IGrid } returns parent grid instance\n */\nfunction getParentIns(grid) {\n    return grid.parentDetails && grid.parentDetails.parentInstObj ?\n        getParentIns(grid.parentDetails.parentInstObj) : grid;\n}\n/**\n *\n * @param { string[] } fields - Defines grouped fields\n * @param { values } values - Defines caption keys\n * @param { any } instance - Defines dynamic class instance\n * @returns { Predicate } returns filter predicate\n */\n// eslint-disable-next-line\nfunction generateExpandPredicates(fields, values, instance) {\n    var filterCols = [];\n    for (var i = 0; i < fields.length; i++) {\n        var column = instance.parent.getColumnByField(fields[parseInt(i.toString(), 10)]);\n        var value = values[parseInt(i.toString(), 10)] === 'null' ? null : values[parseInt(i.toString(), 10)];\n        var pred = {\n            field: fields[parseInt(i.toString(), 10)], predicate: 'or', uid: column.uid, operator: 'equal', type: column.type,\n            matchCase: instance.allowCaseSensitive, ignoreAccent: instance.parent.filterSettings.ignoreAccent\n        };\n        if (value === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n            filterCols = filterCols.concat(_common_checkbox_filter_base__WEBPACK_IMPORTED_MODULE_9__.CheckBoxFilterBase.generateNullValuePredicates(pred));\n        }\n        else {\n            filterCols.push(extend({}, { value: value }, pred));\n        }\n    }\n    return _common_checkbox_filter_base__WEBPACK_IMPORTED_MODULE_9__.CheckBoxFilterBase.getPredicate(filterCols);\n}\n/**\n *\n * @param { Predicate } pred - Defines filter predicate\n * @returns { Predicate[] } Returns formed predicate\n */\nfunction getPredicates(pred) {\n    var predicateList = [];\n    for (var _i = 0, _a = Object.keys(pred); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        predicateList.push(pred[\"\" + prop]);\n    }\n    return predicateList;\n}\n/**\n *\n * @param { number } index - Defines group caption indent\n * @param { Row<Column>[] } rowsObject - Defines rows object\n * @returns { { fields: string[], keys: string[] } } Returns grouped keys and values\n */\nfunction getGroupKeysAndFields(index, rowsObject) {\n    var fields = [];\n    var keys = [];\n    for (var i = index; i >= 0; i--) {\n        if (rowsObject[parseInt(i.toString(), 10)].isCaptionRow\n            && fields.indexOf(rowsObject[parseInt(i.toString(), 10)].data.field) === -1\n            && (rowsObject[parseInt(i.toString(), 10)].indent < rowsObject[parseInt(index.toString(), 10)].indent || i === index)) {\n            fields.push(rowsObject[parseInt(i.toString(), 10)].data.field);\n            keys.push(rowsObject[parseInt(i.toString(), 10)].data.key);\n            if (rowsObject[parseInt(i.toString(), 10)].indent === 0) {\n                break;\n            }\n        }\n    }\n    return { fields: fields, keys: keys };\n}\n// eslint-disable-next-line\n/**\n *\n * @param { number[][] } checkActiveMatrix - Defines matrix to check\n * @param { number[] } checkCellIndex - Defines index to check\n * @param { boolean } next - Defines select next or previous index\n * @returns { number[] } - Returns next active current index\n */\nfunction findCellIndex(checkActiveMatrix, checkCellIndex, next) {\n    var activeMatrix = checkActiveMatrix;\n    var cellIndex = checkCellIndex;\n    var currentCellIndexPass = false;\n    if (next) {\n        for (var i = cellIndex[0]; i < activeMatrix.length; i++) {\n            var rowCell = activeMatrix[parseInt(i.toString(), 10)];\n            for (var j = 0; j < rowCell.length; j++) {\n                if (currentCellIndexPass && activeMatrix[parseInt(i.toString(), 10)][parseInt(j.toString(), 10)] === 1) {\n                    cellIndex = [i, j];\n                    return cellIndex;\n                }\n                if (!currentCellIndexPass && cellIndex.toString() === [i, j].toString()) {\n                    currentCellIndexPass = true;\n                }\n            }\n        }\n    }\n    else {\n        for (var i = cellIndex[0]; i >= 0; i--) {\n            var rowCell = activeMatrix[parseInt(i.toString(), 10)];\n            for (var j = rowCell.length - 1; j >= 0; j--) {\n                if (currentCellIndexPass && activeMatrix[parseInt(i.toString(), 10)][parseInt(j.toString(), 10)] === 1) {\n                    cellIndex = [i, j];\n                    return cellIndex;\n                }\n                if (!currentCellIndexPass && cellIndex.toString() === [i, j].toString()) {\n                    currentCellIndexPass = true;\n                }\n            }\n        }\n    }\n    return cellIndex;\n}\n/**\n *\n * @param { string } string - Defines string need to capitalized first letter\n * @returns { string } - Returns capitalized first letter string\n */\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n *\n * @param { IGrid } grid - Defines parent instance\n * @returns { boolean } - Returns is virtual\n */\nfunction checkIsVirtual(grid) {\n    return !(isGroupAdaptive(grid) || grid.groupSettings.enableLazyLoading\n        || (!grid.enableVirtualization && grid.enableColumnVirtualization));\n}\n/**\n *\n * @param { number[] } blockes - Defines block indexes\n * @returns { number[] } - Returns is visible page\n */\nfunction getVisiblePage(blockes) {\n    var visiblePage = [];\n    for (var i = 0; i < blockes.length; i++) {\n        var page = Math.ceil(blockes[parseInt(i.toString(), 10)] / 2);\n        if (visiblePage.indexOf(page) === -1) {\n            visiblePage.push(page);\n        }\n    }\n    return visiblePage;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/common/checkbox-filter-base.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/common/checkbox-filter-base.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CheckBoxFilterBase: () => (/* binding */ CheckBoxFilterBase)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/query.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/manager.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/util.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-buttons@29.1.34/node_modules/@syncfusion/ej2-buttons/src/common/common.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _services_value_formatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/value-formatter */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-popups@29.1.37/node_modules/@syncfusion/ej2-popups/src/dialog/dialog.js\");\n/* harmony import */ var _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-inputs */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-inputs@29.1.39/node_modules/@syncfusion/ej2-inputs/src/input/input.js\");\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-popups@29.1.37/node_modules/@syncfusion/ej2-popups/src/spinner/spinner.js\");\n/* tslint:disable-next-line:max-line-length */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @hidden\n * `CheckBoxFilterBase` module is used to handle filtering action.\n */\nvar CheckBoxFilterBase = /** @class */ (function () {\n    /**\n     * Constructor for checkbox filtering module\n     *\n     * @param {IXLFilter} parent - specifies the IXLFilter\n     * @hidden\n     */\n    function CheckBoxFilterBase(parent) {\n        this.searchInputArgs = null;\n        this.isExecuteLocal = false;\n        this.queryFilteredColumn = [];\n        this.existingPredicate = {};\n        this.foreignKeyQuery = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query();\n        /** @hidden */\n        this.filterState = true;\n        this.values = {};\n        this.renderEmpty = false;\n        this.isCheckboxFilterTemplate = false;\n        this.infiniteRenderMod = false;\n        // for infinite scroll ui\n        this.infiniteInitialLoad = false;\n        this.infiniteSearchValChange = false;\n        this.infinitePermenantLocalData = [];\n        this.infiniteQueryExecutionPending = false;\n        this.infiniteSkipCnt = 0;\n        this.infiniteScrollAppendDiff = 0;\n        this.prevInfiniteScrollDirection = '';\n        this.infiniteLoadedElem = [];\n        this.infiniteDataCount = 0;\n        this.infiniteLocalSelectAll = true;\n        this.localInfiniteSelectAllClicked = false;\n        this.localInfiniteSelectionInteracted = false;\n        this.infiniteManualSelectMaintainPred = [];\n        this.parent = parent;\n        this.id = this.parent.element.id;\n        this.valueFormatter = new _services_value_formatter__WEBPACK_IMPORTED_MODULE_2__.ValueFormatter(this.parent.locale);\n        this.cBoxTrue = (0,_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.createCheckBox)(this.parent.createElement, false, { checked: true, label: ' ' });\n        this.cBoxFalse = (0,_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_3__.createCheckBox)(this.parent.createElement, false, { checked: false, label: ' ' });\n        this.cBoxTrue.insertBefore(this.parent.createElement('input', {\n            className: 'e-chk-hidden', attrs: { type: 'checkbox' }\n        }), this.cBoxTrue.firstChild);\n        this.cBoxFalse.insertBefore(this.parent.createElement('input', {\n            className: 'e-chk-hidden', attrs: { 'type': 'checkbox' }\n        }), this.cBoxFalse.firstChild);\n        this.cBoxFalse.querySelector('.e-frame').classList.add('e-uncheck');\n        if (this.parent.enableRtl) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.cBoxTrue, this.cBoxFalse], ['e-rtl']);\n        }\n        if (this.parent.cssClass) {\n            if (this.parent.cssClass.indexOf(' ') !== -1) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.cBoxTrue, this.cBoxFalse], this.parent.cssClass.split(' '));\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.cBoxTrue, this.cBoxFalse], [this.parent.cssClass]);\n            }\n        }\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilterBase.prototype.destroy = function () {\n        this.closeDialog();\n    };\n    CheckBoxFilterBase.prototype.wireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.dlg, 'click', this.clickHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.dlg, 'keyup', this.keyupHandler, this);\n        this.searchHandler = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.debounce)(this.searchBoxKeyUp, 200);\n        var elem = this.dialogObj.element.querySelector('.e-searchinput');\n        if (elem) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(elem, 'keyup', this.searchHandler, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(elem, 'input', this.searchHandler, this);\n        }\n    };\n    CheckBoxFilterBase.prototype.unWireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.dlg, 'click', this.clickHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.dlg, 'keyup', this.keyupHandler);\n        var elem = this.dialogObj.element.querySelector('.e-searchinput');\n        if (elem) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(elem, 'keyup', this.searchHandler);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(elem, 'input', this.searchHandler);\n        }\n    };\n    CheckBoxFilterBase.prototype.foreignKeyFilter = function (args, fColl, mPredicate) {\n        var _this = this;\n        var fPredicate = {};\n        var filterCollection = [];\n        var query = this.foreignKeyQuery.clone();\n        this.options.column.dataSource.\n            executeQuery(query.where(mPredicate)).then(function (e) {\n            _this.options.column.columnData = e.result;\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.generateQuery, { predicate: fPredicate, column: _this.options.column });\n            args.ejpredicate = fPredicate.predicate.predicates;\n            var fpred = fPredicate.predicate.predicates;\n            for (var i = 0; i < fpred.length; i++) {\n                filterCollection.push({\n                    field: fpred[parseInt(i.toString(), 10)].field,\n                    predicate: 'or',\n                    matchCase: fpred[parseInt(i.toString(), 10)].ignoreCase,\n                    ignoreAccent: fpred[parseInt(i.toString(), 10)].ignoreAccent,\n                    operator: fpred[parseInt(i.toString(), 10)].operator,\n                    value: fpred[parseInt(i.toString(), 10)].value,\n                    type: _this.options.type\n                });\n            }\n            args.filterCollection = filterCollection.length ? filterCollection :\n                fColl.filter(function (col) { return col.field = _this.options.field; });\n            _this.options.handler(args);\n        });\n    };\n    CheckBoxFilterBase.prototype.searchBoxClick = function (e) {\n        var target = e.target;\n        if (target.classList.contains('e-searchclear')) {\n            this.sInput.value = target.classList.contains('e-chkcancel-icon') ? '' : this.sInput.value;\n            if (this.isCheckboxFilterTemplate) {\n                this.parent.notify('refreshCheckbox', { event: e });\n            }\n            else {\n                this.refreshCheckboxes();\n            }\n            this.updateSearchIcon();\n            this.sInput.focus();\n        }\n    };\n    CheckBoxFilterBase.prototype.searchBoxKeyUp = function (e) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sInput)) {\n            return;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e) || (e.key !== 'ArrowUp' && e.key !== 'ArrowDown' && e.key !== 'Tab' && !(e.key === 'Tab' && e.shiftKey))) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                this.parent.showMaskRow(undefined, this.dialogObj.element);\n            }\n            if (this.isCheckboxFilterTemplate) {\n                this.parent.notify('refreshCheckbox', { event: e });\n            }\n            else {\n                this.refreshCheckboxes();\n            }\n            this.updateSearchIcon();\n        }\n    };\n    CheckBoxFilterBase.prototype.updateSearchIcon = function () {\n        if (this.sInput.value.length) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.sIcon, ['e-chkcancel-icon'], ['e-search-icon']);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.body.querySelector('.e-chkcancel-icon'))) {\n                document.body.querySelector('.e-chkcancel-icon').setAttribute('title', this.localeObj.getConstant('Clear'));\n            }\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.sIcon, ['e-search-icon'], ['e-chkcancel-icon']);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.body.querySelector('.e-searchclear.e-search-icon'))) {\n                document.body.querySelector('.e-searchclear.e-search-icon').setAttribute('title', this.localeObj.getConstant('Search'));\n            }\n        }\n    };\n    /**\n     * Gets the localized label by locale keyword.\n     *\n     * @param {string} key - Defines localization key\n     * @returns {string} - returns localization label\n     */\n    CheckBoxFilterBase.prototype.getLocalizedLabel = function (key) {\n        return this.localeObj.getConstant(key);\n    };\n    CheckBoxFilterBase.prototype.updateDataSource = function () {\n        var dataSource = this.options.dataSource;\n        var str = 'object';\n        if (!(dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager)) {\n            for (var i = 0; i < dataSource.length; i++) {\n                // eslint-disable-next-line valid-typeof\n                if (typeof dataSource !== str) {\n                    var obj = {};\n                    obj[this.options.field] = dataSource[parseInt(i.toString(), 10)];\n                    dataSource[parseInt(i.toString(), 10)] = obj;\n                }\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.updateModel = function (options) {\n        this.options = options;\n        this.existingPredicate = options.actualPredicate || {};\n        this.options.dataSource = options.dataSource;\n        this.options.dataManager = options.dataManager ? options.dataManager : options.dataSource;\n        this.updateDataSource();\n        this.options.type = options.type;\n        this.options.format = options.format || '';\n        this.options.ignoreAccent = options.ignoreAccent || false;\n        this.options.filteredColumns = options.filteredColumns || this.parent.filterSettings.columns;\n        this.options.query = options.query || new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query();\n        this.options.allowCaseSensitive = options.allowCaseSensitive || false;\n        this.options.uid = options.column.uid;\n        this.options.disableHtmlEncode = options.column.disableHtmlEncode || false;\n        this.values = {};\n        this.localeObj = options.localeObj;\n        this.isFiltered = options.filteredColumns.length;\n        this.infiniteRenderMod = this.parent.filterSettings && this.parent.filterSettings.enableInfiniteScrolling ? true : false;\n        this.infiniteUnloadParentExistPred = this.infiniteRenderMod && this.existingPredicate[this.options.column.field] ? this.existingPredicate[this.options.column.field].slice() : [];\n    };\n    CheckBoxFilterBase.prototype.getAndSetChkElem = function (options) {\n        this.dlg = this.parent.createElement('div', {\n            id: this.id + this.options.type + '_excelDlg',\n            attrs: { uid: this.options.column.uid },\n            className: 'e-checkboxfilter e-filter-popup'\n        });\n        this.sBox = this.parent.createElement('div', { className: 'e-searchcontainer' });\n        if (!options.hideSearchbox) {\n            this.sInput = this.parent.createElement('input', {\n                id: this.id + '_SearchBox',\n                className: 'e-searchinput'\n            });\n            this.sIcon = this.parent.createElement('span', {\n                className: 'e-searchclear e-search-icon e-icons e-input-group-icon', attrs: {\n                    type: 'text', title: this.getLocalizedLabel('Search')\n                }\n            });\n            this.searchBox = this.parent.createElement('span', { className: 'e-searchbox e-fields' });\n            this.searchBox.appendChild(this.sInput);\n            this.sBox.appendChild(this.searchBox);\n            this.searchInputArgs = {\n                element: this.sInput, floatLabelType: 'Never', properties: {\n                    placeholder: this.getLocalizedLabel('Search'),\n                    cssClass: this.parent.cssClass\n                }\n            };\n            _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_6__.Input.createInput(this.searchInputArgs, this.parent.createElement);\n            this.searchBox.querySelector('.e-input-group').appendChild(this.sIcon);\n        }\n        this.spinner = this.parent.createElement('div', { className: 'e-spinner' }); //for spinner\n        this.cBox = this.parent.createElement('div', {\n            id: this.id + this.options.type + '_CheckBoxList',\n            className: 'e-checkboxlist e-fields'\n        });\n        this.spinner.appendChild(this.cBox);\n        this.sBox.appendChild(this.spinner);\n        return this.sBox;\n    };\n    CheckBoxFilterBase.prototype.showDialog = function (options) {\n        var args = {\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterBeforeOpen,\n            columnName: this.options.field, columnType: this.options.type, cancel: false\n        };\n        var filterModel = 'filterModel';\n        args[\"\" + filterModel] = this;\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.cBoxFltrBegin, args);\n        if (args.cancel) {\n            options.cancel = args.cancel;\n            return;\n        }\n        this.dialogObj = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_7__.Dialog({\n            visible: false, content: this.sBox,\n            close: this.closeDialog.bind(this),\n            enableRtl: this.parent.enableRtl,\n            width: (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(options.target, 'e-bigger')))\n                || this.parent.element.classList.contains('e-device') ? 260 : 255,\n            target: this.parent.element, animationSettings: { effect: 'None' },\n            buttons: [{\n                    click: this.btnClick.bind(this),\n                    buttonModel: {\n                        content: this.getLocalizedLabel(this.isExcel ? 'OKButton' : 'FilterButton'),\n                        cssClass: this.parent.cssClass ? 'e-primary' + ' ' + this.parent.cssClass : 'e-primary',\n                        isPrimary: true\n                    }\n                },\n                {\n                    click: this.btnClick.bind(this),\n                    buttonModel: { cssClass: this.parent.cssClass ? 'e-flat' + ' ' + this.parent.cssClass : 'e-flat',\n                        content: this.getLocalizedLabel(this.isExcel ? 'CancelButton' : 'ClearButton') }\n                }],\n            created: this.dialogCreated.bind(this),\n            open: this.dialogOpen.bind(this),\n            cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n        });\n        var isStringTemplate = 'isStringTemplate';\n        this.dialogObj[\"\" + isStringTemplate] = true;\n        this.renderResponsiveFilter(options);\n        var dialogLabel = this.parent.filterSettings && this.parent.filterSettings.type === 'CheckBox' ?\n            this.getLocalizedLabel('CheckBoxFilterDialogARIA') : this.getLocalizedLabel('ExcelFilterDialogARIA');\n        this.dlg.setAttribute('aria-label', dialogLabel);\n        if (options.isResponsiveFilter) {\n            var responsiveCnt = document.querySelector('.e-responsive-dialog > .e-dlg-content > .e-mainfilterdiv');\n            responsiveCnt.appendChild(this.dlg);\n        }\n        else {\n            this.parent.element.appendChild(this.dlg);\n        }\n        this.dialogObj.appendTo(this.dlg);\n        this.dialogObj.element.style.maxHeight = options.isResponsiveFilter ? 'none' : this.options.height + 'px';\n        this.dialogObj.show();\n        if (this.parent && this.parent.filterSettings && (this.parent.filterSettings.type === 'CheckBox'\n            || (this.options.column && this.options.column.filter && this.options.column.filter.type === 'CheckBox')) &&\n            this.parent.getContent().firstElementChild.offsetHeight < this.dialogObj.element.offsetHeight &&\n            !(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(this.parent.element, 'e-gantt-dialog')) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.resetDialogAppend)(this.parent, this.dialogObj);\n        }\n        var content = this.dialogObj.element.querySelector('.e-dlg-content');\n        content.appendChild(this.sBox);\n        this.wireEvents();\n        if (!this.parent.enableAdaptiveUI) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer'\n                && !this.infiniteRenderMod) {\n                this.parent.showMaskRow(undefined, this.dialogObj.element);\n            }\n            if (this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n                this.showMask();\n            }\n        }\n        else {\n            if (this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n                this.getAllData();\n                return;\n            }\n            if (this.infiniteRenderMod) {\n                this.cBox.style.marginTop = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getListHeight)(this.cBox) + 'px';\n            }\n        }\n        if (!(this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer')) {\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.createSpinner)({ target: this.spinner, cssClass: this.parent.cssClass ? this.parent.cssClass : null }, this.parent.createElement);\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.showSpinner)(this.spinner);\n        }\n        this.getAllData();\n    };\n    CheckBoxFilterBase.prototype.renderResponsiveFilter = function (options) {\n        if (options.isResponsiveFilter) {\n            this.dialogObj.buttons = [{}];\n            this.dialogObj.position = { X: '', Y: '' };\n            this.dialogObj.target = document.querySelector('.e-resfilter > .e-dlg-content > .e-mainfilterdiv');\n            this.dialogObj.width = '100%';\n        }\n    };\n    CheckBoxFilterBase.prototype.dialogCreated = function (e) {\n        if (this.options.isResponsiveFilter) {\n            this.dialogObj.element.style.left = '0px';\n        }\n        else {\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getFilterMenuPostion)(this.options.target, this.dialogObj);\n            }\n            else {\n                this.dialogObj.position = { X: 'center', Y: 'center' };\n            }\n        }\n        if (this.options.column.showColumnMenu) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.filterDialogCreated, e);\n        }\n    };\n    CheckBoxFilterBase.prototype.openDialog = function (options) {\n        this.updateModel(options);\n        this.getAndSetChkElem(options);\n        this.showDialog(options);\n    };\n    CheckBoxFilterBase.prototype.closeDialog = function () {\n        if (this.infiniteRenderMod && this.infinitePermenantLocalData.length && !this.options.isRemote) {\n            this.options.dataSource.dataSource.json = this.infinitePermenantLocalData;\n        }\n        if (this.dialogObj && !this.dialogObj.isDestroyed) {\n            this.isBlanks = false;\n            var filterTemplateCol = this.options.columns.filter(function (col) { return col.getFilterItemTemplate(); });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var registeredTemplate = this.parent.registeredTemplate;\n            if (filterTemplateCol.length && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(registeredTemplate) && registeredTemplate.filterItemTemplate) {\n                this.parent.destroyTemplate(['filterItemTemplate']);\n            }\n            if ((this.parent.isReact || this.parent.isVue) && this.parent.destroyTemplate !== undefined) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.clearReactVueTemplates)(this.parent, ['filterItemTemplate']);\n            }\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.filterMenuClose, { field: this.options.field });\n            this.unWireEvents();\n            if (this.searchInputArgs && this.searchInputArgs.element && this.searchInputArgs.element.parentElement) {\n                _syncfusion_ej2_inputs__WEBPACK_IMPORTED_MODULE_6__.Input.destroy(this.searchInputArgs);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.searchInputArgs.element);\n            }\n            this.searchInputArgs = null;\n            this.sInput = null;\n            if (this.parent.isReact && this.options.column.filter && typeof (this.options.column.filter.itemTemplate) !== 'string'\n                && (this.options.column.filter.type === 'CheckBox' || this.options.column.filter.type === 'Excel')) {\n                this.dialogObj.element.querySelector('.e-dlg-content').innerHTML = '';\n            }\n            this.dialogObj.destroy();\n            if (this.dialogObj['dlgClosedBy'] === 'escape') {\n                this.parent.isColumnMenuFilterClosing = true;\n            }\n            if (this.dlg && this.dlg.parentElement) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.dlg);\n                var gridPopup = document.getElementById(this.parent.element.id + '_e-popup');\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gridPopup)) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(gridPopup);\n                    gridPopup = null;\n                }\n            }\n            this.dlg = null;\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.filterDialogClose, {});\n        }\n    };\n    /**\n     * @param {Column} col - Defines column details\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilterBase.prototype.clearFilter = function (col) {\n        // eslint-disable-next-line max-len\n        var args = { instance: this, handler: this.clearFilter, cancel: false };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.fltrPrevent, args);\n        if (args.cancel) {\n            return;\n        }\n        this.options.handler({ action: 'clear-filter', field: col ? col.field : this.options.field });\n    };\n    CheckBoxFilterBase.prototype.btnClick = function (e) {\n        if (this.filterState) {\n            if ((e.target.tagName.toLowerCase() === 'input' && e.target.classList.contains('e-searchinput')) ||\n                e.keyCode === 13) {\n                if (!this.isCheckboxFilterTemplate) {\n                    this.fltrBtnHandler();\n                }\n            }\n            else {\n                var text = e.target.firstChild.textContent.toLowerCase();\n                if (this.getLocalizedLabel(this.isExcel ? 'OKButton' : 'FilterButton').toLowerCase() === text) {\n                    if (!this.isCheckboxFilterTemplate) {\n                        this.fltrBtnHandler();\n                    }\n                }\n                else if (this.getLocalizedLabel('ClearButton').toLowerCase() === text) {\n                    this.clearFilter();\n                }\n            }\n            this.closeDialog();\n        }\n        else if (e.target && e.target.firstChild &&\n            e.target.firstChild.textContent.toLowerCase() === this.getLocalizedLabel('CancelButton').toLowerCase()) {\n            this.closeDialog();\n        }\n        else if (!(e.target.tagName.toLowerCase() === 'input')) {\n            this.clearFilter();\n            this.closeDialog();\n        }\n        if (this.options.column.showColumnMenu) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.afterFilterColumnMenuClose, {});\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.focusModule)) {\n            this.parent.focusModule.filterfocus();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilterBase.prototype.fltrBtnHandler = function () {\n        var _this = this;\n        if (this.infiniteRenderMod) {\n            this.cBox.innerHTML = '';\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.appendChildren)(this.cBox, this.infiniteLoadedElem.slice());\n        }\n        var checked = [].slice.call(this.cBox.querySelectorAll('.e-check:not(.e-selectall):not(.e-add-current)'));\n        var check = checked;\n        var optr = 'equal';\n        var ddlValue = this.dialogObj.element.querySelector('.e-dropdownlist');\n        if (ddlValue) {\n            this.options.operator = optr = ddlValue.ej2_instances[0].value;\n        }\n        this.isMenuNotEqual = this.options.operator === 'notequal';\n        var searchInput;\n        if (!this.options.hideSearchbox) {\n            searchInput = this.searchBox.querySelector('.e-searchinput');\n        }\n        var caseSen = this.options.allowCaseSensitive;\n        var defaults = {\n            field: this.options.field, predicate: this.isMenuNotEqual ? 'and' : 'or', uid: this.options.uid,\n            operator: optr, type: this.options.type, matchCase: caseSen, ignoreAccent: this.options.ignoreAccent\n        };\n        var isNotEqual = this.itemsCnt !== checked.length && this.itemsCnt - checked.length < checked.length;\n        if (isNotEqual && searchInput && searchInput.value === '') {\n            optr = this.isMenuNotEqual ? 'equal' : 'notequal';\n            checked = [].slice.call(this.cBox.querySelectorAll('.e-uncheck:not(.e-selectall)'));\n            defaults.predicate = this.isMenuNotEqual ? 'or' : 'and';\n            defaults.operator = optr;\n        }\n        var val;\n        var length;\n        var coll = [];\n        if ((checked.length !== this.itemsCnt || (searchInput && searchInput.value && searchInput.value !== ''))\n            || this.infiniteRenderMod) {\n            if (!this.infiniteRenderMod) {\n                coll = this.complexQueryPredicate(checked, defaults, isNotEqual);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(coll)) {\n                    return;\n                }\n                coll = this.filterPreventColumns ? this.filterPreventColumns : coll;\n            }\n            else if (this.infiniteRenderMod &&\n                (!this.infiniteSearchPred || (this.infiniteSearchPred && !this.infiniteSearchPred.isComplex))) {\n                this.infiniteFltrBtnHandler(coll);\n            }\n            else {\n                if (this.infiniteSearchPred.isComplex) {\n                    coll = this.complexQueryPredicate(checked, defaults, isNotEqual);\n                }\n            }\n            if ((this.options.type === 'date' || this.options.type === 'dateonly' || this.options.type === 'datetime') && check.length) {\n                length = check.length - 1;\n                val = this.values[(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(check[parseInt(length.toString(), 10)], 'e-ftrchk').getAttribute('uid')];\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val) && isNotEqual) {\n                    coll.push({\n                        field: defaults.field, matchCase: defaults.matchCase, operator: 'equal',\n                        predicate: 'or', value: null\n                    });\n                }\n            }\n            var addCurrSelection = this.infiniteRenderMod ? this.sBox.querySelector('.e-add-current') :\n                this.cBox.querySelector('.e-add-current');\n            if (addCurrSelection && addCurrSelection.classList.contains('e-check')) {\n                var existingPredicate_1 = this.existingPredicate[this.options.field];\n                if (existingPredicate_1) {\n                    var _loop_1 = function (j) {\n                        if (!coll.some(function (data) {\n                            return data\n                                .value === existingPredicate_1[parseInt(j.toString(), 10)].value;\n                        })) {\n                            coll.push(existingPredicate_1[parseInt(j.toString(), 10)]);\n                        }\n                    };\n                    for (var j = 0; j < existingPredicate_1.length; j++) {\n                        _loop_1(j);\n                    }\n                }\n                else {\n                    return;\n                }\n            }\n            if (!this.infiniteRenderMod) {\n                this.initiateFilter(coll);\n            }\n            else if (coll.length) {\n                this.initiateFilter(coll);\n            }\n            else if (this.sBox.querySelector('.e-selectall').classList.contains('e-check') && !coll.length) {\n                var isClearFilter = this.options.filteredColumns.some(function (value) {\n                    return _this.options.field === value.field;\n                });\n                if (isClearFilter) {\n                    this.clearFilter();\n                }\n            }\n        }\n        else {\n            var isClearFilter = this.options.filteredColumns.some(function (value) {\n                return _this.options.field === value.field;\n            });\n            if (isClearFilter) {\n                this.clearFilter();\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.complexQueryPredicate = function (checkBoxChecked, defaults, isNotEqual) {\n        var value;\n        var fObj;\n        var coll = [];\n        for (var i = 0; i < checkBoxChecked.length; i++) {\n            value = this.values[(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(checkBoxChecked[parseInt(i.toString(), 10)], 'e-ftrchk').getAttribute('uid')];\n            fObj = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, { value: value }, defaults);\n            if (value && !value.toString().length) {\n                fObj.operator = isNotEqual ? 'notequal' : 'equal';\n            }\n            if (value === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n                coll = coll.concat(CheckBoxFilterBase.generateNullValuePredicates(defaults));\n            }\n            else {\n                coll.push(fObj);\n            }\n        }\n        var filterColumns = this.filterPreventColumns && this.filterPreventColumns.length ?\n            this.filterPreventColumns[0] : fObj;\n        if (filterColumns && !this.notifyFilterPrevEvent(filterColumns)) {\n            this.filterPreventColumns = coll;\n            return null;\n        }\n        else {\n            return coll;\n        }\n    };\n    CheckBoxFilterBase.prototype.infiniteFltrBtnHandler = function (coll) {\n        var value;\n        if (this.infiniteManualSelectMaintainPred.length) {\n            for (var i = 0; i < this.infiniteManualSelectMaintainPred.length; i++) {\n                var pred = this.infiniteManualSelectMaintainPred[i];\n                value = pred.value + '';\n                if (value === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n                    var dummyDefaults = { predicate: pred.predicate, field: pred.field, type: pred.type, uid: pred.uid, operator: pred.operator,\n                        matchCase: pred.matchCase, ignoreAccent: pred.ignoreAccent };\n                    coll.push.apply(coll, CheckBoxFilterBase.generateNullValuePredicates(dummyDefaults));\n                }\n                else {\n                    coll.push(this.infiniteManualSelectMaintainPred[i]);\n                }\n                this.notifyFilterPrevEvent(this.infiniteManualSelectMaintainPred[i]);\n            }\n        }\n        if (!this.localInfiniteSelectAllClicked && this.sInput.value === '' && !(!this.options.parentCurrentViewDataCount && coll.length)) {\n            for (var i = 0; i < this.infiniteUnloadParentExistPred.length; i++) {\n                coll.unshift(this.infiniteUnloadParentExistPred[i]);\n                this.notifyFilterPrevEvent(this.existingPredicate[this.options.field][i]);\n            }\n        }\n        if (this.sInput.value !== '' && (!this.localInfiniteSelectAllClicked || this.infiniteLocalSelectAll)) {\n            this.infiniteSearchPred['predicate'] = 'or';\n            coll.unshift(this.infiniteSearchPred);\n            this.notifyFilterPrevEvent(this.infiniteSearchPred);\n        }\n    };\n    CheckBoxFilterBase.prototype.notifyFilterPrevEvent = function (predicate) {\n        var args = {\n            instance: this, handler: this.fltrBtnHandler, arg1: predicate.field, arg2: predicate.predicate, arg3: predicate.operator,\n            arg4: predicate.matchCase, arg5: predicate.ignoreAccent, arg6: predicate.value, cancel: false\n        };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.fltrPrevent, args);\n        if (args.cancel) {\n            return false;\n        }\n        return true;\n    };\n    // eslint-disable-next-line\n    /** @hidden */\n    CheckBoxFilterBase.generateNullValuePredicates = function (defaults) {\n        var coll = [];\n        if (defaults.type === 'string') {\n            coll.push({\n                field: defaults.field, ignoreAccent: defaults.ignoreAccent, matchCase: defaults.matchCase,\n                operator: defaults.operator, predicate: defaults.predicate, value: ''\n            });\n        }\n        coll.push({\n            field: defaults.field,\n            matchCase: defaults.matchCase, operator: defaults.operator, predicate: defaults.predicate, value: null\n        });\n        coll.push({\n            field: defaults.field, matchCase: defaults.matchCase, operator: defaults.operator,\n            predicate: defaults.predicate, value: undefined\n        });\n        return coll;\n    };\n    // eslint-disable-next-line\n    /** @hidden */\n    CheckBoxFilterBase.prototype.initiateFilter = function (fColl) {\n        var firstVal = fColl[0];\n        var predicate;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(firstVal)) {\n            predicate = firstVal.ejpredicate ? firstVal.ejpredicate :\n                new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Predicate(firstVal.field, firstVal.operator, firstVal.value, !firstVal.matchCase, firstVal.ignoreAccent);\n            for (var j = 1; j < fColl.length; j++) {\n                predicate = fColl[parseInt(j.toString(), 10)].ejpredicate !== undefined ?\n                    predicate[fColl[parseInt(j.toString(), 10)].predicate](fColl[parseInt(j.toString(), 10)].ejpredicate) :\n                    predicate[fColl[parseInt(j.toString(), 10)].predicate](fColl[parseInt(j.toString(), 10)].field, fColl[parseInt(j.toString(), 10)].operator, fColl[parseInt(j.toString(), 10)].value, !fColl[parseInt(j.toString(), 10)].matchCase, fColl[parseInt(j.toString(), 10)].ignoreAccent);\n            }\n            var args = {\n                action: 'filtering', filterCollection: fColl, field: this.options.field,\n                ejpredicate: _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Predicate.or(predicate)\n            };\n            this.options.handler(args);\n        }\n    };\n    CheckBoxFilterBase.prototype.isForeignColumn = function (col) {\n        return col.isForeignColumn ? col.isForeignColumn() : false;\n    };\n    CheckBoxFilterBase.prototype.refreshCheckboxes = function () {\n        var _this = this;\n        var val = this.sInput.value;\n        var column = this.options.column;\n        var query = this.isForeignColumn(column) ? this.foreignKeyQuery.clone() : this.options.query.clone();\n        var foreignQuery = this.options.query.clone();\n        var pred = query.queries.filter(function (e) { return e && e.fn === 'onWhere'; })[0];\n        query.queries = [];\n        foreignQuery.queries = [];\n        var parsed = (this.options.type !== 'string' && parseFloat(val)) ? parseFloat(val) : val;\n        var operator = this.options.isRemote ?\n            (this.options.type === 'string' ? 'contains' : 'equal') : (this.options.type ? 'contains' : 'equal');\n        var matchCase = true;\n        var ignoreAccent = this.options.ignoreAccent;\n        var field = this.isForeignColumn(column) ? column.foreignKeyValue : column.field;\n        parsed = (parsed === '' || parsed === undefined) ? undefined : parsed;\n        var coll = [];\n        var defaults = {\n            field: field, predicate: 'or', uid: this.options.uid,\n            operator: 'equal', type: this.options.type, matchCase: matchCase, ignoreAccent: ignoreAccent\n        };\n        var predicte;\n        var moduleName = this.options.dataManager.adaptor.getModuleName;\n        if (this.options.type === 'boolean') {\n            if (parsed !== undefined &&\n                this.getLocalizedLabel('FilterTrue').toLowerCase().indexOf(parsed.toLowerCase()) !== -1) {\n                parsed = 'true';\n            }\n            else if (parsed !== undefined &&\n                this.getLocalizedLabel('FilterFalse').toLowerCase().indexOf(parsed.toLowerCase()) !== -1) {\n                parsed = 'false';\n            }\n            if (parsed !== undefined &&\n                this.getLocalizedLabel('FilterTrue').toLowerCase().indexOf(parsed.toLowerCase()) !== -1 && moduleName) {\n                // eslint-disable-next-line no-constant-condition\n                parsed = (moduleName() === 'ODataAdaptor' || 'ODataV4Adaptor') ? true : 0;\n            }\n            else if (parsed !== undefined &&\n                this.getLocalizedLabel('FilterFalse').toLowerCase().indexOf(parsed.toLowerCase()) !== -1 && moduleName) {\n                // eslint-disable-next-line no-constant-condition\n                parsed = (moduleName() === 'ODataAdaptor' || 'ODataV4Adaptor') ? false : 0;\n            }\n            operator = 'equal';\n        }\n        if ((this.options.type === 'date' || this.options.type === 'datetime' || this.options.type === 'dateonly') && this.options.format) {\n            var intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n            var format = typeof (this.options.format) === 'string' ? this.options.format :\n                this.options.format.format;\n            if (format) {\n                parsed = intl.parseDate(val, { format: format }) || new Date(val);\n            }\n            else {\n                parsed = new Date(val);\n            }\n            if (this.options.type === 'dateonly') {\n                parsed = parsed.getFullYear() + '-' + (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.padZero)(parsed.getMonth() + 1) + '-' + (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.padZero)(parsed.getDate());\n            }\n        }\n        this.infiniteSearchValChange = true;\n        this.infiniteLoadedElem = [];\n        this.infiniteLocalSelectAll = true;\n        this.localInfiniteSelectAllClicked = false;\n        this.localInfiniteSelectionInteracted = false;\n        this.infiniteSkipCnt = 0;\n        this.infiniteDataCount = 0;\n        this.infiniteManualSelectMaintainPred = [];\n        if (this.sInput.value === '') {\n            this.infiniteUnloadParentExistPred = this.infiniteRenderMod && this.existingPredicate[this.options.column.field] ? this.existingPredicate[this.options.column.field].slice() : [];\n        }\n        else {\n            this.infiniteUnloadParentExistPred = [];\n        }\n        this.addDistinct(query);\n        var args = {\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterSearchBegin,\n            filterModel: this, columnName: field, column: column,\n            operator: operator, matchCase: matchCase, ignoreAccent: ignoreAccent, filterChoiceCount: null,\n            query: query, value: parsed\n        };\n        if (this.infiniteRenderMod && this.parent.filterSettings.itemsCount) {\n            args.filterChoiceCount = this.parent.filterSettings.itemsCount;\n        }\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.actionBegin, args, function (filterargs) {\n            // eslint-disable-next-line no-self-assign\n            filterargs.operator = filterargs.operator;\n            predicte = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Predicate(field, filterargs.operator, args.value, filterargs.matchCase, filterargs.ignoreAccent);\n            if (_this.options.type === 'date' || _this.options.type === 'datetime' || _this.options.type === 'dateonly') {\n                operator = 'equal';\n                var filterObj = {\n                    field: field, operator: operator, value: parsed, matchCase: matchCase,\n                    ignoreAccent: ignoreAccent\n                };\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parsed)) {\n                    predicte = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getDatePredicate)(filterObj, _this.options.type);\n                }\n            }\n            if (val && typeof val === 'string' && _this.isBlanks &&\n                _this.getLocalizedLabel('Blanks').toLowerCase().indexOf(val.toLowerCase()) >= 0) {\n                coll = coll.concat(CheckBoxFilterBase.generateNullValuePredicates(defaults));\n                var emptyValPredicte = CheckBoxFilterBase.generatePredicate(coll);\n                emptyValPredicte.predicates.push(predicte);\n                predicte = emptyValPredicte;\n                query.where(emptyValPredicte);\n            }\n            else if (val.length) {\n                predicte = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pred) ? predicte.and(pred.e) : predicte;\n                query.where(predicte);\n            }\n            else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pred)) {\n                predicte = pred.e;\n                query.where(pred.e);\n            }\n            _this.infiniteSearchPred = predicte;\n            filterargs.filterChoiceCount = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filterargs.filterChoiceCount) ? filterargs.filterChoiceCount : 1000;\n            if (_this.infiniteRenderMod && _this.parent.filterSettings.itemsCount !== filterargs.filterChoiceCount) {\n                _this.parent.filterSettings.itemsCount = args.filterChoiceCount;\n            }\n            var fPredicate = {};\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.showSpinner)(_this.spinner);\n            _this.renderEmpty = false;\n            if (_this.isForeignColumn(column) && val.length) {\n                var colData = ('result' in column.dataSource) ? new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(column.dataSource.result) :\n                    column.dataSource;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                colData.executeQuery(query).then(function (e) {\n                    var columnData = _this.options.column.columnData;\n                    _this.options.column.columnData = e.result;\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.generateQuery, { predicate: fPredicate, column: column });\n                    if (fPredicate.predicate.predicates.length) {\n                        foreignQuery.where(fPredicate.predicate);\n                    }\n                    else {\n                        _this.renderEmpty = true;\n                    }\n                    _this.options.column.columnData = columnData;\n                    if (_this.infiniteRenderMod) {\n                        _this.infiniteInitialLoad = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fullData) ? true : false;\n                        _this.makeInfiniteScrollRequest(foreignQuery);\n                        foreignQuery.requiresCount();\n                    }\n                    else {\n                        foreignQuery.take(filterargs.filterChoiceCount);\n                    }\n                    _this.search(filterargs, foreignQuery);\n                });\n            }\n            else {\n                if (_this.infiniteRenderMod && _this.parent.filterSettings.itemsCount) {\n                    _this.infiniteInitialLoad = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fullData) ? true : false;\n                    _this.makeInfiniteScrollRequest(query);\n                    query.requiresCount();\n                }\n                else {\n                    query.take(filterargs.filterChoiceCount);\n                }\n                _this.search(filterargs, query);\n            }\n        });\n    };\n    CheckBoxFilterBase.prototype.search = function (args, query) {\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            this.filterEvent(args, query);\n        }\n        else {\n            this.processSearch(query);\n        }\n    };\n    CheckBoxFilterBase.prototype.getPredicateFromCols = function (columns, isExecuteLocal) {\n        var predicates = CheckBoxFilterBase.getPredicate(columns, isExecuteLocal);\n        var predicateList = [];\n        var fPredicate = {};\n        var isGrid = this.parent.getForeignKeyColumns !== undefined;\n        var foreignColumn = isGrid ? this.parent.getForeignKeyColumns() : [];\n        for (var _i = 0, _a = Object.keys(predicates); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            var col = void 0;\n            if (isGrid && !this.parent.getColumnByField(prop)) {\n                col = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getColumnByForeignKeyValue)(prop, foreignColumn);\n            }\n            if (col) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.generateQuery, { predicate: fPredicate, column: col });\n                if (fPredicate.predicate.predicates.length) {\n                    predicateList.push(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Predicate.or(fPredicate.predicate.predicates));\n                }\n            }\n            else {\n                predicateList.push(predicates[\"\" + prop]);\n            }\n        }\n        return predicateList.length && _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Predicate.and(predicateList);\n    };\n    CheckBoxFilterBase.prototype.getQuery = function () {\n        return this.parent.getQuery ? this.parent.getQuery().clone() : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query();\n    };\n    CheckBoxFilterBase.prototype.getAllData = function () {\n        var _this = this;\n        this.customQuery = false;\n        var query = this.getQuery();\n        var moduleName = this.options.dataManager.adaptor.getModuleName;\n        if (!(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.getDataModule) && moduleName && moduleName() === 'ODataV4Adaptor')) {\n            query.requiresCount(); //consider take query\n        }\n        this.addDistinct(query);\n        var args = {\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterChoiceRequest, query: query, filterChoiceCount: null\n        };\n        var filterModel = 'filterModel';\n        args[\"\" + filterModel] = this;\n        if (this.infiniteRenderMod && this.parent.filterSettings.itemsCount) {\n            args.filterChoiceCount = this.parent.filterSettings.itemsCount;\n        }\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.actionBegin, args, function (args) {\n            args.filterChoiceCount = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.filterChoiceCount) ? args.filterChoiceCount : 1000;\n            if (_this.infiniteRenderMod && _this.parent.filterSettings.itemsCount !== args.filterChoiceCount) {\n                _this.parent.filterSettings.itemsCount = args.filterChoiceCount;\n            }\n            if (!_this.infiniteRenderMod) {\n                query.take(args.filterChoiceCount);\n            }\n            if (!args.query.distincts.length || _this.infiniteRenderMod) {\n                _this.customQuery = true;\n                _this.queryGenerate(query);\n            }\n            if (_this.infiniteRenderMod) {\n                _this.infiniteInitialLoad = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.fullData) ? true : false;\n                _this.makeInfiniteScrollRequest(query);\n            }\n            if (_this.parent.dataSource && 'result' in _this.parent.dataSource) {\n                _this.filterEvent(args, query);\n            }\n            else {\n                _this.processDataOperation(query, true);\n            }\n        });\n    };\n    CheckBoxFilterBase.prototype.addDistinct = function (query) {\n        var _this = this;\n        var filteredColumn = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__.DataUtil.distinct(this.options.filteredColumns, 'field');\n        if (filteredColumn.indexOf(this.options.column.field) <= -1) {\n            filteredColumn = filteredColumn.concat(this.options.column.field);\n        }\n        var moduleName = this.options.dataManager.adaptor.getModuleName;\n        if (moduleName && moduleName() === 'ODataV4Adaptor' && this.parent &&\n            this.parent.query instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query) {\n            var gridQuery = this.parent.query;\n            for (var i = 0; i < gridQuery.queries.length; i++) {\n                var queryOptions = gridQuery.queries[parseInt(i.toString(), 10)];\n                if (queryOptions.fn === 'onWhere') {\n                    this.getPredicateFields(queryOptions.e);\n                    this.queryFilteredColumn.map(function (field) {\n                        if (filteredColumn.indexOf(field) === -1) {\n                            filteredColumn.push(field);\n                        }\n                    });\n                    this.queryFilteredColumn = [];\n                }\n            }\n        }\n        if (!this.infiniteRenderMod) {\n            query.distinct(filteredColumn);\n        }\n        if (this.infiniteRenderMod && !this.options.isRemote && this.sInput.value === '') {\n            this.options.dataSource = this.options.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager ?\n                this.options.dataSource : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(this.options.dataSource);\n            this.infinitePermenantLocalData = this.options.dataSource.dataSource.json.slice();\n            var query1 = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query();\n            this.queryGenerate(query1);\n            var result = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(this.options.dataSource.dataSource).executeLocal(query1);\n            this.options.dataSource = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__.DataUtil.distinct(result, this.options.column.field, true));\n            if (this.isForeignColumn(this.options.column)) {\n                this.options.column.dataSource = this.options.column.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager ?\n                    this.options.column.dataSource : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(this.options.column.dataSource);\n                this.options.dataSource.dataSource.json = this.options.dataSource.dataSource.json.map(function (item, i) {\n                    return Object.assign({}, item, _this.options.column.dataSource.dataSource.json[i]);\n                });\n            }\n        }\n        else if (this.infiniteRenderMod && this.options.isRemote) {\n            query.select(this.options.column.field);\n            query.sortBy(this.options.column.field, 'ascending');\n            var moduleName_1 = this.options.dataManager.adaptor.getModuleName;\n            if (moduleName_1 && moduleName_1() && (moduleName_1() === 'ODataV4Adaptor' || moduleName_1() === 'WebApiAdaptor'\n                || moduleName_1() === 'CustomDataAdaptor' || moduleName_1() === 'GraphQLAdaptor' || moduleName_1() === 'ODataAdaptor')) {\n                query.distinct(filteredColumn);\n            }\n        }\n        return query;\n    };\n    CheckBoxFilterBase.prototype.getPredicateFields = function (query) {\n        var _this = this;\n        if (query.isComplex && query.predicates) {\n            query.predicates.forEach(function (predicate) {\n                if (Array.isArray(predicate)) {\n                    predicate.forEach(function (p) { return _this.getPredicateFields(p); });\n                }\n                else {\n                    _this.getPredicateFields(predicate);\n                }\n            });\n        }\n        else {\n            if (query.field && !query.isComplex) {\n                if (this.queryFilteredColumn.indexOf(query.field) <= -1) {\n                    this.queryFilteredColumn = this.queryFilteredColumn.concat(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__.DataUtil.distinct([query.field], 'field'));\n                }\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.filterEvent = function (args, query) {\n        var _this = this;\n        var defObj = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.eventPromise)(args, query);\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.dataStateChange, defObj.state);\n        this.addInfiniteScrollEvent(query);\n        var def = defObj.deffered;\n        def.promise.then(function (e) {\n            _this.infiniteDataCount = _this.infiniteRenderMod && !_this.infiniteDataCount ? e['count'] : _this.infiniteDataCount;\n            var dataResult = _this.infiniteRenderMod ? e['result'] : e;\n            _this.dataSuccess(dataResult);\n        });\n    };\n    CheckBoxFilterBase.prototype.addInfiniteScrollEvent = function (query) {\n        if (this.infiniteRenderMod) {\n            this.infiniteQuery = query.clone();\n            if (this.infiniteInitialLoad) {\n                this.cBox.classList.add('e-checkbox-infinitescroll');\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.cBox, 'scroll', this.infiniteScrollHandler, this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.cBox, 'mouseup', this.infiniteScrollMouseKeyUpHandler, this);\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.cBox, 'mousedown', this.infiniteScrollMouseKeyDownHandler, this);\n            }\n            else if (this.infiniteSearchValChange) {\n                this.cBox.innerHTML = '';\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.infiniteScrollMouseKeyDownHandler = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.cBox, 'scroll', this.infiniteScrollHandler);\n    };\n    CheckBoxFilterBase.prototype.infiniteScrollMouseKeyUpHandler = function (e) {\n        var _this = this;\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.cBox, 'scroll', this.infiniteScrollHandler, this);\n        var target = this.cBox;\n        if (target.children.length > 1 && (target.scrollTop >= target.scrollHeight - target.offsetHeight || target.scrollTop <= 0)) {\n            this.infiniteScrollHandler();\n        }\n        _base_util__WEBPACK_IMPORTED_MODULE_8__.Global.timer = setTimeout(function () { _this.clickHandler(e); _base_util__WEBPACK_IMPORTED_MODULE_8__.Global.timer = null; }, 0);\n    };\n    CheckBoxFilterBase.prototype.getShimmerTemplate = function () {\n        return '<span class=\"e-mask e-skeleton e-skeleton-text e-shimmer-wave\"></span>';\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    CheckBoxFilterBase.prototype.showMask = function () {\n        var maskRowCount = 5;\n        var maskItemHeight;\n        var maskList = this.parent.createElement('div', { id: this.id + this.options.type + '_CheckBoxMaskList',\n            className: 'e-checkboxlist e-fields e-infinite-list e-masklist' });\n        maskList.style.zIndex = '10';\n        var wrapperElem = this.cBox;\n        this.removeMask();\n        if (wrapperElem) {\n            var computedStyle = getComputedStyle(wrapperElem);\n            var liHeight = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getListHeight)(wrapperElem);\n            var height = wrapperElem.children.length ? parseInt(computedStyle.height, 10) :\n                Math.floor(parseInt(computedStyle.height.split('px')[0], 10)) - 5;\n            if (this.parent.enableAdaptiveUI && this.infiniteRenderMod) {\n                maskList.style.height = (height - liHeight) + 'px';\n                this.dlg.querySelector('.e-dlg-content').style.overflow = 'hidden';\n            }\n            var backgroundColor = this.isExcel && !wrapperElem.children.length && !this.dlg.classList.contains('e-excelfilter') ?\n                '' : getComputedStyle(this.dlg.querySelector('.e-dlg-content')).backgroundColor;\n            maskList.style.cssText = 'width: ' + computedStyle.width + '; min-height: ' + computedStyle.minHeight + '; height: ' +\n                height + 'px; margin: ' + computedStyle.margin + '; border-style: ' + computedStyle.borderStyle + '; border-width: '\n                + computedStyle.borderWidth + '; border-color: ' + computedStyle.borderColor + '; position: absolute; background-color: ' +\n                backgroundColor + ';';\n            maskRowCount = Math.floor(height / liHeight);\n            maskRowCount = wrapperElem.children.length > maskRowCount ? wrapperElem.children.length : maskRowCount;\n            maskItemHeight = liHeight + 'px';\n        }\n        var maskTemplate = '<div class=\"e-ftrchk e-mask-ftrchk\">'\n            + '<div class=\"e-checkbox-wrapper\"><input class=\"e-chk-hidden\">'\n            + this.getShimmerTemplate() + this.getShimmerTemplate() + '</div></div>';\n        maskList.innerHTML = '';\n        if (!wrapperElem.children.length) {\n            this.spinner.insertAdjacentHTML('beforebegin', maskTemplate);\n            this.spinner.parentElement.querySelector('.e-ftrchk.e-mask-ftrchk').style.cssText =\n                'width: 100%; height: ' + maskItemHeight + ';';\n            this.spinner.parentElement.querySelector('.e-checkbox-wrapper').style.width = '100%';\n            var maskSpan = [].slice.call(this.spinner.parentElement\n                .querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n            maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n            maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n        }\n        this.spinner.insertBefore(maskList, this.cBox);\n        for (var i = 0; maskRowCount && i < maskRowCount; i++) {\n            maskList.innerHTML += maskTemplate;\n            maskList.lastElementChild.style.cssText =\n                'width: 100%; height: ' + maskItemHeight + ';';\n            maskList.lastElementChild.querySelector('.e-checkbox-wrapper').style.width = '100%';\n            var maskSpan = [].slice.call(maskList\n                .querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n            maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n            maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n        }\n        if (this.cBox) {\n            maskList.scrollTop = this.cBox.scrollTop;\n        }\n    };\n    CheckBoxFilterBase.prototype.removeMask = function () {\n        var maskLists = this.dialogObj.element.querySelectorAll('.e-mask-ftrchk');\n        if (maskLists.length) {\n            for (var i = 0; i < maskLists.length; i++) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(maskLists[i]);\n            }\n        }\n        var maskParent = this.dialogObj.element.querySelector('.e-checkboxlist.e-masklist');\n        if (maskParent) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.dialogObj.element.querySelector('.e-checkboxlist.e-masklist'));\n        }\n    };\n    CheckBoxFilterBase.prototype.infiniteScrollHandler = function () {\n        var target = this.cBox;\n        if (target.scrollTop >= target.scrollHeight - target.offsetHeight && !this.infiniteQueryExecutionPending\n            && this.infiniteLoadedElem.length <= (this.infiniteSkipCnt + this.parent.filterSettings.itemsCount)\n            && this.cBox.children.length === this.parent.filterSettings.itemsCount * 3\n            && (!this.infiniteDataCount || this.infiniteDataCount > (this.infiniteSkipCnt + this.parent.filterSettings.itemsCount))) {\n            this.makeInfiniteScrollRequest();\n            this.prevInfiniteScrollDirection = 'down';\n        }\n        else if (target.scrollTop >= target.scrollHeight - target.offsetHeight && !this.infiniteQueryExecutionPending\n            && this.infiniteLoadedElem.length > (this.infiniteSkipCnt + this.parent.filterSettings.itemsCount)\n            && this.cBox.children.length === this.parent.filterSettings.itemsCount * 3) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.infiniteRemoveElements)(([].slice.call(this.cBox.children)).splice(0, this.parent.filterSettings.itemsCount));\n            this.infiniteSkipCnt += this.prevInfiniteScrollDirection === 'down' ? this.parent.filterSettings.itemsCount :\n                (this.parent.filterSettings.itemsCount * 3);\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.appendChildren)(this.cBox, this.infiniteLoadedElem.slice(this.infiniteSkipCnt, this.parent.filterSettings.itemsCount +\n                this.infiniteSkipCnt));\n            this.prevInfiniteScrollDirection = 'down';\n        }\n        else if (target.scrollTop === 0 && !this.infiniteInitialLoad && !this.infiniteSearchValChange && this.infiniteSkipCnt\n            && this.infiniteLoadedElem.length && this.infiniteLoadedElem.length > this.parent.filterSettings.itemsCount * 3\n            && this.cBox.children.length === this.parent.filterSettings.itemsCount * 3) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.infiniteRemoveElements)(([].slice.call(this.cBox.children)).splice((this.parent.filterSettings\n                .itemsCount * 2), this.parent.filterSettings.itemsCount));\n            this.infiniteSkipCnt -= this.prevInfiniteScrollDirection === 'up' ? this.parent.filterSettings.itemsCount :\n                (this.parent.filterSettings.itemsCount * 3);\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.infiniteAppendElements)([].slice.call(this.infiniteLoadedElem.slice(this.infiniteSkipCnt, this.infiniteSkipCnt +\n                this.parent.filterSettings.itemsCount)), this.cBox);\n            this.cBox.scrollTop = this.infiniteScrollAppendDiff;\n            this.prevInfiniteScrollDirection = 'up';\n        }\n        else if (target.scrollTop === 0 && !this.infiniteInitialLoad && !this.infiniteSearchValChange && this.infiniteSkipCnt\n            && this.infiniteLoadedElem.length && this.cBox.children.length < this.parent.filterSettings.itemsCount * 3) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.infiniteRemoveElements)(([].slice.call(this.cBox.children)).splice((this.parent.filterSettings\n                .itemsCount * 2), this.infiniteDataCount % this.parent.filterSettings.itemsCount));\n            this.infiniteSkipCnt = (Math.floor(this.infiniteDataCount / this.parent.filterSettings.itemsCount) - 3) *\n                this.parent.filterSettings.itemsCount;\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.infiniteAppendElements)([].slice.call(this.infiniteLoadedElem.slice(this.infiniteSkipCnt, this.infiniteSkipCnt +\n                this.parent.filterSettings.itemsCount)), this.cBox);\n            this.cBox.scrollTop = this.infiniteScrollAppendDiff;\n            this.prevInfiniteScrollDirection = 'up';\n        }\n    };\n    CheckBoxFilterBase.prototype.makeInfiniteScrollRequest = function (query) {\n        var _this = this;\n        if (!this.infiniteInitialLoad && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n            setTimeout(function () {\n                if (_this.infiniteQueryExecutionPending) {\n                    _this.showMask();\n                }\n            }, 500);\n        }\n        else if (!this.infiniteInitialLoad) {\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.createSpinner)({ target: this.spinner, cssClass: this.parent.cssClass ? this.parent.cssClass : null }, this.parent\n                .createElement);\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.showSpinner)(this.spinner);\n        }\n        var fName = 'fn';\n        if (this.infiniteQuery && this.infiniteQuery.queries && this.infiniteQuery.queries.length) {\n            for (var i = 0; i < this.infiniteQuery.queries.length; i++) {\n                if (this.infiniteQuery.queries[i][\"\" + fName] === 'onTake'\n                    || this.infiniteQuery.queries[i][\"\" + fName] === 'onSkip') {\n                    this.infiniteQuery.queries.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        var existQuery = query ? true : false;\n        query = query ? query : this.infiniteQuery;\n        if (this.infiniteInitialLoad || this.infiniteSearchValChange) {\n            this.infiniteSkipCnt = 0;\n        }\n        else {\n            this.infiniteSkipCnt += this.parent.filterSettings.itemsCount;\n        }\n        query.skip(this.infiniteSkipCnt);\n        if (this.infiniteInitialLoad || this.infiniteSearchValChange) {\n            query.take(this.parent.filterSettings.itemsCount * 3);\n            this.infiniteSkipCnt += this.parent.filterSettings.itemsCount * 2;\n        }\n        else {\n            query.take(this.parent.filterSettings.itemsCount);\n        }\n        if (!existQuery) {\n            if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n                var args = {\n                    requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterChoiceRequest, query: query, filterChoiceCount: null, filterModel: this\n                };\n                if (this.infiniteRenderMod && this.parent.filterSettings.itemsCount) {\n                    args.filterChoiceCount = this.parent.filterSettings.itemsCount;\n                }\n                this.filterEvent(args, query);\n            }\n            else {\n                this.processDataOperation(query);\n                this.infiniteQueryExecutionPending = true;\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.processDataOperation = function (query, isInitial) {\n        var _this = this;\n        this.options.dataSource = this.options.dataSource instanceof _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager ?\n            this.options.dataSource : new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(this.options.dataSource);\n        var allPromise = [];\n        var runArray = [];\n        if (this.isForeignColumn(this.options.column) && isInitial) {\n            var colData = ('result' in this.options.column.dataSource) ?\n                new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(this.options.column.dataSource.result) :\n                this.options.column.dataSource;\n            this.foreignKeyQuery.params = query.params;\n            allPromise.push(colData.executeQuery(this.foreignKeyQuery));\n            runArray.push(function (data) { return _this.foreignKeyData = data; });\n        }\n        this.addInfiniteScrollEvent(query);\n        if (this.infiniteRenderMod && this.infiniteInitialLoad && !this.options.isRemote) {\n            var field = this.isForeignColumn(this.options.column) ? this.options.foreignKeyValue :\n                this.options.column.field;\n            this.options.dataSource.executeQuery(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query().sortBy(field, _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__.DataUtil.fnAscending)).then(function (e) {\n                _this.options.dataSource.dataSource.json = e.result;\n                _this.executeQueryOperations(query, allPromise, runArray);\n            });\n        }\n        else {\n            this.executeQueryOperations(query, allPromise, runArray);\n        }\n    };\n    CheckBoxFilterBase.prototype.executeQueryOperations = function (query, allPromise, runArray) {\n        var _this = this;\n        allPromise.push(this.options.dataSource.executeQuery(query));\n        runArray.push(this.dataSuccess.bind(this));\n        var i = 0;\n        Promise.all(allPromise).then(function (e) {\n            _this.infiniteQueryExecutionPending = _this.infiniteRenderMod ? false : _this.infiniteQueryExecutionPending;\n            for (var j = 0; j < e.length; j++) {\n                _this.infiniteDataCount = _this.infiniteRenderMod && !_this.infiniteDataCount ? e[j].count : _this.infiniteDataCount;\n                runArray[i++](e[parseInt(j.toString(), 10)].result);\n            }\n        }).catch(function () {\n            if (_this.infiniteRenderMod && _this.parent.filterSettings && _this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n                _this.parent.showMaskRow(undefined, _this.dialogObj.element);\n            }\n        });\n    };\n    CheckBoxFilterBase.prototype.dataSuccess = function (e) {\n        if (!this.infiniteInitialLoad && this.infiniteDataCount && ((this.infiniteSkipCnt >= this.infiniteDataCount\n            && !this.infiniteSearchValChange) || (e.length === 0))) {\n            return;\n        }\n        this.fullData = e;\n        var args1 = { dataSource: this.fullData, executeQuery: true, field: this.options.field };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.beforeCheckboxRenderer, args1);\n        if (args1.executeQuery) {\n            var query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query();\n            if (!this.customQuery) {\n                this.isExecuteLocal = true;\n                this.queryGenerate(query);\n                this.isExecuteLocal = false;\n            }\n            // query.select(this.options.field);\n            var result = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(args1.dataSource).executeLocal(query);\n            var col = this.options.column;\n            this.filteredData = CheckBoxFilterBase.getDistinct(result, this.options.field, col, this.foreignKeyData, this).records || [];\n        }\n        var data = args1.executeQuery ? this.filteredData : args1.dataSource;\n        this.processDataSource(null, true, data, args1);\n        if ((this.infiniteRenderMod && this.infiniteInitialLoad) || !this.infiniteRenderMod) {\n            if (this.sInput) {\n                this.sInput.focus();\n            }\n            else if (this.dlg.querySelector('.e-chk-hidden') && this.dlg.querySelector('.e-ftrchk')) {\n                this.dlg.querySelector('.e-chk-hidden').focus();\n                this.dlg.querySelector('.e-ftrchk').classList.add('e-chkfocus');\n            }\n        }\n        if (this.infiniteInitialLoad || this.infiniteSearchValChange) {\n            this.infiniteInitialLoad = false;\n            this.infiniteSearchValChange = false;\n        }\n        var args = {\n            requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterAfterOpen,\n            columnName: this.options.field, columnType: this.options.type\n        };\n        var filterModel = 'filterModel';\n        args[\"\" + filterModel] = this;\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.cBoxFltrComplete, args);\n        if (this.isCheckboxFilterTemplate) {\n            (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.hideSpinner)(this.spinner);\n        }\n    };\n    CheckBoxFilterBase.prototype.queryGenerate = function (query) {\n        if (this.parent.searchSettings && this.parent.searchSettings.key.length) {\n            var moduleName = this.options.dataManager.adaptor.getModuleName;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.getDataModule) && moduleName && moduleName() === 'ODataV4Adaptor') {\n                this.parent.getDataModule().searchQuery(query);\n            }\n            else {\n                var searchSettings = this.parent.searchSettings;\n                var fields = searchSettings.fields.length ? searchSettings.fields\n                    : this.options.columns.map(function (f) { return f.field; });\n                query.search(searchSettings.key, fields, searchSettings.operator, searchSettings.ignoreCase, searchSettings.ignoreAccent);\n            }\n        }\n        if ((this.options.filteredColumns.length)) {\n            var cols = [];\n            for (var i = 0; i < this.options.filteredColumns.length; i++) {\n                var filterColumn = this.options.filteredColumns[parseInt(i.toString(), 10)];\n                if (this.options.uid) {\n                    filterColumn.uid = filterColumn.uid || this.parent.getColumnByField(filterColumn.field).uid;\n                    if (filterColumn.uid !== this.options.uid) {\n                        cols.push(this.options.filteredColumns[parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    if (filterColumn.field !== this.options.field) {\n                        cols.push(this.options.filteredColumns[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            var predicate = this.getPredicateFromCols(cols, this.isExecuteLocal);\n            if (predicate) {\n                query.where(predicate);\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.processDataSource = function (query, isInitial, dataSource, args) {\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.showSpinner)(this.spinner);\n        // query = query ? query : this.options.query.clone();\n        // query.requiresCount();\n        // let result: Object = new DataManager(dataSource as JSON[]).executeLocal(query);\n        // let res: { result: Object[] } = result as { result: Object[] };\n        this.isExecuteLocal = true;\n        this.updateResult();\n        this.isExecuteLocal = false;\n        var args1 = { dataSource: this.fullData, isCheckboxFilterTemplate: false, column: this.options.column,\n            element: this.cBox, type: this.options.type, format: this.options.type, btnObj: this.options.isResponsiveFilter ? null :\n                this.dialogObj.btnObj[0], searchBox: this.searchBox };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.beforeCheckboxfilterRenderer, args1);\n        this.isCheckboxFilterTemplate = args1.isCheckboxFilterTemplate;\n        if (!this.isCheckboxFilterTemplate) {\n            this.createFilterItems(dataSource, isInitial, args);\n        }\n        else if (this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n            this.removeMask();\n        }\n    };\n    CheckBoxFilterBase.prototype.processSearch = function (query) {\n        this.processDataOperation(query);\n    };\n    CheckBoxFilterBase.prototype.updateResult = function () {\n        this.result = {};\n        var predicate = this.infiniteRenderMod && this.existingPredicate[this.options.field] ?\n            this.getPredicateFromCols(this.existingPredicate[this.options.field], this.isExecuteLocal) :\n            this.getPredicateFromCols(this.options.filteredColumns, this.isExecuteLocal);\n        var query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query();\n        if (predicate) {\n            query.where(predicate);\n        }\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.beforeCheckboxRendererQuery, { query: query });\n        var result = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(this.fullData).executeLocal(query);\n        for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\n            var res = result_1[_i];\n            this.result[(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getObject)(this.options.field, res)] = true;\n        }\n    };\n    CheckBoxFilterBase.prototype.clickHandler = function (e) {\n        var _a;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_base_util__WEBPACK_IMPORTED_MODULE_8__.Global.timer)) {\n            clearTimeout(_base_util__WEBPACK_IMPORTED_MODULE_8__.Global.timer);\n        }\n        var target = e.target;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer'\n            && (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(target, 'e-mask-ftrchk')) {\n            return;\n        }\n        var elem = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(target, 'e-checkbox-wrapper');\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(target, 'e-searchbox')) {\n            this.searchBoxClick(e);\n        }\n        if (elem && !this.isCheckboxFilterTemplate) {\n            var selectAll = elem.querySelector('.e-selectall');\n            if (selectAll) {\n                this.updateAllCBoxes(!selectAll.classList.contains('e-check'));\n            }\n            else {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.toogleCheckbox)(elem.parentElement);\n                if (this.infiniteRenderMod && !elem.parentElement.querySelector('.e-add-current')) {\n                    this.localInfiniteSelectionInteracted = true;\n                    var caseSen = this.options.allowCaseSensitive;\n                    var span = elem.parentElement.querySelector('.e-frame');\n                    var input = span.previousSibling;\n                    var optr = input.checked ? 'equal' : 'notequal';\n                    var pred = input.checked ? 'or' : 'and';\n                    var defaults = { field: this.options.field, predicate: pred, uid: this.options.uid,\n                        operator: optr, type: this.options.type, matchCase: caseSen, ignoreAccent: this.options.ignoreAccent\n                    };\n                    var value = this.values[(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(input, 'e-ftrchk').getAttribute('uid')];\n                    this.updateInfiniteManualSelectPred(defaults, value);\n                    if (this.infiniteRenderMod && !this.options.isRemote && this.options.parentTotalDataCount\n                        && this.infiniteUnloadParentExistPred.length) {\n                        var predicate = this.getPredicateFromCols((_a = this.options.filteredColumns).concat.apply(_a, this.infiniteManualSelectMaintainPred), true);\n                        var query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query();\n                        if (predicate) {\n                            query.where(predicate);\n                        }\n                        var result = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(this.infinitePermenantLocalData).executeLocal(query);\n                        if (this.options.parentTotalDataCount !== result.length) {\n                            this.options.parentTotalDataCount = result.length;\n                        }\n                        if (!this.options.parentTotalDataCount && this.infiniteUnloadParentExistPred.length) {\n                            this.infiniteUnloadParentExistPred = [];\n                        }\n                    }\n                    if (this.infiniteUnloadParentExistPred.length && (this.options.parentTotalDataCount === this.infiniteDataCount\n                        || !this.options.parentTotalDataCount)) {\n                        this.infiniteUnloadParentExistPred = [];\n                    }\n                }\n            }\n            this.updateIndeterminatenBtn();\n            elem.querySelector('.e-chk-hidden').focus();\n        }\n        this.setFocus((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(elem, 'e-ftrchk'));\n    };\n    CheckBoxFilterBase.prototype.updateInfiniteManualSelectPred = function (defaults, value) {\n        for (var i = 0; i < this.infiniteManualSelectMaintainPred.length; i++) {\n            var predmdl = this.infiniteManualSelectMaintainPred[i];\n            if (predmdl.value + '' === value + '' && (predmdl.operator === 'equal' || predmdl.operator === 'notequal')) {\n                this.infiniteManualSelectMaintainPred.splice(i, 1);\n                break;\n            }\n        }\n        if ((defaults.predicate === 'or' && (!this.localInfiniteSelectAllClicked || !this.infiniteLocalSelectAll))\n            || (defaults.predicate === 'and' && (!this.localInfiniteSelectAllClicked || this.infiniteLocalSelectAll))) {\n            this.infiniteManualSelectMaintainPred.push((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, { value: value }, defaults));\n            if (defaults.predicate === 'or') {\n                this.options.parentTotalDataCount++;\n            }\n            else {\n                this.options.parentTotalDataCount--;\n            }\n        }\n    };\n    /**\n     * Method to set the next target element on keyboard navigation using arrow keys.\n     *\n     * @param {KeyboardEventArgs} e - Defines the Keyboard event argument\n     * @param {HTMLElement[]} focusableElements - Defines the Focusable elements\n     * @returns {void}\n     */\n    CheckBoxFilterBase.prototype.focusNextOrPrev = function (e, focusableElements) {\n        var nextIndex = (e.key === 'ArrowUp') ? focusableElements.indexOf(document.activeElement) - 1\n            : focusableElements.indexOf(document.activeElement) + 1;\n        var nextElement = focusableElements[((nextIndex + focusableElements.length) % focusableElements.length)];\n        // Set focus on the next / previous element\n        if (nextElement) {\n            nextElement.focus();\n            var target = nextElement.classList.contains('e-chk-hidden') ? (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(nextElement, 'e-ftrchk') : nextElement;\n            this.setFocus(target);\n        }\n    };\n    CheckBoxFilterBase.prototype.keyupHandler = function (e) {\n        if (e.key === 'Tab' || ((e.key === 'ArrowUp' || e.key === 'ArrowDown') && !e.altKey)) {\n            this.setFocus((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.parentsUntil)(e.target, 'e-ftrchk'));\n        }\n        if ((e.key === 'ArrowUp' || e.key === 'ArrowDown') && !e.altKey && this.parent.filterSettings\n            && this.parent.filterSettings.type === 'CheckBox') {\n            e.preventDefault();\n            var focusableElements = Array.from(this.dlg.querySelectorAll('input, button, [tabindex]:not([tabindex=\"-1\"])'));\n            this.focusNextOrPrev(e, focusableElements);\n        }\n    };\n    CheckBoxFilterBase.prototype.setFocus = function (elem) {\n        var prevElem = this.dlg.querySelector('.e-chkfocus');\n        if (prevElem) {\n            prevElem.classList.remove('e-chkfocus');\n        }\n        if (elem && elem !== prevElem) {\n            elem.classList.add('e-chkfocus');\n        }\n    };\n    CheckBoxFilterBase.prototype.updateAllCBoxes = function (checked) {\n        if (this.infiniteRenderMod) {\n            this.localInfiniteSelectAllClicked = true;\n            this.infiniteLocalSelectAll = checked;\n            this.infiniteUnloadParentExistPred = [];\n            this.infiniteManualSelectMaintainPred = [];\n        }\n        var cBoxes = this.infiniteRenderMod ?\n            this.infiniteLoadedElem.map(function (arr) {\n                return arr.querySelector('.e-frame');\n            }) : [].slice.call(this.cBox.querySelectorAll('.e-frame:not(.e-add-current)'));\n        for (var _i = 0, cBoxes_1 = cBoxes; _i < cBoxes_1.length; _i++) {\n            var cBox = cBoxes_1[_i];\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.removeAddCboxClasses)(cBox, checked);\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.setChecked)(cBox.previousSibling, checked);\n        }\n    };\n    CheckBoxFilterBase.prototype.dialogOpen = function () {\n        if (this.parent.element.classList.contains('e-device')) {\n            this.dialogObj.element.querySelector('.e-input-group').classList.remove('e-input-focus');\n            if (!this.options.isResponsiveFilter) {\n                this.dialogObj.element.querySelector('.e-btn').focus();\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.createCheckbox = function (value, checked, data) {\n        var elem = checked ? this.cBoxTrue.cloneNode(true) :\n            this.cBoxFalse.cloneNode(true);\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.setChecked)(elem.querySelector('input'), checked);\n        var label = elem.querySelector('.e-label');\n        var dummyData = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.extendObjWithFn)({}, data, { column: this.options.column, parent: this.parent });\n        var innerText = this.options.disableHtmlEncode ? 'textContent' : 'innerHTML';\n        label[\"\" + innerText] = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) && value.toString().length ?\n            this.parent.enableHtmlSanitizer ? _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlHelper.sanitize(value) : value : this.getLocalizedLabel('Blanks');\n        var checkboxUid = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getUid)('cbox');\n        label.setAttribute('id', checkboxUid + 'cboxLabel');\n        elem.querySelector('input').setAttribute('aria-labelledby', label.id);\n        if (label.innerHTML === this.getLocalizedLabel('Blanks')) {\n            this.isBlanks = true;\n        }\n        if (typeof value === 'boolean') {\n            label.innerHTML = value === true ? this.getLocalizedLabel('FilterTrue') : this.getLocalizedLabel('FilterFalse');\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([label], ['e-checkboxfiltertext']);\n        if (this.options.template && data[this.options.column.field] !== this.getLocalizedLabel('SelectAll')\n            && data[this.options.column.field] !== this.getLocalizedLabel('AddCurrentSelection')) {\n            label.innerHTML = '';\n            var isReactCompiler = this.parent.isReact && this.options.column.filter\n                && typeof (this.options.column.filter.itemTemplate) !== 'string' &&\n                !(this.options.column.filter.itemTemplate.prototype && this.options.column.filter.itemTemplate.prototype.CSPTemplate);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this.parent.parentDetails.parentInstObj.isReact;\n            if (isReactCompiler || isReactChild) {\n                this.options.template(dummyData, this.parent, 'filterItemTemplate', null, null, null, label);\n                this.parent.renderTemplates();\n            }\n            else {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.appendChildren)(label, this.options.template(dummyData, this.parent, 'filterItemTemplate', null, null, null, null, this.parent.root));\n            }\n        }\n        return elem;\n    };\n    CheckBoxFilterBase.prototype.updateIndeterminatenBtn = function () {\n        var cnt = this.infiniteRenderMod ? this.infiniteLoadedElem.length : this.cBox.children.length - 1;\n        var className = [];\n        var disabled = false;\n        var elem = this.infiniteRenderMod ? this.sBox.querySelector('.e-selectall') : this.cBox.querySelector('.e-selectall');\n        var selected = this.infiniteRenderMod ? this.infiniteLoadedElem.filter(function (arr) { return arr.querySelector('.e-check'); }).length :\n            this.cBox.querySelectorAll('.e-check:not(.e-selectall):not(.e-add-current)').length;\n        if (this.cBox.querySelector('.e-add-current')) {\n            cnt -= 1;\n        }\n        var btn;\n        if (!this.options.isResponsiveFilter) {\n            btn = this.dialogObj.btnObj[0];\n            btn.disabled = false;\n        }\n        var input = elem.previousSibling;\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.setChecked)(input, false);\n        input.indeterminate = false;\n        if (this.infiniteRenderMod && this.sInput.value === '' && !this.options.parentCurrentViewDataCount && !this.localInfiniteSelectionInteracted\n            && (!this.localInfiniteSelectAllClicked || (!this.infiniteLocalSelectAll && !selected)) && (cnt !== selected || cnt === selected)) {\n            selected = 0;\n        }\n        else if (this.infiniteRenderMod && this.infiniteLoadedElem.length < this.infiniteDataCount\n            && this.infiniteUnloadParentExistPred.length && (!selected || cnt === selected) && this.infiniteLocalSelectAll) {\n            if (!selected) {\n                selected += this.infiniteUnloadParentExistPred.length;\n            }\n            else {\n                cnt += this.infiniteUnloadParentExistPred.length;\n            }\n        }\n        if (cnt === selected) {\n            if (this.infiniteRenderMod) {\n                this.infiniteLocalSelectAll = true;\n                this.localInfiniteSelectAllClicked = true;\n                this.infiniteManualSelectMaintainPred = [];\n            }\n            className = ['e-check'];\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.setChecked)(input, true);\n        }\n        else if (selected) {\n            className = ['e-stop'];\n            input.indeterminate = true;\n        }\n        else {\n            if (this.infiniteRenderMod) {\n                this.infiniteLocalSelectAll = false;\n                this.localInfiniteSelectAllClicked = true;\n                this.infiniteManualSelectMaintainPred = [];\n            }\n            className = ['e-uncheck'];\n            disabled = true;\n            if (btn) {\n                btn.disabled = true;\n            }\n        }\n        if (btn) {\n            this.filterState = !btn.disabled;\n            btn.dataBind();\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([elem], ['e-check', 'e-stop', 'e-uncheck']);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([elem], className);\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.refreshCustomFilterOkBtn, { disabled: disabled });\n    };\n    CheckBoxFilterBase.prototype.createFilterItems = function (data, isInitial, args1) {\n        var _a, _b, _c;\n        var cBoxes = this.parent.createElement('div');\n        var btn;\n        var disabled = false;\n        if (!this.options.isResponsiveFilter) {\n            btn = this.dialogObj.btnObj[0];\n        }\n        var nullCounter = -1;\n        var key = 'ejValue';\n        if (!args1.executeQuery) {\n            key = args1.field;\n        }\n        for (var i = 0; i < data.length; i++) {\n            var val = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(key, data[parseInt(i.toString(), 10)]);\n            if (val === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val)) {\n                nullCounter = nullCounter + 1;\n            }\n        }\n        if (!this.infiniteRenderMod) {\n            this.itemsCnt = nullCounter !== -1 ? data.length - nullCounter : data.length;\n        }\n        if (this.infiniteRenderMod && this.parent.filterSettings && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n            this.removeMask();\n        }\n        if (data.length && !this.renderEmpty) {\n            var selectAllValue = this.getLocalizedLabel('SelectAll');\n            var innerDiv = this.cBox.querySelector('.e-checkfltrnmdiv');\n            if (innerDiv) {\n                innerDiv.classList.remove('e-checkfltrnmdiv');\n            }\n            var checkBox = this.createCheckbox(selectAllValue, false, (_a = {}, _a[this.options.field] = selectAllValue, _a));\n            if (this.parent.cssClass) {\n                if (this.parent.cssClass.indexOf(' ') !== -1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([checkBox], this.parent.cssClass.split(' '));\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([checkBox], [this.parent.cssClass]);\n                }\n            }\n            if (this.infiniteInitialLoad || !this.infiniteRenderMod) {\n                var selectAll = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.createCboxWithWrap)((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getUid)('cbox'), checkBox, 'e-ftrchk');\n                selectAll.querySelector('.e-frame').classList.add('e-selectall');\n                if (this.infiniteRenderMod) {\n                    selectAll.classList.add('e-infinitescroll');\n                    if (this.parent.enableAdaptiveUI) {\n                        this.spinner.style.height = (this.spinner.offsetHeight - (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getListHeight)(this.cBox)) + 'px';\n                    }\n                    this.sBox.insertBefore(selectAll, this.spinner);\n                }\n                else {\n                    cBoxes.appendChild(selectAll);\n                }\n            }\n            else if (this.sBox.querySelector('.e-ftrchk .e-selectall')) {\n                this.sBox.querySelector('.e-ftrchk .e-selectall').previousSibling.disabled = false;\n                this.sBox.querySelector('.e-ftrchk .e-selectall').parentElement.classList.remove('e-checkbox-disabled');\n            }\n            var predicate = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Predicate('field', 'equal', this.options.field);\n            if (this.options.foreignKeyValue) {\n                predicate = predicate.or('field', 'equal', this.options.foreignKeyValue);\n            }\n            var isColFiltered = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(this.options.filteredColumns).executeLocal(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query().where(predicate)).length;\n            if (this.sInput && this.sInput.value) {\n                var predicateCheckBox = this.createCheckbox(this.getLocalizedLabel('AddCurrentSelection'), false, (_b = {},\n                    _b[this.options.field] = this.getLocalizedLabel('AddCurrentSelection'),\n                    _b));\n                if (this.parent.cssClass) {\n                    if (this.parent.cssClass.indexOf(' ') !== -1) {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([predicateCheckBox], this.parent.cssClass.split(' '));\n                    }\n                    else {\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([predicateCheckBox], [this.parent.cssClass]);\n                    }\n                }\n                if ((this.infiniteRenderMod && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sBox.children[2])\n                    && this.sBox.children[2].innerText !== this.getLocalizedLabel('AddCurrentSelection'))) || !this.infiniteRenderMod) {\n                    var predicateElement = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.createCboxWithWrap)((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getUid)('cbox'), predicateCheckBox, 'e-ftrchk');\n                    predicateElement.querySelector('.e-frame').classList.add('e-add-current');\n                    if (this.infiniteRenderMod) {\n                        predicateElement.classList.add('e-infinitescroll');\n                        this.sBox.insertBefore(predicateElement, this.spinner);\n                        var checkBoxListElem = this.spinner.querySelector('.e-checkboxlist');\n                        var reduceHeight = Math.ceil(predicateElement.getBoundingClientRect().height);\n                        checkBoxListElem.style.height = (parseInt(getComputedStyle(checkBoxListElem).height.split('px')[0], 10) - reduceHeight)\n                            + 'px';\n                        checkBoxListElem.style.minHeight = checkBoxListElem.style.height;\n                    }\n                    else {\n                        cBoxes.appendChild(predicateElement);\n                    }\n                }\n                else if (this.sBox.querySelector('.e-ftrchk .e-add-current')) {\n                    this.sBox.querySelector('.e-ftrchk .e-add-current').previousSibling.disabled = false;\n                    this.sBox.querySelector('.e-ftrchk .e-add-current').parentElement.classList.remove('e-checkbox-disabled');\n                }\n            }\n            else if (this.infiniteRenderMod && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.sBox.children[2])\n                && this.sBox.children[2].innerText === this.getLocalizedLabel('AddCurrentSelection')) {\n                var checkBoxListElem = this.spinner.querySelector('.e-checkboxlist');\n                var increaseHeight = Math.ceil(this.sBox.children[2].getBoundingClientRect().height);\n                checkBoxListElem.style.height = (parseInt(getComputedStyle(checkBoxListElem).height.split('px')[0], 10) + increaseHeight)\n                    + 'px';\n                checkBoxListElem.style.minHeight = checkBoxListElem.style.height;\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.sBox.children[2]);\n            }\n            var isRndere = void 0;\n            for (var i = 0; i < data.length; i++) {\n                var uid = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getUid)('cbox');\n                this.values[\"\" + uid] = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(key, data[parseInt(i.toString(), 10)]);\n                var value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(this.options.field, data[parseInt(i.toString(), 10)]);\n                if (this.options.formatFn) {\n                    value = this.valueFormatter.toView(value, this.options.formatFn);\n                }\n                var args_1 = { value: value, column: this.options.column, data: data[parseInt(i.toString(), 10)] };\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.filterCboxValue, args_1);\n                value = args_1.value;\n                if ((value === '' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value))) {\n                    if (isRndere) {\n                        continue;\n                    }\n                    isRndere = true;\n                }\n                if (this.infiniteRenderMod) {\n                    this.updateInfiniteUnLoadedCheckboxExistPred(value, this.infiniteUnloadParentExistPred);\n                }\n                var checkbox = this.localInfiniteSelectAllClicked ?\n                    this.createCheckbox(value, this.infiniteLocalSelectAll, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('dataObj', data[i])) :\n                    this.createCheckbox(value, this.getCheckedState(isColFiltered, this.values[\"\" + uid]), (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)('dataObj', data[i]));\n                cBoxes.appendChild((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.createCboxWithWrap)(uid, checkbox, 'e-ftrchk'));\n                if (this.infiniteRenderMod) {\n                    cBoxes.lastChild.style.height = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getListHeight)(this.cBox) + 'px';\n                }\n            }\n            var scrollTop = this.cBox.scrollTop;\n            if (!this.infiniteRenderMod || this.infiniteSearchValChange) {\n                this.cBox.innerHTML = '';\n            }\n            else if (this.infiniteRenderMod && this.cBox.children.length) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.infiniteRemoveElements)(([].slice.call(this.cBox.children)).splice(0, this.parent.filterSettings.itemsCount));\n            }\n            if (this.infiniteRenderMod) {\n                (_c = this.infiniteLoadedElem).push.apply(_c, [].slice.call(cBoxes.children));\n                this.itemsCnt = nullCounter !== -1 ? this.infiniteLoadedElem.length - nullCounter : this.infiniteLoadedElem.length;\n            }\n            if (this.infiniteUnloadParentExistPred.length && (this.infiniteLoadedElem.length >= this.infiniteDataCount\n                || !this.options.parentCurrentViewDataCount || (this.options.parentTotalDataCount === this.infiniteDataCount\n                && this.options.parentCurrentViewDataCount))) {\n                this.infiniteUnloadParentExistPred = [];\n            }\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.appendChildren)(this.cBox, [].slice.call(cBoxes.children));\n            if (this.infiniteRenderMod && !this.infiniteScrollAppendDiff) {\n                this.infiniteScrollAppendDiff = Math.round(scrollTop - this.cBox.scrollTop);\n            }\n            this.updateIndeterminatenBtn();\n            if (!this.infiniteRenderMod) {\n                if (btn) {\n                    btn.disabled = false;\n                }\n                disabled = false;\n            }\n            else {\n                if (btn && btn.disabled) {\n                    disabled = true;\n                }\n                else {\n                    disabled = false;\n                }\n            }\n        }\n        else {\n            cBoxes.appendChild(this.parent.createElement('span', { innerHTML: this.getLocalizedLabel('NoResult') }));\n            this.cBox.innerHTML = '';\n            if (this.infiniteRenderMod) {\n                var selectAll = this.sBox.querySelector('.e-ftrchk .e-selectall');\n                if (selectAll) {\n                    var selectAllParent = selectAll.parentElement.parentElement;\n                    if (selectAll.classList.contains('e-check')) {\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.toogleCheckbox)(selectAllParent);\n                    }\n                    else if (selectAll.classList.contains('e-stop')) {\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.toogleCheckbox)(selectAllParent);\n                        selectAll.classList.remove('e-stop');\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.toogleCheckbox)(selectAllParent);\n                    }\n                    selectAll.previousSibling.disabled = true;\n                    selectAll.parentElement.classList.add('e-checkbox-disabled');\n                }\n                var addCurrSelection = this.sBox.querySelector('.e-ftrchk .e-add-current');\n                if (addCurrSelection) {\n                    var addCurrSelectionParent = addCurrSelection.parentElement.parentElement;\n                    if (addCurrSelection.classList.contains('e-check')) {\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.toogleCheckbox)(addCurrSelectionParent);\n                    }\n                    addCurrSelection.previousSibling.disabled = true;\n                    addCurrSelection.parentElement.classList.add('e-checkbox-disabled');\n                }\n            }\n            this.cBox.appendChild(this.parent.createElement('div', { className: 'e-checkfltrnmdiv' }));\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.appendChildren)(this.cBox.children[0], [].slice.call(cBoxes.children));\n            if (btn) {\n                btn.disabled = true;\n            }\n            disabled = true;\n            this.filterState = !disabled;\n        }\n        if (btn && data.length) {\n            this.filterState = !btn.disabled;\n            btn.dataBind();\n        }\n        var args = { requestType: _base_constant__WEBPACK_IMPORTED_MODULE_4__.filterChoiceRequest, dataSource: this.renderEmpty ? [] : data };\n        var filterModel = 'filterModel';\n        args[\"\" + filterModel] = this;\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.cBoxFltrComplete, args);\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_4__.refreshCustomFilterOkBtn, { disabled: disabled });\n        if (this.infiniteRenderMod && this.infiniteInitialLoad) {\n            this.cBox.style.marginTop = '0px';\n        }\n        (0,_syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_9__.hideSpinner)(this.spinner);\n    };\n    CheckBoxFilterBase.prototype.updateInfiniteUnLoadedCheckboxExistPred = function (value, updatePredArr) {\n        for (var j = 0; j < updatePredArr.length; j++) {\n            var pred = updatePredArr[j];\n            var predValue = pred.value instanceof Date ?\n                this.valueFormatter.toView(pred.value, this.options.formatFn) : pred.value;\n            var column = this.options.column;\n            if (column.isForeignColumn()) {\n                var foreignDataObj = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getForeignData)(column, {}, predValue, this.foreignKeyData)[0];\n                value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(column.foreignKeyField, foreignDataObj);\n            }\n            if (value === predValue && (pred.operator === 'equal' || pred.operator === 'notequal')) {\n                this.infiniteManualSelectMaintainPred.push(updatePredArr[j]);\n                updatePredArr.splice(j, 1);\n                j--;\n            }\n        }\n    };\n    CheckBoxFilterBase.prototype.getCheckedState = function (isColFiltered, value) {\n        if (!this.isFiltered || !isColFiltered) {\n            return true;\n        }\n        else {\n            var checkState = this.sInput && this.sInput.value ? true : this.result[\"\" + value];\n            if (this.infiniteRenderMod) {\n                return checkState;\n            }\n            else {\n                return this.options.operator === 'notequal' ? !checkState : checkState;\n            }\n        }\n    };\n    CheckBoxFilterBase.getDistinct = function (json, field, column, foreignKeyData, checkboxFilter) {\n        var len = json.length;\n        var result = [];\n        var value;\n        var ejValue = 'ejValue';\n        var lookup = {};\n        var isForeignKey = column && column.isForeignColumn ? column.isForeignColumn() : false;\n        while (len--) {\n            value = json[parseInt(len.toString(), 10)];\n            if (column && column.type === 'dateonly' && typeof value[\"\" + field] === 'string' && value[\"\" + field]) {\n                var arr = value[\"\" + field].split(/[^0-9.]/);\n                value[\"\" + field] = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10));\n            }\n            value = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getObject)(field, value); //local remote diff, check with mdu\n            var currentFilterValue = (typeof value === 'string') && !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkboxFilter)) &&\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkboxFilter.parent)) && !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkboxFilter.parent.filterSettings)) &&\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                !((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(checkboxFilter.parent.filterSettings.enableCaseSensitivity)) ? value.toLowerCase() : value;\n            if (!(currentFilterValue in lookup)) {\n                var obj = {};\n                obj[\"\" + ejValue] = value;\n                lookup[\"\" + currentFilterValue] = true;\n                if (isForeignKey) {\n                    var foreignDataObj = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getForeignData)(column, {}, value, foreignKeyData)[0];\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(_base_constant__WEBPACK_IMPORTED_MODULE_4__.foreignKeyData, foreignDataObj, json[parseInt(len.toString(), 10)]);\n                    value = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(column.foreignKeyValue, foreignDataObj);\n                }\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(field, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) ? null : value, obj);\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('dataObj', json[parseInt(len.toString(), 10)], obj);\n                result.push(obj);\n            }\n        }\n        return _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__.DataUtil.group(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__.DataUtil.sort(result, field, _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__.DataUtil.fnAscending), 'ejValue');\n    };\n    CheckBoxFilterBase.getPredicate = function (columns, isExecuteLocal) {\n        var cols = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_10__.DataUtil.distinct(columns, 'field', true) || [];\n        var collection = [];\n        var pred = {};\n        for (var i = 0; i < cols.length; i++) {\n            collection = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(columns).executeLocal(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Query().where('field', 'equal', cols[parseInt(i.toString(), 10)].field));\n            if (collection.length !== 0) {\n                pred[cols[parseInt(i.toString(), 10)].field] = CheckBoxFilterBase.generatePredicate(collection, isExecuteLocal);\n            }\n        }\n        return pred;\n    };\n    CheckBoxFilterBase.generatePredicate = function (cols, isExecuteLocal) {\n        var len = cols ? cols.length : 0;\n        var predicate;\n        var operate = 'or';\n        var first = CheckBoxFilterBase.updateDateFilter(cols[0]);\n        first.ignoreAccent = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(first.ignoreAccent) ? first.ignoreAccent : false;\n        if (first.type === 'date' || first.type === 'datetime' || first.type === 'dateonly') {\n            predicate = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getDatePredicate)(first, first.type, isExecuteLocal);\n        }\n        else {\n            predicate = first.ejpredicate ? first.ejpredicate :\n                new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Predicate(first.field, first.operator, first.value, !CheckBoxFilterBase.getCaseValue(first), first.ignoreAccent);\n        }\n        for (var p = 1; p < len; p++) {\n            cols[parseInt(p.toString(), 10)] = CheckBoxFilterBase.updateDateFilter(cols[parseInt(p.toString(), 10)]);\n            if (len > 2 && p > 1 && ((cols[p].predicate === 'or' && cols[p - 1].predicate === 'or')\n                || (cols[p].predicate === 'and' && cols[p - 1].predicate === 'and'))) {\n                if (cols[p].type === 'date' || cols[p].type === 'datetime' || cols[p].type === 'dateonly') {\n                    predicate.predicates.push((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getDatePredicate)(cols[parseInt(p.toString(), 10)], cols[p].type, isExecuteLocal));\n                }\n                else {\n                    predicate.predicates.push(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_1__.Predicate(cols[p].field, cols[parseInt(p.toString(), 10)].operator, cols[parseInt(p.toString(), 10)].value, !CheckBoxFilterBase.getCaseValue(cols[parseInt(p.toString(), 10)]), cols[parseInt(p.toString(), 10)].ignoreAccent));\n                }\n            }\n            else {\n                if (cols[p].type === 'date' || cols[p].type === 'datetime' || cols[p].type === 'dateonly') {\n                    if (cols[parseInt(p.toString(), 10)].predicate === 'and' && cols[parseInt(p.toString(), 10)].operator === 'equal') {\n                        predicate = predicate[\"\" + operate]((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getDatePredicate)(cols[parseInt(p.toString(), 10)], cols[parseInt(p.toString(), 10)].type, isExecuteLocal), cols[parseInt(p.toString(), 10)].type, cols[parseInt(p.toString(), 10)].ignoreAccent);\n                    }\n                    else {\n                        predicate = predicate[(cols[parseInt(p.toString(), 10)].predicate)]((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getDatePredicate)(cols[parseInt(p.toString(), 10)], cols[parseInt(p.toString(), 10)].type, isExecuteLocal), cols[parseInt(p.toString(), 10)].type, cols[parseInt(p.toString(), 10)].ignoreAccent);\n                    }\n                }\n                else {\n                    predicate = cols[parseInt(p.toString(), 10)].ejpredicate ?\n                        predicate[cols[parseInt(p.toString(), 10)]\n                            .predicate](cols[parseInt(p.toString(), 10)].ejpredicate) :\n                        predicate[(cols[parseInt(p.toString(), 10)].predicate)](cols[parseInt(p.toString(), 10)].field, cols[parseInt(p.toString(), 10)].operator, cols[parseInt(p.toString(), 10)].value, !CheckBoxFilterBase.getCaseValue(cols[parseInt(p.toString(), 10)]), cols[parseInt(p.toString(), 10)].ignoreAccent);\n                }\n            }\n        }\n        return predicate || null;\n    };\n    CheckBoxFilterBase.getCaseValue = function (filter) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filter.matchCase)) {\n            if (filter.type === 'string' || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filter.type) && typeof (filter.value) === 'string') {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            return filter.matchCase;\n        }\n    };\n    CheckBoxFilterBase.updateDateFilter = function (filter) {\n        if ((filter.type === 'date' || filter.type === 'datetime' || filter.type === 'dateonly' || filter.value instanceof Date)) {\n            filter.type = filter.type || 'date';\n        }\n        return filter;\n    };\n    return CheckBoxFilterBase;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/common/checkbox-filter-base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/aggregate.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/aggregate.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AggregateColumn: () => (/* binding */ AggregateColumn),\n/* harmony export */   AggregateRow: () => (/* binding */ AggregateRow)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n/**\n * Configures the Grid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @param {Function} value - specifies the value\n     * @returns {void}\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (value) {\n        this.formatFn = value;\n    };\n    /**\n     * @returns {Function} returns the Function\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - specifies the helper\n     * @returns {void}\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType, _base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType.Summary)] = { fn: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n        if (this.groupFooterTemplate !== undefined) {\n            this.templateFn[(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType, _base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType.GroupSummary)] = { fn: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(this.groupFooterTemplate, helper),\n                property: 'groupFooterTemplate' };\n        }\n        if (this.groupCaptionTemplate !== undefined) {\n            this.templateFn[(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType, _base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType.CaptionSummary)] = { fn: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(this.groupCaptionTemplate, helper),\n                property: 'groupCaptionTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType, type)];\n    };\n    /**\n     * @param {Object} prop - returns the Object\n     * @returns {void}\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], AggregateColumn.prototype, \"groupFooterTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], AggregateColumn.prototype, \"groupCaptionTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n/**\n * Configures the aggregate rows.\n */\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Collection)([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    return AggregateRow;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/aggregate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/cell.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/cell.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cell: () => (/* binding */ Cell)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n\n/**\n * Cell\n *\n * @hidden\n */\nvar Cell = /** @class */ (function () {\n    function Cell(options) {\n        this.isSpanned = false;\n        this.isRowSpanned = false;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(this, options);\n    }\n    Cell.prototype.clone = function () {\n        var cell = new Cell({});\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(cell, this);\n        return cell;\n    };\n    return Cell;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9tb2RlbHMvY2VsbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDJEQUFLO0FBQ2I7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixRQUFRLDJEQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlfdHJhdmVsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzeW5jZnVzaW9uK2VqMi1ncmlkc0AyOS4xLjQwL25vZGVfbW9kdWxlcy9Ac3luY2Z1c2lvbi9lajItZ3JpZHMvc3JjL2dyaWQvbW9kZWxzL2NlbGwuanM/NGFjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZXJnZSB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1iYXNlJztcbi8qKlxuICogQ2VsbFxuICpcbiAqIEBoaWRkZW5cbiAqL1xudmFyIENlbGwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ2VsbChvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuaXNTcGFubmVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNSb3dTcGFubmVkID0gZmFsc2U7XG4gICAgICAgIG1lcmdlKHRoaXMsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBDZWxsLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGNlbGwgPSBuZXcgQ2VsbCh7fSk7XG4gICAgICAgIG1lcmdlKGNlbGwsIHRoaXMpO1xuICAgICAgICByZXR1cm4gY2VsbDtcbiAgICB9O1xuICAgIHJldHVybiBDZWxsO1xufSgpKTtcbmV4cG9ydCB7IENlbGwgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column-chooser-settings.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column-chooser-settings.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ColumnChooserSettings: () => (/* binding */ ColumnChooserSettings)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n/**\n * Configures the column chooser behavior of the Grid.\n */\nvar ColumnChooserSettings = /** @class */ (function (_super) {\n    __extends(ColumnChooserSettings, _super);\n    function ColumnChooserSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('startsWith')\n    ], ColumnChooserSettings.prototype, \"operator\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], ColumnChooserSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ColumnChooserSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ColumnChooserSettings.prototype, \"template\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ColumnChooserSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], ColumnChooserSettings.prototype, \"enableSearching\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], ColumnChooserSettings.prototype, \"renderCustomColumnChooser\", void 0);\n    return ColumnChooserSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9tb2RlbHMvY29sdW1uLWNob29zZXItc2V0dGluZ3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0I7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCLFNBQUksSUFBSSxTQUFJO0FBQzlCO0FBQ0E7QUFDQSw2Q0FBNkMsUUFBUTtBQUNyRDtBQUNBO0FBQytEO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOERBQVE7QUFDaEI7QUFDQTtBQUNBLFFBQVEsOERBQVE7QUFDaEI7QUFDQTtBQUNBLFFBQVEsOERBQVE7QUFDaEI7QUFDQTtBQUNBLFFBQVEsOERBQVE7QUFDaEI7QUFDQTtBQUNBLFFBQVEsOERBQVE7QUFDaEI7QUFDQTtBQUNBLFFBQVEsOERBQVE7QUFDaEI7QUFDQTtBQUNBLFFBQVEsOERBQVE7QUFDaEI7QUFDQTtBQUNBLENBQUMsQ0FBQywrREFBYTtBQUNrQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3RyYXZlbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3luY2Z1c2lvbitlajItZ3JpZHNAMjkuMS40MC9ub2RlX21vZHVsZXMvQHN5bmNmdXNpb24vZWoyLWdyaWRzL3NyYy9ncmlkL21vZGVscy9jb2x1bW4tY2hvb3Nlci1zZXR0aW5ncy5qcz9kMmI0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IHsgUHJvcGVydHksIENoaWxkUHJvcGVydHkgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYmFzZSc7XG4vKipcbiAqIENvbmZpZ3VyZXMgdGhlIGNvbHVtbiBjaG9vc2VyIGJlaGF2aW9yIG9mIHRoZSBHcmlkLlxuICovXG52YXIgQ29sdW1uQ2hvb3NlclNldHRpbmdzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDb2x1bW5DaG9vc2VyU2V0dGluZ3MsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ29sdW1uQ2hvb3NlclNldHRpbmdzKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBQcm9wZXJ0eSgnc3RhcnRzV2l0aCcpXG4gICAgXSwgQ29sdW1uQ2hvb3NlclNldHRpbmdzLnByb3RvdHlwZSwgXCJvcGVyYXRvclwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBQcm9wZXJ0eShmYWxzZSlcbiAgICBdLCBDb2x1bW5DaG9vc2VyU2V0dGluZ3MucHJvdG90eXBlLCBcImlnbm9yZUFjY2VudFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBQcm9wZXJ0eShudWxsKVxuICAgIF0sIENvbHVtbkNob29zZXJTZXR0aW5ncy5wcm90b3R5cGUsIFwiaGVhZGVyVGVtcGxhdGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgUHJvcGVydHkobnVsbClcbiAgICBdLCBDb2x1bW5DaG9vc2VyU2V0dGluZ3MucHJvdG90eXBlLCBcInRlbXBsYXRlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIFByb3BlcnR5KG51bGwpXG4gICAgXSwgQ29sdW1uQ2hvb3NlclNldHRpbmdzLnByb3RvdHlwZSwgXCJmb290ZXJUZW1wbGF0ZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBQcm9wZXJ0eSh0cnVlKVxuICAgIF0sIENvbHVtbkNob29zZXJTZXR0aW5ncy5wcm90b3R5cGUsIFwiZW5hYmxlU2VhcmNoaW5nXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIFByb3BlcnR5KG51bGwpXG4gICAgXSwgQ29sdW1uQ2hvb3NlclNldHRpbmdzLnByb3RvdHlwZSwgXCJyZW5kZXJDdXN0b21Db2x1bW5DaG9vc2VyXCIsIHZvaWQgMCk7XG4gICAgcmV0dXJuIENvbHVtbkNob29zZXJTZXR0aW5ncztcbn0oQ2hpbGRQcm9wZXJ0eSkpO1xuZXhwb3J0IHsgQ29sdW1uQ2hvb3NlclNldHRpbmdzIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column-chooser-settings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Column: () => (/* binding */ Column),\n/* harmony export */   CommandColumnModel: () => (/* binding */ CommandColumnModel),\n/* harmony export */   GridColumn: () => (/* binding */ GridColumn),\n/* harmony export */   StackedColumn: () => (/* binding */ StackedColumn)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/query.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/util.js\");\n/* harmony import */ var _services_value_formatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/value-formatter */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n/**\n * Represents Grid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options, parent) {\n        var _this = this;\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowGrouping` set to false, then it disables grouping of a particular column.\n         * By default all columns are groupable.\n         *\n         * @default true\n         */\n        this.allowGrouping = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `enableGroupByFormat` set to true, then it groups the particular column by formatted values.\n         *\n         * @default true\n         */\n        this.enableGroupByFormat = false;\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu or checkbox.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         * {% codeBlock src=\"grid/filter-menu-api/index.ts\" %}{% endcodeBlock %}\n         *\n         * > Check the [`Filter UI`](../../grid/filtering/filter-menu/#custom-component-in-filter-menu) for its customization.\n         *\n         *  @default {}\n         */\n        this.filter = {};\n        /**\n         * If `showInColumnChooser` set to false, then hide the particular column in column chooser.\n         *  By default all columns are displayed in column Chooser.\n         *\n         * @default true\n         */\n        this.showInColumnChooser = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowSearching` set to false, then it disables Searching of a particular column.\n         * By default all columns allow Searching.\n         *\n         * @default true\n         */\n        this.allowSearching = true;\n        /**\n         * If `autoFit` set to true, then the particular column content width will be\n         * adjusted based on its content in the initial rendering itself.\n         * Setting this property as true is equivalent to calling `autoFitColumns` method in the `dataBound` event.\n         *\n         * @default false\n         */\n        this.autoFit = false;\n        this.sortDirection = 'Descending';\n        /**\n         * @returns {Function} returns the edit template\n         * @hidden */\n        this.getEditTemplate = function () { return _this.editTemplateFn; };\n        /**\n         * @returns {Function} returns the filter template\n         * @hidden */\n        this.getFilterTemplate = function () { return _this.filterTemplateFn; };\n        /**\n         * Determines the behavior of the `aria-label` attribute for cells in template columns.\n         * If enableAriaLabel is set to false, the aria-label attribute is not applied to template column cells, which affects screen reader accessibility.\n         *\n         * @default {}\n         */\n        this.templateOptions = { enableAriaLabel: true };\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(this, options);\n        this.parent = parent;\n        if (this.type === 'none') {\n            this.type = null;\n        }\n        else if (this.type) {\n            this.type = typeof (this.type) === 'string' ? this.type.toLowerCase() : undefined;\n        }\n        if (this.editType) {\n            this.editType = this.editType.toLowerCase();\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.uid)) {\n            this.uid = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getUid)('grid-column');\n        }\n        var valueFormatter = new _services_value_formatter__WEBPACK_IMPORTED_MODULE_2__.ValueFormatter();\n        if (options.format && (options.format.skeleton || (options.format.format &&\n            typeof options.format.format === 'string'))) {\n            this.setFormatter(valueFormatter.getFormatFunction((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, options.format)));\n            this.setParser(valueFormatter.getParserFunction(options.format));\n        }\n        this.toJSON = function () {\n            var col = {};\n            var skip = ['filter', 'dataSource', 'headerText', 'template', 'headerTemplate', 'edit',\n                'editTemplate', 'filterTemplate', 'commandsTemplate', 'parent'];\n            var keys = Object.keys(_this);\n            for (var i = 0; i < keys.length; i++) {\n                if (keys[parseInt(i.toString(), 10)] === 'columns') {\n                    col[keys[parseInt(i.toString(), 10)]] = [];\n                    for (var j = 0; j < _this[keys[parseInt(i.toString(), 10)]].length; j++) {\n                        col[keys[parseInt(i.toString(), 10)]].push(_this[keys[parseInt(i.toString(), 10)]][parseInt(j.toString(), 10)].toJSON());\n                    }\n                }\n                else if (skip.indexOf(keys[parseInt(i.toString(), 10)]) < 0) {\n                    col[keys[parseInt(i.toString(), 10)]] = _this[keys[parseInt(i.toString(), 10)]];\n                }\n            }\n            return col;\n        };\n        if (!this.field) {\n            this.allowFiltering = false;\n            this.allowGrouping = false;\n            this.allowSorting = false;\n            if (this.columns) {\n                this.allowResizing = this.columns.some(function (col) {\n                    return col.allowResizing;\n                });\n            }\n        }\n        if (this.commands && !this.textAlign) {\n            this.textAlign = 'Right';\n        }\n        if (this.template || this.commandsTemplate) {\n            this.templateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(this.template || this.commandsTemplate);\n        }\n        if (this.headerTemplate) {\n            this.headerTemplateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(this.headerTemplate);\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.filter) && this.filter.itemTemplate) {\n            this.fltrTemplateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(this.filter.itemTemplate);\n        }\n        if (this.editTemplate) {\n            this.editTemplateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(this.editTemplate);\n        }\n        if (this.filterTemplate) {\n            this.filterTemplateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(this.filterTemplate);\n        }\n        if (this.isForeignColumn() &&\n            ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.editType) || this.editType === 'dropdownedit' || this.editType === 'defaultedit')) {\n            this.editType = 'dropdownedit';\n            if (this.edit.params && this.edit.params.dataSource) {\n                this.edit.params.ddEditedData = true;\n            }\n            this.edit.params = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({\n                dataSource: this.dataSource,\n                query: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_3__.Query(), fields: { value: this.foreignKeyField || this.field, text: this.foreignKeyValue }\n            }, this.edit.params);\n        }\n        if (this.sortComparer) {\n            var a_1 = this.sortComparer;\n            this.sortComparer = function (x, y, xObj, yObj) {\n                if (typeof a_1 === 'string') {\n                    a_1 = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getObject)(a_1, window);\n                }\n                if (_this.sortDirection === 'Descending') {\n                    var z = x;\n                    x = y;\n                    y = z;\n                    var obj = xObj;\n                    xObj = yObj;\n                    yObj = obj;\n                }\n                return a_1(x, y, xObj, yObj);\n            };\n        }\n        if (!this.sortComparer && this.isForeignColumn()) {\n            this.sortComparer = function (x, y) {\n                x = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getObject)(_this.foreignKeyValue, (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getForeignData)(_this, {}, x)[0]);\n                y = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getObject)(_this.foreignKeyValue, (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getForeignData)(_this, {}, y)[0]);\n                return _this.sortDirection === 'Descending' ? _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_4__.DataUtil.fnDescending(x, y) : _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_4__.DataUtil.fnAscending(x, y);\n            };\n        }\n    }\n    /**\n     * @returns {string} returns the sort direction\n     * @hidden */\n    Column.prototype.getSortDirection = function () {\n        return this.sortDirection;\n    };\n    /**\n     * @param {string} direction - specifies the direction\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setSortDirection = function (direction) {\n        this.sortDirection = direction;\n    };\n    /**\n     * @returns {freezeTable} returns the FreezeTable\n     * @hidden */\n    Column.prototype.getFreezeTableName = function () {\n        return this.freezeTable;\n    };\n    /**\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        var _loop_1 = function (i) {\n            if (keys[parseInt(i.toString(), 10)] === 'columns') {\n                var cols_1 = column[keys[parseInt(i.toString(), 10)]];\n                var _loop_2 = function (j) {\n                    this_1.columns.find(function (col) {\n                        return col.field === cols_1[parseInt(j.toString(), 10)]\n                            .field;\n                    }).setProperties(cols_1[parseInt(j.toString(), 10)]);\n                };\n                for (var j = 0; j < cols_1.length; j++) {\n                    _loop_2(j);\n                }\n            }\n            else {\n                this_1[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            }\n            //Refresh the react columnTemplates on state change\n            if (this_1.parent && this_1.parent.isReact) {\n                if (keys[parseInt(i.toString(), 10)] === 'template') {\n                    this_1.templateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(column[keys[parseInt(i.toString(), 10)]]);\n                    this_1.parent.refreshReactColumnTemplateByUid(this_1.uid, true);\n                }\n                else if (keys[parseInt(i.toString(), 10)] === 'headerTemplate') {\n                    this_1.headerTemplateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(column[keys[parseInt(i.toString(), 10)]]);\n                    this_1.parent.refreshReactHeaderTemplateByUid(this_1.uid);\n                }\n                else if (keys[parseInt(i.toString(), 10)] === 'editTemplate') {\n                    this_1.editTemplateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(column[keys[parseInt(i.toString(), 10)]]);\n                }\n                else if (keys[parseInt(i.toString(), 10)] === 'filterTemplate') {\n                    this_1.filterTemplateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(column[keys[parseInt(i.toString(), 10)]]);\n                }\n                else if (keys[parseInt(i.toString(), 10)] === 'commandsTemplate') {\n                    this_1.templateFn = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.templateCompiler)(column[keys[parseInt(i.toString(), 10)]]);\n                }\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < keys.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * @returns {boolean} returns true for foreign column\n     * @hidden\n     * It defines the column is foreign key column or not.\n     */\n    Column.prototype.isForeignColumn = function () {\n        return !!(this.dataSource && this.foreignKeyValue);\n    };\n    /**\n     * @returns {Function} returns the function\n     * @hidden\n     */\n    Column.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Function} value - specifies the value\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setFormatter = function (value) {\n        this.formatFn = value;\n    };\n    /**\n     * @returns {Function} returns the function\n     * @hidden */\n    Column.prototype.getParser = function () {\n        return this.parserFn;\n    };\n    /**\n     * @param {Function} value - specifies the value\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setParser = function (value) {\n        this.parserFn = value;\n    };\n    /**\n     * @returns {Function} returns the function\n     * @hidden */\n    Column.prototype.getColumnTemplate = function () {\n        return this.templateFn;\n    };\n    /**\n     * @returns {Function} returns the function\n     * @hidden */\n    Column.prototype.getHeaderTemplate = function () {\n        return this.headerTemplateFn;\n    };\n    /**\n     * @returns {Function} returns the function\n     * @hidden */\n    Column.prototype.getFilterItemTemplate = function () {\n        return this.fltrTemplateFn;\n    };\n    /**\n     * @returns {string} returns the string\n     * @hidden */\n    Column.prototype.getDomSetter = function () {\n        return this.disableHtmlEncode ? 'textContent' : 'innerHTML';\n    };\n    return Column;\n}());\n\n/**\n * Define options for custom command buttons.\n */\nvar CommandColumnModel = /** @class */ (function () {\n    function CommandColumnModel() {\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], CommandColumnModel.prototype, \"title\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], CommandColumnModel.prototype, \"type\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], CommandColumnModel.prototype, \"buttonOption\", void 0);\n    return CommandColumnModel;\n}());\n\n/**\n * Defines Grid column\n */\nvar GridColumn = /** @class */ (function (_super) {\n    __extends(GridColumn, _super);\n    function GridColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], GridColumn.prototype, \"columns\", void 0);\n    return GridColumn;\n}(Column));\n\n/**\n * Defines stacked grid column\n */\nvar StackedColumn = /** @class */ (function (_super) {\n    __extends(StackedColumn, _super);\n    function StackedColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StackedColumn;\n}(GridColumn));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/page-settings.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/page-settings.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageSettings: () => (/* binding */ PageSettings)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n/**\n * Configures the paging behavior of the Grid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    return PageSettings;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.ChildProperty));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9tb2RlbHMvcGFnZS1zZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3QjtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBa0IsU0FBSSxJQUFJLFNBQUk7QUFDOUI7QUFDQTtBQUNBLDZDQUE2QyxRQUFRO0FBQ3JEO0FBQ0E7QUFDK0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4REFBUTtBQUNoQjtBQUNBO0FBQ0EsUUFBUSw4REFBUTtBQUNoQjtBQUNBO0FBQ0EsUUFBUSw4REFBUTtBQUNoQjtBQUNBO0FBQ0EsUUFBUSw4REFBUTtBQUNoQjtBQUNBO0FBQ0EsUUFBUSw4REFBUTtBQUNoQjtBQUNBO0FBQ0EsUUFBUSw4REFBUTtBQUNoQjtBQUNBO0FBQ0EsUUFBUSw4REFBUTtBQUNoQjtBQUNBO0FBQ0EsQ0FBQyxDQUFDLCtEQUFhO0FBQ1MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haV90cmF2ZWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9tb2RlbHMvcGFnZS1zZXR0aW5ncy5qcz8zOGQ3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IHsgUHJvcGVydHksIENoaWxkUHJvcGVydHkgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYmFzZSc7XG4vKipcbiAqIENvbmZpZ3VyZXMgdGhlIHBhZ2luZyBiZWhhdmlvciBvZiB0aGUgR3JpZC5cbiAqL1xudmFyIFBhZ2VTZXR0aW5ncyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUGFnZVNldHRpbmdzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFBhZ2VTZXR0aW5ncygpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgUHJvcGVydHkoMTIpXG4gICAgXSwgUGFnZVNldHRpbmdzLnByb3RvdHlwZSwgXCJwYWdlU2l6ZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBQcm9wZXJ0eSg4KVxuICAgIF0sIFBhZ2VTZXR0aW5ncy5wcm90b3R5cGUsIFwicGFnZUNvdW50XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIFByb3BlcnR5KDEpXG4gICAgXSwgUGFnZVNldHRpbmdzLnByb3RvdHlwZSwgXCJjdXJyZW50UGFnZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBQcm9wZXJ0eSgpXG4gICAgXSwgUGFnZVNldHRpbmdzLnByb3RvdHlwZSwgXCJ0b3RhbFJlY29yZHNDb3VudFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBQcm9wZXJ0eShmYWxzZSlcbiAgICBdLCBQYWdlU2V0dGluZ3MucHJvdG90eXBlLCBcImVuYWJsZVF1ZXJ5U3RyaW5nXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIFByb3BlcnR5KGZhbHNlKVxuICAgIF0sIFBhZ2VTZXR0aW5ncy5wcm90b3R5cGUsIFwicGFnZVNpemVzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIFByb3BlcnR5KG51bGwpXG4gICAgXSwgUGFnZVNldHRpbmdzLnByb3RvdHlwZSwgXCJ0ZW1wbGF0ZVwiLCB2b2lkIDApO1xuICAgIHJldHVybiBQYWdlU2V0dGluZ3M7XG59KENoaWxkUHJvcGVydHkpKTtcbmV4cG9ydCB7IFBhZ2VTZXR0aW5ncyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/page-settings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Row: () => (/* binding */ Row)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n\n/**\n * Row\n *\n * @hidden\n */\nvar Row = /** @class */ (function () {\n    function Row(options, parent) {\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(this, options);\n        this.parent = parent;\n    }\n    Row.prototype.clone = function () {\n        var row = new Row({});\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.merge)(row, this);\n        row.cells = this.cells.map(function (cell) { return cell.clone(); });\n        return row;\n    };\n    /**\n     * Replaces the row data and grid refresh the particular row element only.\n     *\n     * @param  {Object} data - To update new data for the particular row.\n     * @returns {void}\n     */\n    Row.prototype.setRowValue = function (data) {\n        if (!this.parent) {\n            return;\n        }\n        var key = this.data[this.parent.getPrimaryKeyFieldNames()[0]];\n        this.parent.setRowData(key, data);\n    };\n    /**\n     * Replaces the given field value and refresh the particular cell element only.\n     *\n     * @param {string} field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    Row.prototype.setCellValue = function (field, value) {\n        if (!this.parent) {\n            return;\n        }\n        var isValDiff = !(this.data[\"\" + field].toString() === value.toString());\n        if (isValDiff) {\n            var pKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var key = this.data[\"\" + pKeyField];\n            this.parent.setCellValue(key, field, value);\n            this.makechanges(pKeyField, this.data);\n        }\n        else {\n            return;\n        }\n    };\n    Row.prototype.makechanges = function (key, data) {\n        if (!this.parent) {\n            return;\n        }\n        var gObj = this.parent;\n        var dataManager = gObj.getDataModule().dataManager;\n        dataManager.update(key, data);\n    };\n    return Row;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9tb2RlbHMvcm93LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwyREFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QixRQUFRLDJEQUFLO0FBQ2IscURBQXFELHNCQUFzQjtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxrQ0FBa0M7QUFDakQsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlfdHJhdmVsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzeW5jZnVzaW9uK2VqMi1ncmlkc0AyOS4xLjQwL25vZGVfbW9kdWxlcy9Ac3luY2Z1c2lvbi9lajItZ3JpZHMvc3JjL2dyaWQvbW9kZWxzL3Jvdy5qcz8zMTYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lcmdlIH0gZnJvbSAnQHN5bmNmdXNpb24vZWoyLWJhc2UnO1xuLyoqXG4gKiBSb3dcbiAqXG4gKiBAaGlkZGVuXG4gKi9cbnZhciBSb3cgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUm93KG9wdGlvbnMsIHBhcmVudCkge1xuICAgICAgICBtZXJnZSh0aGlzLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgfVxuICAgIFJvdy5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByb3cgPSBuZXcgUm93KHt9KTtcbiAgICAgICAgbWVyZ2Uocm93LCB0aGlzKTtcbiAgICAgICAgcm93LmNlbGxzID0gdGhpcy5jZWxscy5tYXAoZnVuY3Rpb24gKGNlbGwpIHsgcmV0dXJuIGNlbGwuY2xvbmUoKTsgfSk7XG4gICAgICAgIHJldHVybiByb3c7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXBsYWNlcyB0aGUgcm93IGRhdGEgYW5kIGdyaWQgcmVmcmVzaCB0aGUgcGFydGljdWxhciByb3cgZWxlbWVudCBvbmx5LlxuICAgICAqXG4gICAgICogQHBhcmFtICB7T2JqZWN0fSBkYXRhIC0gVG8gdXBkYXRlIG5ldyBkYXRhIGZvciB0aGUgcGFydGljdWxhciByb3cuXG4gICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICovXG4gICAgUm93LnByb3RvdHlwZS5zZXRSb3dWYWx1ZSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJlbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIga2V5ID0gdGhpcy5kYXRhW3RoaXMucGFyZW50LmdldFByaW1hcnlLZXlGaWVsZE5hbWVzKClbMF1dO1xuICAgICAgICB0aGlzLnBhcmVudC5zZXRSb3dEYXRhKGtleSwgZGF0YSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXBsYWNlcyB0aGUgZ2l2ZW4gZmllbGQgdmFsdWUgYW5kIHJlZnJlc2ggdGhlIHBhcnRpY3VsYXIgY2VsbCBlbGVtZW50IG9ubHkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZmllbGQgLSBTcGVjaWZpZXMgdGhlIGZpZWxkIG5hbWUgd2hpY2ggeW91IHdhbnQgdG8gdXBkYXRlLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbiB8IERhdGV9IHZhbHVlIC0gVG8gdXBkYXRlIG5ldyB2YWx1ZSBmb3IgdGhlIHBhcnRpY3VsYXIgY2VsbC5cbiAgICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICAgKi9cbiAgICBSb3cucHJvdG90eXBlLnNldENlbGxWYWx1ZSA9IGZ1bmN0aW9uIChmaWVsZCwgdmFsdWUpIHtcbiAgICAgICAgaWYgKCF0aGlzLnBhcmVudCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpc1ZhbERpZmYgPSAhKHRoaXMuZGF0YVtcIlwiICsgZmllbGRdLnRvU3RyaW5nKCkgPT09IHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgICBpZiAoaXNWYWxEaWZmKSB7XG4gICAgICAgICAgICB2YXIgcEtleUZpZWxkID0gdGhpcy5wYXJlbnQuZ2V0UHJpbWFyeUtleUZpZWxkTmFtZXMoKVswXTtcbiAgICAgICAgICAgIHZhciBrZXkgPSB0aGlzLmRhdGFbXCJcIiArIHBLZXlGaWVsZF07XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5zZXRDZWxsVmFsdWUoa2V5LCBmaWVsZCwgdmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5tYWtlY2hhbmdlcyhwS2V5RmllbGQsIHRoaXMuZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJvdy5wcm90b3R5cGUubWFrZWNoYW5nZXMgPSBmdW5jdGlvbiAoa2V5LCBkYXRhKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJlbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZ09iaiA9IHRoaXMucGFyZW50O1xuICAgICAgICB2YXIgZGF0YU1hbmFnZXIgPSBnT2JqLmdldERhdGFNb2R1bGUoKS5kYXRhTWFuYWdlcjtcbiAgICAgICAgZGF0YU1hbmFnZXIudXBkYXRlKGtleSwgZGF0YSk7XG4gICAgfTtcbiAgICByZXR1cm4gUm93O1xufSgpKTtcbmV4cG9ydCB7IFJvdyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/caption-cell-renderer.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/caption-cell-renderer.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupCaptionCellRenderer: () => (/* binding */ GroupCaptionCellRenderer),\n/* harmony export */   GroupCaptionEmptyCellRenderer: () => (/* binding */ GroupCaptionEmptyCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n/**\n * GroupCaptionCellRenderer class which responsible for building group caption cell.\n *\n * @hidden\n */\nvar GroupCaptionCellRenderer = /** @class */ (function (_super) {\n    __extends(GroupCaptionCellRenderer, _super);\n    function GroupCaptionCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cellUid = 0;\n        _this.element = _this.parent\n            .createElement('TD', { className: 'e-groupcaption',\n            attrs: { id: _this.parent.element.id + 'captioncell', tabindex: '-1' } });\n        return _this;\n    }\n    /**\n     * Function to render the cell content based on Column object.\n     *\n     * @param  {Cell} cell - specifies the cell\n     * @param  {Object} data - specifies the GroupedData\n     * @returns {Element} returns the element\n     */\n    GroupCaptionCellRenderer.prototype.render = function (cell, data) {\n        this.element.id = this.parent.element.id + 'captioncell' + this.cellUid++;\n        var node = this.element.cloneNode();\n        var gObj = this.parent;\n        var column = cell.column;\n        var domSetter = column.getDomSetter ? column.getDomSetter() : 'innerHTML';\n        var result;\n        var fKeyValue;\n        var gTemplateValue;\n        data.headerText = cell.column.headerText;\n        if (cell.isForeignKey) {\n            fKeyValue = this.format(cell.column, cell.column.valueAccessor('foreignKey', data, cell.column));\n        }\n        var value = cell.isForeignKey ? fKeyValue : cell.column.enableGroupByFormat ? data.key :\n            this.format(cell.column, cell.column.valueAccessor('key', data, cell.column));\n        for (var j = 0; j < gObj.aggregates.length; j++) {\n            var _loop_1 = function (i) {\n                if (gObj.getVisibleColumns()[0].field === gObj.aggregates[parseInt(j.toString(), 10)].columns[parseInt(i.toString(), 10)]\n                    .field && gObj.aggregates[parseInt(j.toString(), 10)].columns[parseInt(i.toString(), 10)].groupCaptionTemplate) {\n                    var gCaptionTemp = gObj.aggregates[parseInt(j.toString(), 10)]\n                        .columns[parseInt(i.toString(), 10)].groupCaptionTemplate;\n                    if (typeof gCaptionTemp === 'string' && gCaptionTemp.includes('$')) {\n                        gTemplateValue = gObj.aggregates[parseInt(j.toString(), 10)].columns[parseInt(i.toString(), 10)]\n                            .groupCaptionTemplate.split('$')[0] + data[gObj.getVisibleColumns()[0].field][gObj\n                            .aggregates[parseInt(j.toString(), 10)].columns[parseInt(i.toString(), 10)].type] +\n                            gObj.aggregates[parseInt(j.toString(), 10)].columns[parseInt(i.toString(), 10)]\n                                .groupCaptionTemplate.split('}')[1];\n                    }\n                    else {\n                        var column_1 = (gObj.aggregates[parseInt(j.toString(), 10)]\n                            .columns[parseInt(i.toString(), 10)]);\n                        var tempObj = column_1.getTemplate(_base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType.CaptionSummary);\n                        var tempID = '';\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tempObj)) {\n                            var tempValue_1 = tempObj.fn(data[column_1.columnName], this_1.parent, tempObj.property, tempID);\n                            var isReactPrintGrid = this_1.parent.printGridParent\n                                && this_1.parent.printGridParent.isReact;\n                            if ((this_1.parent.isReact || isReactPrintGrid) && typeof column_1.groupCaptionTemplate !== 'string') {\n                                this_1.parent.renderTemplates(function () {\n                                    if (tempValue_1 && tempValue_1.length) {\n                                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.groupSettings.captionTemplate)) {\n                                            node.appendChild(tempValue_1[0]);\n                                        }\n                                        else {\n                                            node.innerText += ' ' + tempValue_1[0].textContent;\n                                        }\n                                    }\n                                });\n                            }\n                            else {\n                                if (tempValue_1 && tempValue_1.length) {\n                                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.groupSettings.captionTemplate)) {\n                                        gTemplateValue = tempValue_1;\n                                    }\n                                    else {\n                                        gTemplateValue = tempValue_1[0].textContent;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return \"break\";\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < gObj.aggregates[parseInt(j.toString(), 10)].columns.length; i++) {\n                var state_1 = _loop_1(i);\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.groupSettings.captionTemplate)) {\n            var isReactCompiler = this.parent.isReact && typeof (gObj.groupSettings.captionTemplate) !== 'string' &&\n                !(gObj.groupSettings.captionTemplate.prototype &&\n                    gObj.groupSettings.captionTemplate.prototype.CSPTemplate);\n            var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n                this.parent.parentDetails.parentInstObj.isReact;\n            var isReactPrintGrid = this.parent.printGridParent && this.parent.printGridParent.isReact;\n            if (isReactCompiler || isReactChild || isReactPrintGrid) {\n                var tempID = gObj.element.id + 'captionTemplate';\n                var groupKey = 'groupKey';\n                var key = 'key';\n                data[\"\" + groupKey] = data[\"\" + key];\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.templateCompiler)(gObj.groupSettings.captionTemplate)(data, this.parent, 'captionTemplate', tempID, null, null, node);\n                this.parent.renderTemplates();\n            }\n            else if (this.parent.isVue\n                || (gObj.parentDetails && gObj.parentDetails.parentInstObj && gObj.parentDetails.parentInstObj.isVue)) {\n                result = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.templateCompiler)(gObj.groupSettings.captionTemplate)(data, this.parent, 'captionTemplate', null, null, null, null, gObj.root);\n            }\n            else {\n                result = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.templateCompiler)(gObj.groupSettings.captionTemplate)(data);\n            }\n            if (!isReactCompiler && !isReactChild && !isReactPrintGrid) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.appendChildren)(node, result);\n                if (gTemplateValue && gTemplateValue.length && gTemplateValue[0].textContent) {\n                    node.appendChild(gTemplateValue[0]);\n                }\n            }\n        }\n        else {\n            if (gObj.groupSettings.enableLazyLoading) {\n                node[\"\" + domSetter] = this.parent.sanitize(cell.column.headerText) + ': ' + this.parent.sanitize(value) +\n                    (gTemplateValue ? '   ' + gTemplateValue : '');\n            }\n            else {\n                node[\"\" + domSetter] = this.parent.sanitize(cell.column.headerText) + ': ' + this.parent.sanitize(value) +\n                    ' - ' + data.count + ' ' + (data.count < 2 ? this.localizer.getConstant('Item') : this.localizer.getConstant('Items'))\n                    + (gTemplateValue ? '   ' + gTemplateValue : '');\n            }\n        }\n        node.setAttribute('colspan', cell.colSpan.toString());\n        node.setAttribute('aria-label', node.innerHTML + this.localizer.getConstant('GroupCaption'));\n        node.setAttribute('title', node.textContent);\n        return node;\n    };\n    return GroupCaptionCellRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_3__.CellRenderer));\n\n/**\n * GroupCaptionEmptyCellRenderer class which responsible for building group caption empty cell.\n *\n * @hidden\n */\nvar GroupCaptionEmptyCellRenderer = /** @class */ (function (_super) {\n    __extends(GroupCaptionEmptyCellRenderer, _super);\n    function GroupCaptionEmptyCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TD', { className: 'e-groupcaption' });\n        return _this;\n    }\n    /**\n     * Function to render the cell content based on Column object.\n     *\n     * @param {Cell} cell - specifies the cell\n     * @param {Object} data - specifies the Object\n     * @param {string} data.field - Defines the field\n     * @param {string} data.key - Defines the key\n     * @param {number} data.count - Defines the count\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    GroupCaptionEmptyCellRenderer.prototype.render = function (cell, data) {\n        var node = this.element.cloneNode();\n        node.innerHTML = '&nbsp;';\n        node.setAttribute('colspan', cell.colSpan.toString());\n        return node;\n    };\n    return GroupCaptionEmptyCellRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_3__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/caption-cell-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-merge-renderer.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-merge-renderer.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CellMergeRender: () => (/* binding */ CellMergeRender)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n\n\n\n/**\n * `CellMergeRender` module.\n *\n * @hidden\n */\nvar CellMergeRender = /** @class */ (function () {\n    function CellMergeRender(serviceLocator, parent) {\n        this.serviceLocator = serviceLocator;\n        this.parent = parent;\n    }\n    CellMergeRender.prototype.render = function (cellArgs, row, i, td) {\n        var cellRendererFact = this.serviceLocator.getService('cellRendererFactory');\n        var cellRenderer = cellRendererFact.getCellRenderer(row.cells[parseInt(i.toString(), 10)].cellType\n            || _base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType.Data);\n        var colSpan = row.cells[parseInt(i.toString(), 10)].cellSpan ? row.cells[parseInt(i.toString(), 10)].cellSpan :\n            cellArgs.colSpan ? (cellArgs.colSpan + i) <= row.cells.length ? cellArgs.colSpan : row.cells.length - i : 1;\n        var rowSpan = cellArgs.rowSpan;\n        var visible = 0;\n        var spannedCell;\n        if (row.index > 0) {\n            var rowsObject = this.parent.getRowsObject();\n            var cells = this.parent.groupSettings.columns.length > 0 &&\n                !rowsObject[row.index - 1].isDataRow ? rowsObject[row.index].cells : rowsObject[row.index - 1].cells;\n            var targetCell_1 = row.cells[parseInt(i.toString(), 10)];\n            var uid_1 = 'uid';\n            spannedCell = cells.filter(function (cell) { return cell.column.uid === targetCell_1.column[\"\" + uid_1]; })[0];\n        }\n        var colSpanLen = spannedCell && spannedCell.colSpanRange > 1 && spannedCell.rowSpanRange > 1 ?\n            spannedCell.colSpanRange : colSpan;\n        for (var j = i + 1; j < i + colSpanLen && j < row.cells.length; j++) {\n            if (row.cells[parseInt(j.toString(), 10)].visible === false) {\n                visible++;\n            }\n            else {\n                row.cells[parseInt(j.toString(), 10)].isSpanned = true;\n            }\n        }\n        if (visible > 0) {\n            for (var j = i + colSpan; j < i + colSpan + visible && j < row.cells.length; j++) {\n                row.cells[parseInt(j.toString(), 10)].isSpanned = true;\n            }\n            if (i + colSpan + visible >= row.cells.length) {\n                colSpan -= (i + colSpan + visible) - row.cells.length;\n            }\n        }\n        if (row.cells[parseInt(i.toString(), 10)].cellSpan) {\n            row.data[cellArgs.column.field] = row.cells[parseInt(i.toString(), 10)].spanText;\n            td = cellRenderer.render(row.cells[parseInt(i.toString(), 10)], row.data, { 'index': !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.index) ? row.index.toString() : '' });\n        }\n        if (colSpan > 1) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(td, { 'colSpan': colSpan.toString(), 'aria-colSpan': colSpan.toString() });\n        }\n        if (rowSpan > 1) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(td, { 'rowspan': rowSpan.toString(), 'aria-rowspan': rowSpan.toString() });\n            row.cells[parseInt(i.toString(), 10)].isRowSpanned = true;\n            row.cells[parseInt(i.toString(), 10)].rowSpanRange = Number(rowSpan);\n            if (colSpan > 1) {\n                row.cells[parseInt(i.toString(), 10)].colSpanRange = Number(colSpan);\n            }\n        }\n        if (row.index > 0 && (spannedCell.rowSpanRange > 1)) {\n            row.cells[parseInt(i.toString(), 10)].isSpanned = true;\n            row.cells[parseInt(i.toString(), 10)].rowSpanRange = Number(spannedCell.rowSpanRange - 1);\n            row.cells[parseInt(i.toString(), 10)].colSpanRange = spannedCell.rowSpanRange > 0 ? spannedCell.colSpanRange : 1;\n        }\n        if (this.parent.enableColumnVirtualization && !row.cells[parseInt(i.toString(), 10)].cellSpan &&\n            !this.containsKey(cellArgs.column.field, cellArgs.data[cellArgs.column.field])) {\n            this.backupMergeCells(cellArgs.column.field, cellArgs.data[cellArgs.column.field], cellArgs.colSpan);\n        }\n        return td;\n    };\n    CellMergeRender.prototype.backupMergeCells = function (fName, data, span) {\n        this.setMergeCells(this.generteKey(fName, data), span);\n    };\n    CellMergeRender.prototype.generteKey = function (fname, data) {\n        return fname + '__' + data.toString();\n    };\n    CellMergeRender.prototype.splitKey = function (key) {\n        return key.split('__');\n    };\n    CellMergeRender.prototype.containsKey = function (fname, data) {\n        // eslint-disable-next-line no-prototype-builtins\n        return this.getMergeCells().hasOwnProperty(this.generteKey(fname, data));\n    };\n    CellMergeRender.prototype.getMergeCells = function () {\n        return this.parent.mergeCells;\n    };\n    CellMergeRender.prototype.setMergeCells = function (key, span) {\n        this.parent.mergeCells[\"\" + key] = span;\n    };\n    CellMergeRender.prototype.updateVirtualCells = function (rows) {\n        var mCells = this.getMergeCells();\n        for (var _i = 0, _a = Object.keys(mCells); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var value = mCells[\"\" + key];\n            var merge = this.splitKey(key);\n            var columnIndex = this.getIndexFromAllColumns(merge[0]);\n            var vColumnIndices = this.parent.getColumnIndexesInView();\n            var span = value - (vColumnIndices[0] - columnIndex);\n            if (columnIndex < vColumnIndices[0] && span > 1) {\n                for (var _b = 0, rows_1 = rows; _b < rows_1.length; _b++) {\n                    var row = rows_1[_b];\n                    if (row.data[merge[0]].toString() === merge[1].toString()) {\n                        row.cells[0].cellSpan = span;\n                        row.cells[0].spanText = merge[1];\n                        break;\n                    }\n                }\n            }\n        }\n        return rows;\n    };\n    CellMergeRender.prototype.getIndexFromAllColumns = function (field) {\n        var index = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.iterateArrayOrObject)(this.parent.getVisibleColumns(), function (item, index) {\n            if (item.field === field) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return index;\n    };\n    return CellMergeRender;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-merge-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CellRenderer: () => (/* binding */ CellRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-buttons@29.1.34/node_modules/@syncfusion/ej2-buttons/src/common/common.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n/**\n * CellRenderer class which responsible for building cell content.\n *\n * @hidden\n */\nvar CellRenderer = /** @class */ (function () {\n    function CellRenderer(parent, locator) {\n        this.localizer = locator.getService('localization');\n        this.formatter = locator.getService('valueFormatter');\n        this.parent = parent;\n        this.element = this.parent.createElement('TD', { className: _base_string_literals__WEBPACK_IMPORTED_MODULE_1__.rowCell, attrs: { role: 'gridcell', tabindex: '-1' } });\n        this.rowChkBox = this.parent.createElement('input', { className: 'e-checkselect', attrs: { 'type': 'checkbox', 'aria-label': this.localizer.getConstant('SelectRow') } });\n    }\n    /**\n     * Function to return the wrapper for the TD content\n     *\n     * @returns {string | Element} returns the string\n     */\n    CellRenderer.prototype.getGui = function () {\n        return '';\n    };\n    /**\n     * Function to format the cell value.\n     *\n     * @param  {Column} column - specifies the column\n     * @param  {Object} value - specifies the value\n     * @param  {Object} data - specifies the data\n     * @returns {string} returns the format\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    CellRenderer.prototype.format = function (column, value, data) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.format)) {\n            if (column.type === 'number' && isNaN(parseInt(value, 10))) {\n                value = null;\n            }\n            if (column.type === 'dateonly' && typeof value === 'string' && value) {\n                var arr = value.split(/[^0-9.]/);\n                value = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10));\n            }\n            value = this.formatter.toView(value, column.getFormatter());\n        }\n        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) ? '' : value.toString();\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    CellRenderer.prototype.evaluate = function (node, cell, data, attributes, fData, isEdit) {\n        var _a;\n        var result;\n        if (cell.column.template) {\n            var isReactCompiler = this.parent.isReact && typeof (cell.column.template) !== 'string' && !(cell.column.template.prototype && cell.column.template.prototype.CSPTemplate);\n            var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n                this.parent.parentDetails.parentInstObj.isReact;\n            var isReactPrintGrid = this.parent.printGridParent && this.parent.printGridParent.isReact;\n            var literals_1 = ['index'];\n            var dummyData = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.extendObjWithFn)({}, data, (_a = {}, _a[_base_constant__WEBPACK_IMPORTED_MODULE_3__.foreignKeyData] = fData, _a.column = cell.column, _a));\n            var templateID = this.parent.element.id + cell.column.uid;\n            var str = 'isStringTemplate';\n            if (isReactCompiler || isReactChild || isReactPrintGrid) {\n                var copied = { 'index': attributes[literals_1[0]] };\n                cell.column.getColumnTemplate()((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(copied, dummyData), this.parent, 'columnTemplate', templateID, this.parent[\"\" + str], null, node);\n            }\n            else {\n                result = cell.column.getColumnTemplate()((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({ 'index': attributes[literals_1[0]] }, dummyData), this.parent, 'template', templateID, this.parent[\"\" + str], undefined, undefined, this.parent['root']);\n            }\n            if (!isReactCompiler && !isReactChild && !isReactPrintGrid) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.appendChildren)(node, result);\n            }\n            this.parent.notify('template-result', { template: result });\n            result = null;\n            if (cell.column.templateOptions.enableAriaLabel) {\n                node.setAttribute('aria-label', node.innerText + this.localizer.getConstant('TemplateCell') +\n                    this.localizer.getConstant('ColumnHeader') + cell.column.headerText);\n            }\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Function to invoke the custom formatter available in the column object.\n     *\n     * @param  {Column} column - specifies the column\n     * @param  {Object} value - specifies the value\n     * @param  {Object} data - specifies the data\n     * @returns {Object} returns the object\n     */\n    CellRenderer.prototype.invokeFormatter = function (column, value, data) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.formatter)) {\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.doesImplementInterface)(column.formatter, 'getValue')) {\n                var formatter = column.formatter;\n                value = new formatter().getValue(column, data);\n            }\n            else if (typeof column.formatter === 'function') {\n                value = column.formatter(column, data);\n            }\n            else {\n                value = column.formatter.getValue(column, data);\n            }\n        }\n        return value;\n    };\n    /**\n     * Function to render the cell content based on Column object.\n     *\n     * @param {Cell<Column>} cell - specifies the cell\n     * @param {Object} data - specifies the data\n     * @param {Object} attributes - specifies the attributes\n     * @param {boolean} isExpand - specifies the boolean for expand\n     * @param {boolean} isEdit - specifies the boolean for edit\n     * @returns {Element} returns the element\n     */\n    CellRenderer.prototype.render = function (cell, data, attributes, isExpand, isEdit) {\n        return this.refreshCell(cell, data, attributes, isEdit);\n    };\n    /**\n     * Function to refresh the cell content based on Column object.\n     *\n     * @param {Element} td - specifies the element\n     * @param {Cell<Column>} cell - specifies the cell\n     * @param {Object} data - specifies the data\n     * @param {Object} attributes - specifies the attribute\n     * @returns {void}\n     */\n    CellRenderer.prototype.refreshTD = function (td, cell, data, attributes) {\n        var isEdit = this.parent.editSettings.mode === 'Batch' && td.classList.contains('e-editedbatchcell');\n        if (this.parent.isReact) {\n            var cellIndex = td.cellIndex;\n            var parentRow = td.parentElement;\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(td);\n            var newTD = this.refreshCell(cell, data, attributes, isEdit);\n            this.cloneAttributes(newTD, td);\n            if (parentRow.cells.length !== cellIndex - 1) {\n                parentRow.insertBefore(newTD, parentRow.cells[parseInt(cellIndex.toString(), 10)]);\n            }\n            else {\n                parentRow.appendChild(newTD);\n            }\n        }\n        else {\n            var node = this.refreshCell(cell, data, attributes, isEdit);\n            td.innerHTML = '';\n            var arialabelText = node.getAttribute('aria-label');\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            arialabelText ? td.setAttribute('aria-label', arialabelText) : null;\n            var elements = [].slice.call(node.childNodes);\n            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n                var elem = elements_1[_i];\n                td.appendChild(elem);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    CellRenderer.prototype.cloneAttributes = function (target, source) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var attrs = source.attributes;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var i = attrs.length;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var attr;\n        while (i--) {\n            attr = attrs[parseInt(i.toString(), 10)];\n            target.setAttribute(attr.name, attr.value);\n        }\n    };\n    CellRenderer.prototype.refreshCell = function (cell, data, attributes, isEdit) {\n        var _a;\n        var node = this.element.cloneNode();\n        var column = cell.column;\n        var fData;\n        if (cell.isForeignKey) {\n            fData = cell.foreignKeyData[0] || (_a = {}, _a[column.foreignKeyValue] = column.format ? null : '', _a);\n        }\n        //Prepare innerHtml\n        var innerHtml = this.getGui();\n        var value = cell.isForeignKey ? this.getValue(column.foreignKeyValue, fData, column) :\n            this.getValue(column.field, data, column);\n        if ((column.type === 'date' || column.type === 'datetime') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n            value = new Date(value);\n        }\n        if (column.type === 'dateonly' && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value) && typeof value === 'string') {\n            var arr = value.split(/[^0-9.]/);\n            value = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10));\n        }\n        value = this.format(column, value, data);\n        innerHtml = value.toString();\n        if (column.type === 'boolean' && !column.displayAsCheckBox) {\n            var localeStr = (value !== 'true' && value !== 'false') ? null : value === 'true' ? 'True' : 'False';\n            innerHtml = localeStr ? this.localizer.getConstant(localeStr) : innerHtml;\n        }\n        var fromFormatter = this.invokeFormatter(column, value, data);\n        innerHtml = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.formatter) ? (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(fromFormatter) ? '' : fromFormatter.toString() : innerHtml;\n        if (this.evaluate(node, cell, data, attributes, fData, isEdit) && column.type !== 'checkbox') {\n            this.appendHtml(node, this.parent.sanitize(innerHtml), column.getDomSetter ? column.getDomSetter() : 'innerHTML');\n        }\n        else if (column.type === 'checkbox') {\n            node.classList.add(_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.gridChkBox);\n            if (this.parent.selectionSettings.persistSelection) {\n                value = value === 'true';\n            }\n            else {\n                value = false;\n            }\n            var checkWrap = (0,_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_4__.createCheckBox)(this.parent.createElement, false, { checked: value, label: ' ' });\n            if (this.parent.cssClass) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([checkWrap], [this.parent.cssClass]);\n            }\n            this.rowChkBox.id = 'checkbox-' + cell.rowID;\n            checkWrap.insertBefore(this.rowChkBox.cloneNode(), checkWrap.firstChild);\n            node.appendChild(checkWrap);\n        }\n        if (this.parent.checkAllRows === 'Check' && this.parent.enableVirtualization) {\n            cell.isSelected = true;\n        }\n        this.setAttributes(node, cell, attributes);\n        if (column.type === 'boolean' && column.displayAsCheckBox) {\n            var checked = isNaN(parseInt(value.toString(), 10)) ? value === 'true' : parseInt(value.toString(), 10) > 0;\n            var checkWrap = (0,_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_4__.createCheckBox)(this.parent.createElement, false, { checked: checked, label: ' ' });\n            node.innerHTML = '';\n            node.classList.add('e-gridchkbox-cell');\n            checkWrap.classList.add('e-checkbox-disabled');\n            if (this.parent.cssClass) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([checkWrap], [this.parent.cssClass]);\n            }\n            node.appendChild(checkWrap);\n        }\n        if (node.classList.contains('e-summarycell') && !data.key) {\n            var uid = node.getAttribute('e-mappinguid');\n            column = this.parent.getColumnByUid(uid);\n            node.setAttribute('aria-label', innerHtml + this.localizer.getConstant('ColumnHeader') + cell.column.headerText);\n        }\n        if (this.parent.isFrozenGrid() && (!data || (data && !data.key))) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addStickyColumnPosition)(this.parent, column, node);\n        }\n        return node;\n    };\n    /**\n     * Function to specifies how the result content to be placed in the cell.\n     *\n     * @param {Element} node - specifies the node\n     * @param {string|Element} innerHtml - specifies the innerHTML\n     * @param {string} property - specifies the element\n     * @returns {Element} returns the element\n     */\n    CellRenderer.prototype.appendHtml = function (node, innerHtml, property) {\n        if (property === void 0) { property = 'innerHTML'; }\n        node[\"\" + property] = innerHtml;\n        return node;\n    };\n    /**\n     * @param {HTMLElement} node - specifies the node\n     * @param {cell<Column>} cell - specifies the cell\n     * @param {Object} attributes - specifies the attributes\n     * @returns {void}\n     * @hidden\n     */\n    CellRenderer.prototype.setAttributes = function (node, cell, attributes) {\n        var column = cell.column;\n        this.buildAttributeFromCell(node, cell, column.type === 'checkbox');\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setStyleAndAttributes)(node, attributes);\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setStyleAndAttributes)(node, cell.attributes);\n        if (column.customAttributes) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setStyleAndAttributes)(node, column.customAttributes);\n        }\n        if (this.parent.rowRenderingMode === 'Vertical') {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setStyleAndAttributes)(node, { 'data-cell': column.headerText });\n        }\n        if (column.textAlign) {\n            var alignmentClassMap = { right: 'e-rightalign', left: 'e-leftalign', center: 'e-centeralign', justify: 'e-justifyalign' };\n            if (alignmentClassMap[column.textAlign.toLowerCase()]) {\n                node.classList.add(alignmentClassMap[column.textAlign.toLowerCase()]);\n            }\n        }\n        if (column.clipMode === 'Clip' || (!column.clipMode && this.parent.clipMode === 'Clip')) {\n            node.classList.add('e-gridclip');\n        }\n        else if (column.clipMode === 'EllipsisWithTooltip' || (!column.clipMode && this.parent.clipMode === 'EllipsisWithTooltip')\n            && !(this.parent.allowTextWrap && (this.parent.textWrapSettings.wrapMode === 'Content'\n                || this.parent.textWrapSettings.wrapMode === 'Both'))) {\n            if (column.type !== 'checkbox') {\n                node.classList.add('e-ellipsistooltip');\n            }\n        }\n    };\n    CellRenderer.prototype.buildAttributeFromCell = function (node, cell, isCheckBoxType) {\n        var attr = {};\n        var classes = [];\n        if (cell.colSpan) {\n            attr.colSpan = cell.colSpan;\n        }\n        if (cell.rowSpan) {\n            attr.rowSpan = cell.rowSpan;\n        }\n        if (cell.isTemplate) {\n            classes.push('e-templatecell');\n        }\n        if (cell.isSelected) {\n            classes.push.apply(classes, ['e-selectionbackground', 'e-active']);\n            if (isCheckBoxType) {\n                node.querySelector('.e-frame').classList.add('e-check');\n            }\n        }\n        if (cell.isColumnSelected) {\n            classes.push.apply(classes, ['e-columnselection']);\n        }\n        if (cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_5__.CellType.Header) {\n            attr[_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex] = cell.colIndex + 1;\n        }\n        else if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.index)) {\n            attr[_base_string_literals__WEBPACK_IMPORTED_MODULE_1__.ariaColIndex] = cell.index + 1;\n        }\n        if (!cell.visible) {\n            classes.push('e-hide');\n        }\n        attr.class = classes;\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.setStyleAndAttributes)(node, attr);\n    };\n    CellRenderer.prototype.getValue = function (field, data, column) {\n        return column.valueAccessor(field, data, column);\n    };\n    return CellRenderer;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContentRender: () => (/* binding */ ContentRender)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _row_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./row-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-renderer.js\");\n/* harmony import */ var _cell_merge_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cell-merge-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-merge-renderer.js\");\n/* harmony import */ var _services_row_model_generator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../services/row-model-generator */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/row-model-generator.js\");\n/* harmony import */ var _services_group_model_generator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/group-model-generator */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/group-model-generator.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n\n\n\n\n// eslint-disable-next-line valid-jsdoc, jsdoc/require-param, jsdoc/require-returns\n/**\n * Content module is used to render grid content\n *\n * @hidden\n */\nvar ContentRender = /** @class */ (function () {\n    /**\n     * Constructor for content renderer module\n     *\n     * @param {IGrid} parent - specifies the Igrid\n     * @param {ServiceLocator} serviceLocator - specifies the service locator\n     */\n    function ContentRender(parent, serviceLocator) {\n        var _this = this;\n        this.rows = [];\n        this.freezeRows = [];\n        this.movableRows = [];\n        this.freezeRowElements = [];\n        /** @hidden */\n        this.currentInfo = {};\n        /** @hidden */\n        this.prevCurrentView = [];\n        this.isLoaded = true;\n        this.drop = function (e) {\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.columnDrop, { target: e.target, droppedElement: e.droppedElement });\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(e.droppedElement);\n        };\n        /** @hidden */\n        this.infiniteCache = {};\n        /** @hidden */\n        this.visibleRows = [];\n        this.visibleFrozenRows = [];\n        this.rightFreezeRows = [];\n        this.isAddRows = false;\n        this.isInfiniteFreeze = false;\n        this.useGroupCache = false;\n        /** @hidden */\n        this.tempFreezeRows = [];\n        this.rafCallback = function (args) {\n            var arg = args;\n            return function () {\n                _this.ariaService.setBusy(_this.getPanel().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content), false);\n                if (_this.parent.isDestroyed) {\n                    return;\n                }\n                var rows = _this.rows.slice(0);\n                if (_this.parent.enableInfiniteScrolling) {\n                    if (_this.parent.groupSettings.enableLazyLoading) {\n                        for (var i = 0; i < _this.visibleRows.length; i++) {\n                            _this.setRowsInLazyGroup(_this.visibleRows[parseInt(i.toString(), 10)], i);\n                        }\n                    }\n                    rows = _this.parent.getRowsObject();\n                    var prevPage = arg.prevPage;\n                    if (_this.parent.infiniteScrollSettings.enableCache && prevPage) {\n                        var maxBlock = _this.parent.infiniteScrollSettings.maxBlocks;\n                        rows = [];\n                        var rowIdx = (parseInt(_this.rowElements[0].getAttribute('aria-rowindex'), 10));\n                        var startIdx = Math.ceil(rowIdx / _this.parent.pageSettings.pageSize);\n                        for (var i = 0, count = startIdx; i < maxBlock; i++, count++) {\n                            if (_this.infiniteCache[parseInt(count.toString(), 10)]) {\n                                rows = rows.concat(_this.infiniteCache[parseInt(count.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.contentReady, { rows: rows, args: arg });\n                if (_this.parent.editSettings.showAddNewRow && _this.parent.addNewRowFocus) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.showAddNewRowFocus, {});\n                    _this.parent.addNewRowFocus = false;\n                }\n                if (_this.parent.autoFit) {\n                    _this.parent.preventAdjustColumns();\n                }\n                if (!_this.parent.isInitialLoad) {\n                    _this.parent.focusModule.setFirstFocusableTabIndex();\n                }\n                if (_this.isLoaded) {\n                    _this.parent.isManualRefresh = false;\n                    if (_this.parent.enableInfiniteScrolling && _this.parent.groupSettings.enableLazyLoading && args.requestType === 'sorting') {\n                        _this.parent.infiniteScrollModule['groupCaptionAction'] = undefined;\n                    }\n                    var isReactChild = _this.parent.parentDetails && _this.parent.parentDetails.parentInstObj &&\n                        _this.parent.parentDetails.parentInstObj.isReact;\n                    if ((_this.parent.isReact || isReactChild) && _this.parent.element.querySelectorAll('.e-templatecell').length) {\n                        // eslint-disable-next-line @typescript-eslint/no-this-alias\n                        var thisRef_1 = _this;\n                        thisRef_1.parent.renderTemplates(function () {\n                            thisRef_1.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataBound, {}, function () {\n                                if (thisRef_1.parent.allowTextWrap) {\n                                    thisRef_1.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.freezeRender, { case: 'textwrap' });\n                                }\n                            });\n                        });\n                    }\n                    else {\n                        _this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataBound, {}, function () {\n                            if (_this.parent.allowTextWrap) {\n                                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.freezeRender, { case: 'textwrap' });\n                            }\n                        });\n                    }\n                    if (_this.parent.allowTextWrap && _this.parent.height === 'auto') {\n                        if (_this.parent.getContentTable().scrollHeight > _this.parent.getContent().clientHeight) {\n                            _this.parent.scrollModule.setPadding();\n                        }\n                        else {\n                            _this.parent.scrollModule.removePadding();\n                        }\n                    }\n                }\n                if (arg) {\n                    var action = (arg.requestType || '').toLowerCase() + '-complete';\n                    _this.parent.notify(action, arg);\n                    if (args.requestType === 'batchsave') {\n                        args.cancel = false;\n                        _this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.actionComplete, args);\n                    }\n                }\n                if (_this.isLoaded) {\n                    _this.parent.hideSpinner();\n                }\n            };\n        };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.widthService = serviceLocator.getService('widthService');\n        this.ariaService = this.serviceLocator.getService('ariaService');\n        this.parent.enableDeepCompare = this.parent.getDataModule().isRemote();\n        this.generator = this.getModelGenerator();\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization\n            && !this.parent.groupSettings.enableLazyLoading) {\n            this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.columnVisibilityChanged, this.setVisible, this);\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.colGroupRefresh, this.colGroupRefresh, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.uiUpdate, this.enableAfterRender, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.beforeCellFocused, this.beforeCellFocused, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.destroy, this.droppableDestroy, this);\n    }\n    ContentRender.prototype.beforeCellFocused = function (e) {\n        if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n            this.pressedKey = e.keyArgs.action;\n        }\n        else {\n            this.pressedKey = undefined;\n        }\n    };\n    /**\n     * The function is used to render grid content div\n     *\n     * @returns {void}\n     */\n    ContentRender.prototype.renderPanel = function () {\n        var gObj = this.parent;\n        var div = this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridContent);\n        if (div) {\n            this.ariaService.setOptions(this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content), { busy: false });\n            this.setPanel(div);\n            return;\n        }\n        div = this.parent.createElement('div', { className: _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridContent });\n        var innerDiv = this.parent.createElement('div', {\n            className: _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content\n        });\n        this.ariaService.setOptions(innerDiv, { busy: false });\n        if (this.parent.enableColumnVirtualization && this.parent.isFrozenGrid()) {\n            this.renderHorizontalScrollbar(div);\n            innerDiv.classList.add('e-virtual-content');\n        }\n        div.appendChild(innerDiv);\n        this.setPanel(div);\n        gObj.element.appendChild(div);\n    };\n    ContentRender.prototype.renderHorizontalScrollbar = function (element) {\n        var parent = this.parent.createElement('div', { className: 'e-movablescrollbar' });\n        var child = this.parent.createElement('div', { className: 'e-movablechild' });\n        var scrollbarHeight = (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.getScrollBarWidth)().toString();\n        this.setScrollbarHeight(child, scrollbarHeight);\n        this.setScrollbarHeight(parent, scrollbarHeight);\n        parent.appendChild(child);\n        element.appendChild(parent);\n    };\n    ContentRender.prototype.setScrollbarHeight = function (ele, height) {\n        ele.style.minHeight = height + 'px';\n        ele.style.maxHeight = height + 'px';\n    };\n    /**\n     * The function is used to render grid content table\n     *\n     * @returns {void}\n     */\n    ContentRender.prototype.renderTable = function () {\n        var contentDiv = this.getPanel();\n        var virtualTable = contentDiv.querySelector('.e-virtualtable');\n        var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n        if (this.parent.enableVirtualization && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(virtualTable) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(virtualTrack)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(virtualTable);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(virtualTrack);\n        }\n        contentDiv.appendChild(this.createContentTable('_content_table'));\n        this.setTable(contentDiv.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.table));\n        if (this.parent.selectionSettings.type === 'Multiple') {\n            this.ariaService.setOptions(this.parent.element, {\n                multiselectable: true\n            });\n        }\n        this.initializeContentDrop();\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().classList.add('e-frozenhdr');\n        }\n    };\n    /**\n     * The function is used to create content table elements\n     *\n     * @param {string} id - specifies the id\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    ContentRender.prototype.createContentTable = function (id) {\n        var innerDiv = this.getPanel().firstElementChild;\n        if (this.getTable()) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.getTable());\n        }\n        var table = innerDiv.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.table) ? innerDiv.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.table) :\n            this.parent.createElement('table', {\n                className: _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.table, attrs: {\n                    role: 'presentation',\n                    id: this.parent.element.id + id\n                }\n            });\n        table.style.cssText = 'border-collapse: separate; border-spacing: .25px;';\n        this.setColGroup(this.parent.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.colGroup).cloneNode(true));\n        table.appendChild(this.getColGroup());\n        table.appendChild(this.parent.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody, { attrs: { role: 'rowgroup' } }));\n        innerDiv.appendChild(table);\n        return innerDiv;\n    };\n    /**\n     * Refresh the content of the Grid.\n     *\n     * @param {NotifyArgs} args - specifies the args\n     * @returns {void}\n     */\n    // tslint:disable-next-line:max-func-body-length\n    ContentRender.prototype.refreshContentRows = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        if (gObj.currentViewData.length === 0) {\n            return;\n        }\n        if (gObj.editSettings && gObj.editModule && gObj.editSettings.mode === 'Batch' && gObj.editModule.formObj\n            && gObj.editSettings.showConfirmDialog === false) {\n            gObj.editModule.destroyForm();\n        }\n        var dataSource = this.currentMovableRows || gObj.currentViewData;\n        var isReact = gObj.isReact && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.rowTemplate);\n        var isReactPrintGrid = this.parent.printGridParent && this.parent.printGridParent.isReact;\n        var frag = isReact || isReactPrintGrid ? gObj.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody, { attrs: { role: 'rowgroup' } }) : document.createDocumentFragment();\n        if (!this.initialPageRecords) {\n            this.initialPageRecords = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)([], dataSource);\n        }\n        var hdrfrag = isReact ? gObj.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody, { attrs: { role: 'rowgroup' } }) : document.createDocumentFragment();\n        var refFrag;\n        var refHdrfrag;\n        if ((gObj.isReact || isReactPrintGrid) && gObj.rowTemplate) {\n            refFrag = frag;\n            refHdrfrag = hdrfrag;\n        }\n        var columns = gObj.getColumns();\n        var tr;\n        var hdrTbody;\n        var trElement;\n        var row = new _row_renderer__WEBPACK_IMPORTED_MODULE_4__.RowRenderer(this.serviceLocator, null, this.parent);\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling\n            && args.requestType === 'infiniteScroll';\n        var isColumnVirtualInfiniteProcess = this.isInfiniteColumnvirtualization() && args.requestType !== 'virtualscroll';\n        var infiniteDetail = gObj.enableInfiniteScrolling && (gObj.childGrid || gObj.detailTemplate) ? true : false;\n        var infiniteDetailModified = infiniteDetail && ((args.action === 'add' && args.requestType === 'save')\n            || args.requestType === 'delete');\n        if (infiniteDetailModified) {\n            args.startIndex = 0;\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.detachDetailTemplate, {});\n        }\n        if (!(isInfiniteScroll && (gObj.childGrid || gObj.detailTemplate) && !gObj.infiniteScrollSettings.enableCache)) {\n            if (infiniteDetail) {\n                this.parent.infiniteScrollModule.infiniteDetailDestroy = true;\n            }\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.destroyChildGrid, isInfiniteScroll && (gObj.childGrid || gObj.detailTemplate)\n                && gObj.infiniteScrollSettings.enableCache ? args : {});\n        }\n        this.rowElements = [];\n        this.rows = [];\n        this.tempFreezeRows = [];\n        var tbdy;\n        var tableName;\n        var isGroupFrozenHdr = this.parent.frozenRows && this.parent.groupSettings.columns.length ? true : false;\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_3__.isGroupAdaptive)(gObj)) {\n            if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete']\n                .some(function (value) { return args.requestType === value; })) {\n                this.emptyVcRows();\n            }\n        }\n        var modelData;\n        modelData = this.checkCache(modelData, args);\n        if (!this.isAddRows && !this.useGroupCache) {\n            modelData = this.generator.generateRows(dataSource, args);\n        }\n        this.setGroupCache(modelData, args);\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.setInfiniteCache, { isInfiniteScroll: isInfiniteScroll, modelData: modelData, args: args });\n        var isFrozenLeft = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var registeredTemplates = this.parent.registeredTemplate;\n        if (!(args.requestType === 'infiniteScroll' && !this.parent.infiniteScrollSettings.enableCache) && registeredTemplates\n            && registeredTemplates.template && !args.isFrozen && !isFrozenLeft) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templatetoclear = [];\n            for (var i = 0; i < registeredTemplates.template.length; i++) {\n                for (var j = 0; j < registeredTemplates.template[parseInt(i.toString(), 10)].rootNodes.length; j++) {\n                    if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(registeredTemplates.template[parseInt(i.toString(), 10)]\n                        .rootNodes[parseInt(j.toString(), 10)].parentNode)) {\n                        templatetoclear.push(registeredTemplates.template[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            this.parent.destroyTemplate(['template'], templatetoclear);\n        }\n        if ((this.parent.isReact || this.parent.isVue) && !(args.requestType === 'infiniteScroll' && !this.parent.infiniteScrollSettings.enableCache) && !args.isFrozen) {\n            var templates = [\n                this.parent.isVue ? 'template' : 'columnTemplate', 'rowTemplate', 'detailTemplate',\n                'captionTemplate', 'commandsTemplate', 'groupFooterTemplate', 'groupCaptionTemplate'\n            ];\n            if (args.requestType === 'infiniteScroll' && this.parent.infiniteScrollSettings.enableCache) {\n                templates = [\n                    this.parent.isVue ? 'template' : 'columnTemplate', 'commandsTemplate'\n                ];\n            }\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.clearReactVueTemplates)(this.parent, templates);\n        }\n        if (this.parent.enableColumnVirtualization) {\n            var cellMerge = new _cell_merge_renderer__WEBPACK_IMPORTED_MODULE_5__.CellMergeRender(this.serviceLocator, this.parent);\n            cellMerge.updateVirtualCells(modelData);\n        }\n        this.tbody = this.getTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody);\n        var startIndex = 0;\n        var blockLoad = true;\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_3__.isGroupAdaptive)(gObj) && gObj.vcRows.length) {\n            var top_1 = 'top';\n            var scrollTop = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top :\n                (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.scrollTop) ? args.scrollTop[\"\" + top_1] : 0);\n            if (scrollTop !== 0) {\n                var offsets_1 = gObj.vGroupOffsets;\n                var bSize = gObj.pageSettings.pageSize / 2;\n                var values = Object.keys(offsets_1).map(function (key) { return offsets_1[\"\" + key]; });\n                for (var m = 0; m < values.length; m++) {\n                    if (scrollTop < values[parseInt(m.toString(), 10)]) {\n                        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n                            startIndex = m > 0 ? ((m - 1) * bSize) : (m * bSize);\n                            break;\n                        }\n                        else {\n                            startIndex = m * bSize;\n                            if (this.parent.contentModule.isEndBlock(m) || this.parent.contentModule.isEndBlock(m + 1)) {\n                                args.virtualInfo.blockIndexes = [m, m + 1];\n                            }\n                            break;\n                        }\n                    }\n                }\n                if (Math.round(scrollTop + this.contentPanel.firstElementChild.offsetHeight) >=\n                    this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n                    blockLoad = false;\n                }\n            }\n        }\n        var isVFFrozenOnly = gObj.frozenRows && this.parent.enableVirtualization\n            && args.requestType === 'reorder';\n        if ((gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X') || isVFFrozenOnly) {\n            var bIndex = args.virtualInfo.blockIndexes;\n            var page = args.virtualInfo.page;\n            args.virtualInfo.blockIndexes = [1, 2];\n            if (isVFFrozenOnly) {\n                args.virtualInfo.page = 1;\n            }\n            var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n            var mhdrData = this.vgenerator\n                .generateRows(data, args);\n            mhdrData.splice(this.parent.frozenRows);\n            for (var i = 0; i < this.parent.frozenRows; i++) {\n                // mhdrData[parseInt(i.toString(), 10)].cells.splice(0, this.parent.getFrozenColumns());\n                tr = row.render(mhdrData[parseInt(i.toString(), 10)], columns);\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.addFixedColumnBorder)(tr);\n                hdrfrag.appendChild(tr);\n            }\n            args.virtualInfo.blockIndexes = bIndex;\n            args.virtualInfo.page = page;\n            if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n        }\n        this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n        if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n            (this.parent.enableVirtualization ? this.parent.lazyLoadRender :\n                this.parent.contentModule).refRowsObj[this.parent.pageSettings.currentPage] = [];\n        }\n        if ((this.parent.enableInfiniteScrolling && this.parent.groupSettings.enableLazyLoading && args.requestType === 'delete')\n            || infiniteDetailModified) { //  || (this.parent.infiniteScrollSettings && this.parent.infiniteScrollSettings.enableCache))\n            this.visibleRows = [];\n        }\n        var _loop_1 = function (i, len) {\n            this_1.rows.push(modelData[parseInt(i.toString(), 10)]);\n            if (this_1.parent.groupSettings.enableLazyLoading && !this_1.useGroupCache && this_1.parent.groupSettings.columns.length) {\n                (this_1.parent.enableVirtualization ? this_1.parent.lazyLoadRender :\n                    this_1.parent.contentModule).refRowsObj[this_1.parent.pageSettings.currentPage].push(modelData[parseInt(i.toString(), 10)]);\n                this_1.setRowsInLazyGroup(modelData[parseInt(i.toString(), 10)], i);\n                if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(modelData[parseInt(i.toString(), 10)].indent)) {\n                    return \"continue\";\n                }\n            }\n            this_1.setInfiniteVisibleRows(args, modelData[parseInt(i.toString(), 10)]);\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_3__.isGroupAdaptive)(gObj) && args.virtualInfo && args.virtualInfo.blockIndexes\n                && (this_1.rowElements.length >= (args.virtualInfo.blockIndexes.length * this_1.parent.contentModule.getBlockSize()))\n                && blockLoad) {\n                this_1.parent.currentViewData['records'] = this_1.rows.map(function (m) { return m.data; });\n                return \"break\";\n            }\n            if (!gObj.rowTemplate) {\n                tr = row.render(modelData[parseInt(i.toString(), 10)], columns);\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.addFixedColumnBorder)(tr);\n                var isVFreorder = this_1.ensureFrozenHeaderRender(args);\n                if (gObj.frozenRows && (i < gObj.frozenRows || isGroupFrozenHdr) && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder\n                    && this_1.ensureVirtualFrozenHeaderRender(args)) {\n                    hdrfrag.appendChild(tr);\n                }\n                else {\n                    frag.appendChild(tr);\n                }\n                var rowIdx = parseInt(tr.getAttribute('aria-rowindex'), 10) - 1;\n                if (rowIdx + 1 === gObj.frozenRows) {\n                    isGroupFrozenHdr = false;\n                }\n                if (modelData[parseInt(i.toString(), 10)].isExpand) {\n                    gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n                }\n            }\n            else {\n                var rowTemplateID = gObj.element.id + 'rowTemplate';\n                var elements = void 0;\n                if (gObj.isReact || isReactPrintGrid) {\n                    var isHeader = gObj.frozenRows && i < gObj.frozenRows;\n                    var copied = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({ index: i }, dataSource[parseInt(i.toString(), 10)]);\n                    gObj.getRowTemplate()(copied, gObj, 'rowTemplate', rowTemplateID, null, null, isHeader ? hdrfrag : frag);\n                    if (gObj.requireTemplateRef) {\n                        // eslint-disable-next-line @typescript-eslint/no-this-alias\n                        var thisRef_2 = this_1;\n                        thisRef_2.parent.renderTemplates(function () {\n                            if (gObj.frozenRows && i < gObj.frozenRows) {\n                                tr = refHdrfrag.childNodes[parseInt(i.toString(), 10)];\n                            }\n                            else {\n                                trElement = refFrag.childNodes[parseInt(i.toString(), 10)];\n                            }\n                            var arg = { data: modelData[parseInt(i.toString(), 10)].data,\n                                row: trElement ? trElement : tr };\n                            thisRef_2.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.rowDataBound, arg);\n                            if (modelData[parseInt(i.toString(), 10)].isDataRow || (thisRef_2.parent.enableVirtualization &&\n                                thisRef_2.parent.groupSettings.enableLazyLoading)) {\n                                thisRef_2.rowElements.push(arg.row);\n                            }\n                            thisRef_2.ariaService.setOptions(thisRef_2.parent.element, {\n                                colcount: gObj.getColumns().length.toString()\n                            });\n                            if (i === modelData.length - 1) {\n                                refFrag = null;\n                                refHdrfrag = null;\n                            }\n                        });\n                        return \"continue\";\n                    }\n                }\n                else {\n                    elements = gObj.getRowTemplate()((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({ index: i }, dataSource[parseInt(i.toString(), 10)]), gObj, 'rowTemplate', rowTemplateID, undefined, undefined, undefined, this_1.parent['root']);\n                }\n                if (!gObj.isReact && elements[0].tagName === 'TBODY') {\n                    for (var j = 0; j < elements.length; j++) {\n                        var isTR = elements[parseInt(j.toString(), 10)].nodeName.toLowerCase() === 'tr';\n                        if (isTR || (elements[parseInt(j.toString(), 10)].querySelectorAll && elements[parseInt(j.toString(), 10)].querySelectorAll('tr').length)) {\n                            tr = isTR ? elements[parseInt(j.toString(), 10)] : elements[parseInt(j.toString(), 10)].querySelector('tr');\n                        }\n                    }\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        hdrfrag.appendChild(tr);\n                    }\n                    else {\n                        frag.appendChild(tr);\n                    }\n                }\n                else {\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        tr = !gObj.isReact ? (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.appendChildren)(hdrfrag, elements) : hdrfrag.lastElementChild;\n                    }\n                    else {\n                        // frag.appendChild(tr);\n                        if (!gObj.isReact) {\n                            tr = (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.appendChildren)(frag, elements);\n                        }\n                        trElement = gObj.isReact ? frag.lastElementChild : tr.lastElementChild;\n                    }\n                }\n                var arg = { data: modelData[parseInt(i.toString(), 10)].data, row: trElement ? trElement : tr };\n                this_1.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.rowDataBound, arg);\n            }\n            if (modelData[parseInt(i.toString(), 10)].isDataRow || (this_1.parent.enableVirtualization &&\n                this_1.parent.groupSettings.enableLazyLoading)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.rowTemplate) && (gObj.isAngular || gObj.isVue3 || gObj.isVue)) {\n                    this_1.rowElements.push(trElement ? trElement : tr);\n                }\n                else {\n                    this_1.rowElements.push(tr);\n                }\n            }\n            this_1.ariaService.setOptions(this_1.parent.element, { colcount: gObj.getColumns().length.toString() });\n        };\n        var this_1 = this;\n        for (var i = startIndex, len = modelData.length; i < len; i++) {\n            var state_1 = _loop_1(i, len);\n            if (state_1 === \"break\")\n                break;\n        }\n        var isReactChild = gObj.parentDetails && gObj.parentDetails.parentInstObj && gObj.parentDetails.parentInstObj.isReact;\n        if ((gObj.isReact || isReactChild) && !gObj.requireTemplateRef) {\n            gObj.renderTemplates();\n        }\n        if (this.parent.enableInfiniteScrolling && this.parent.groupSettings.enableLazyLoading) {\n            this.parent.contentModule.refRowsObj[this.parent.pageSettings.currentPage] =\n                this.parent.contentModule['groupCache'][this.parent.pageSettings.currentPage];\n        }\n        if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.refreshExpandandCollapse, {\n                rows: (this.parent.enableVirtualization ? this.parent.lazyLoadRender :\n                    this.parent.contentModule).refRowsObj[this.parent.pageSettings.currentPage]\n            });\n        }\n        gObj.removeMaskRow();\n        this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n        if ((gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll && this.ensureVirtualFrozenHeaderRender(args))\n            || (args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X')) {\n            hdrTbody = gObj.getHeaderTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody);\n            if (isReact) {\n                var parentTable = hdrTbody.parentElement;\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(hdrTbody);\n                parentTable.appendChild(hdrfrag);\n            }\n            else {\n                hdrTbody.innerHTML = '';\n                hdrTbody.appendChild(hdrfrag);\n            }\n            if (!gObj.isInitialLoad) {\n                gObj.scrollModule.setHeight();\n            }\n        }\n        // if (!gObj.enableVirtualization && hdrTbody && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n        //     cont.style.height = (cont.offsetHeight - hdrTbody.offsetHeight) + 'px';\n        // }\n        args.rows = this.rows.slice(0);\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.getUpdateUsingRaf)(function () {\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.beforeFragAppend, args);\n            if (!_this.parent.enableVirtualization && (!_this.parent.enableColumnVirtualization || isColumnVirtualInfiniteProcess)\n                && !isInfiniteScroll) {\n                if (!gObj.isReact) {\n                    _this.tbody.innerHTML = '';\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.tbody.parentElement)) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(_this.tbody);\n                }\n                else {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(gObj.getContentTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody));\n                }\n                _this.tbody = _this.parent.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody, { attrs: { role: 'rowgroup' } });\n            }\n            if (gObj.rowTemplate) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.updateBlazorTemplate)(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.parent.infiniteScrollModule) && ((_this.parent.enableInfiniteScrolling\n                && !_this.isInfiniteColumnvirtualization()) || isColumnVirtualInfiniteProcess)) {\n                _this.isAddRows = false;\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.removeInfiniteRows, { args: args });\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.appendInfiniteContent, {\n                    tbody: tbdy ? tbdy : _this.tbody, frag: frag, args: args, rows: _this.rows,\n                    rowElements: _this.rowElements, visibleRows: _this.visibleRows,\n                    tableName: tableName\n                });\n                if (_this.isInfiniteColumnvirtualization() && _this.parent.isFrozenGrid()) {\n                    var virtualTable = _this.parent.getContent().querySelector('.e-virtualtable');\n                    var transform = (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.getTransformValues)(virtualTable);\n                    _this.parent.contentModule.resetStickyLeftPos(transform.width);\n                    _this.widthService.refreshFrozenScrollbar();\n                }\n            }\n            else {\n                _this.useGroupCache = false;\n                _this.appendContent(_this.tbody, frag, args);\n            }\n            if (_this.parent.editSettings.showAddNewRow && (_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling)) {\n                var newRow = _this.parent.element.querySelector('.e-addrow-removed');\n                if (newRow) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(newRow);\n                }\n            }\n            var startAdd = !_this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.addedRow);\n            if (_this.parent.editSettings.showAddNewRow && _this.parent.editSettings.mode === 'Normal') {\n                if (startAdd) {\n                    if (_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling) {\n                        _this.parent.isAddNewRow = true;\n                    }\n                    _this.parent.isEdit = false;\n                    _this.parent.addRecord();\n                }\n                if (startAdd || ((_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling) &&\n                    ['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder']\n                        .some(function (value) { return args.requestType === value; }))) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.showAddNewRowFocus, {});\n                }\n            }\n            if (_this.parent.getVisibleFrozenRightCount() && _this.parent.getContent() && (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.getScrollWidth)(_this.parent) > 0) {\n                _this.parent.element.classList.add('e-right-shadow');\n            }\n            frag = null;\n        }, this.rafCallback((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, args)));\n    };\n    ContentRender.prototype.isInfiniteColumnvirtualization = function () {\n        return this.parent.enableColumnVirtualization && this.parent.enableInfiniteScrolling;\n    };\n    ContentRender.prototype.enableCacheOnInfiniteColumnVirtual = function () {\n        return this.isInfiniteColumnvirtualization() && this.parent.infiniteScrollSettings.enableCache;\n    };\n    ContentRender.prototype.emptyVcRows = function () {\n        this.parent.vcRows = [];\n        this.parent.vRows = [];\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ContentRender.prototype.appendContent = function (tbody, frag, args, tableName) {\n        var isReact = this.parent.isReact && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.rowTemplate);\n        if (isReact) {\n            this.getTable().appendChild(frag);\n        }\n        else {\n            tbody.appendChild(frag);\n            this.getTable().appendChild(tbody);\n        }\n        if (this.parent.rowRenderingMode === 'Vertical' && this.parent.allowTextWrap && (this.parent.textWrapSettings.wrapMode === 'Header'\n            || this.parent.textWrapSettings.wrapMode === 'Both')) {\n            var cells = tbody.querySelectorAll('td');\n            for (var i = 0; i < cells.length; i++) {\n                var headerCellHeight = parseFloat(document.defaultView.getComputedStyle(cells[parseInt(i.toString(), 10)], '::before').getPropertyValue('height'));\n                var cellHeight = cells[parseInt(i.toString(), 10)].offsetHeight;\n                if (headerCellHeight > cellHeight) {\n                    cells[parseInt(i.toString(), 10)].style.height = headerCellHeight + 'px';\n                    cells[parseInt(i.toString(), 10)].style.boxSizing = 'content-box';\n                }\n            }\n        }\n        if (this.parent.getVisibleFrozenLeftCount() && this.parent.enableColumnVirtualization) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n    };\n    ContentRender.prototype.setRowsInLazyGroup = function (row, index) {\n        if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n            (this.parent.enableVirtualization ? this.parent.lazyLoadRender :\n                this.parent.contentModule).maintainRows(row, index);\n        }\n    };\n    ContentRender.prototype.setGroupCache = function (data, args) {\n        if (!this.useGroupCache && this.parent.groupSettings.enableLazyLoading) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.setGroupCache, { args: args, data: data });\n        }\n    };\n    ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n        return !((this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) || (this.parent.infiniteScrollSettings.enableCache\n            && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete'\n            && this.parent.pageSettings.currentPage !== 1));\n    };\n    ContentRender.prototype.ensureVirtualFrozenHeaderRender = function (args) {\n        return !(this.parent.enableVirtualization && args.requestType === 'delete');\n    };\n    ContentRender.prototype.checkCache = function (modelData, args) {\n        if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n            this.isAddRows = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.infiniteCache[this.parent.pageSettings.currentPage]);\n            if (this.isAddRows) {\n                var data = this.infiniteCache[this.parent.pageSettings.currentPage];\n                modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n            }\n            return modelData;\n        }\n        if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length && (args.requestType === 'paging'\n            || args.requestType === 'columnstate' || args.requestType === 'reorder' || args.requestType === 'virtualscroll')\n            && (this.parent.enableVirtualization ? this.parent.lazyLoadRender :\n                this.parent.contentModule).getGroupCache()[this.parent.pageSettings.currentPage]) {\n            if (!this.parent.enableVirtualization) {\n                this.useGroupCache = true;\n            }\n            return this.parent.enableVirtualization ? this.parent.getRowsObject() :\n                this.parent.contentModule.initialGroupRows(args.requestType === 'reorder');\n        }\n        return null;\n    };\n    ContentRender.prototype.setInfiniteVisibleRows = function (args, data) {\n        if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache\n            && !(this.isInfiniteColumnvirtualization() && args.requestType === 'virtualscroll')) {\n            this.visibleRows.push(data);\n        }\n    };\n    ContentRender.prototype.getCurrentBlockInfiniteRecords = function () {\n        var data = [];\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            if (!Object.keys(this.infiniteCache).length) {\n                return [];\n            }\n            var rows = this.parent.getRows();\n            var index = parseInt(rows[this.parent.frozenRows].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.ariaRowIndex), 10) - 1;\n            var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n            index = parseInt(rows[rows.length - 1].getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.ariaRowIndex), 10) - 1;\n            var last = Math.ceil((index + (rows.length ? 1 : 0)) / this.parent.pageSettings.pageSize);\n            for (var i = first; i <= last; i++) {\n                data = !data.length ? this.infiniteCache[parseInt(i.toString(), 10)]\n                    : data.concat(this.infiniteCache[parseInt(i.toString(), 10)]);\n            }\n            if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n                data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n            }\n        }\n        return data;\n    };\n    ContentRender.prototype.getReorderedRows = function (args) {\n        return this.parent.contentModule.getReorderedFrozenRows(args);\n    };\n    ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n        if (this.parent.frozenRows && this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n            var tr = void 0;\n            var fhdrData = this.getReorderedRows(args);\n            for (var i = 0; i < fhdrData.length; i++) {\n                tr = row.render(fhdrData[parseInt(i.toString(), 10)], columns);\n                hdrfrag.appendChild(tr);\n            }\n            if (args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n        }\n    };\n    ContentRender.prototype.getInfiniteRows = function () {\n        var rows = [];\n        if (this.parent.enableInfiniteScrolling) {\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                var keys = Object.keys(this.infiniteCache);\n                for (var i = 0; i < keys.length; i++) {\n                    rows = rows.concat(this.infiniteCache[keys[parseInt(i.toString(), 10)]]);\n                }\n            }\n            else {\n                rows = this.visibleRows;\n            }\n        }\n        return rows;\n    };\n    ContentRender.prototype.getInfiniteMovableRows = function () {\n        var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n        var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows\n            : this.visibleRows : [];\n        return infiniteRows;\n    };\n    /**\n     * Get the content div element of grid\n     *\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.getPanel = function () {\n        return this.contentPanel;\n    };\n    /**\n     * Set the content div element of grid\n     *\n     * @param  {Element} panel - specifies the panel\n     * @returns {void}\n     */\n    ContentRender.prototype.setPanel = function (panel) {\n        this.contentPanel = panel;\n    };\n    /**\n     * Get the content table element of grid\n     *\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.getTable = function () {\n        return this.contentTable;\n    };\n    /**\n     * Set the content table element of grid\n     *\n     * @param  {Element} table - specifies the table\n     * @returns {void}\n     */\n    ContentRender.prototype.setTable = function (table) {\n        this.contentTable = table;\n    };\n    /**\n     * Get the Movable Row collection in the Freeze pane Grid.\n     *\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>} returns the row\n     */\n    ContentRender.prototype.getRows = function () {\n        var infiniteRows = this.getInfiniteRows();\n        return infiniteRows.length ? infiniteRows : this.rows;\n    };\n    /**\n     * Get the content table data row elements\n     *\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.getRowElements = function () {\n        return this.rowElements;\n    };\n    /**\n     * Get the content table data row elements\n     *\n     * @param {Element[]} elements - specifies the elements\n     * @returns {void}\n     */\n    ContentRender.prototype.setRowElements = function (elements) {\n        this.rowElements = elements;\n    };\n    /**\n     * Get the header colgroup element\n     *\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.getColGroup = function () {\n        return this.colgroup;\n    };\n    /**\n     * Set the header colgroup element\n     *\n     * @param {Element} colGroup - specifies the colgroup\n     * @returns {Element} returns the element\n     */\n    ContentRender.prototype.setColGroup = function (colGroup) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(colGroup)) {\n            colGroup.id = 'content-' + colGroup.id;\n        }\n        return this.colgroup = colGroup;\n    };\n    /**\n     * Function to hide content table column based on visible property\n     *\n     * @param {Column[]} columns - specifies the column\n     * @returns {void}\n     */\n    ContentRender.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        var rows = this.getRows();\n        var testRow;\n        rows.some(function (r) { if (r.isDataRow) {\n            testRow = r;\n        } return r.isDataRow; });\n        var needFullRefresh = true;\n        if (!gObj.groupSettings.columns.length && testRow) {\n            needFullRefresh = false;\n        }\n        var tr = gObj.getDataRows();\n        var args = {};\n        var infiniteData = this.infiniteRowVisibility();\n        var contentrows = infiniteData ? infiniteData\n            : this.rows.filter(function (row) { return !row.isDetailRow; });\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[parseInt(c.toString(), 10)];\n            var idx = this.parent.getNormalizedColumnIndex(column.uid);\n            var colIdx = this.parent.getColumnIndexByUid(column.uid);\n            var displayVal = column.visible === true ? '' : 'none';\n            if (idx !== -1 && testRow && idx < testRow.cells.length) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.getColGroup().childNodes[parseInt(idx.toString(), 10)], { 'display': displayVal });\n            }\n            if (!needFullRefresh) {\n                this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n            }\n            if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n                this.parent.updateMediaColumns(column);\n            }\n            this.parent.invokedFromMedia = false;\n        }\n        if (needFullRefresh) {\n            this.refreshContentRows({ requestType: 'refresh' });\n        }\n        else {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.partialRefresh, { rows: contentrows, args: args });\n            if (this.parent.editSettings.showAddNewRow && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.showAddNewRowFocus, {});\n            }\n        }\n    };\n    /**\n     * @param {Object} tr - specifies the trr\n     * @param {number} idx - specifies the idx\n     * @param {string} displayVal - specifies the displayval\n     * @param {Row<Column>} rows - specifies the rows\n     * @returns {void}\n     * @hidden\n     */\n    ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.setDisplayValue)(tr, idx, displayVal, rows, this.parent, this.parent.isRowDragable());\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.infiniteShowHide, { visible: displayVal, index: idx, isFreeze: this.isInfiniteFreeze });\n    };\n    ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n        var infiniteData;\n        if (this.parent.enableInfiniteScrolling) {\n            this.isInfiniteFreeze = isFreeze;\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                infiniteData = this.getCurrentBlockInfiniteRecords();\n            }\n            else {\n                infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n            }\n        }\n        return infiniteData;\n    };\n    ContentRender.prototype.colGroupRefresh = function () {\n        if (this.getColGroup()) {\n            var colGroup = this.getHeaderColGroup();\n            this.getTable().replaceChild(colGroup, this.getColGroup());\n            this.setColGroup(colGroup);\n        }\n    };\n    ContentRender.prototype.getHeaderColGroup = function () {\n        return this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridHeader)\n            .querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.colGroup + ':not(.e-masked-colgroup)').cloneNode(true);\n    };\n    ContentRender.prototype.initializeContentDrop = function () {\n        var gObj = this.parent;\n        this.droppable = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Droppable(gObj.element, {\n            accept: '.e-dragclone',\n            drop: this.drop\n        });\n    };\n    ContentRender.prototype.droppableDestroy = function () {\n        if (this.droppable && !this.droppable.isDestroyed) {\n            this.droppable.destroy();\n        }\n    };\n    ContentRender.prototype.canSkip = function (column, row, index) {\n        /**\n         * Skip the toggle visiblity operation when one of the following success\n         * 1. Grid has empty records\n         * 2. column visible property is unchanged\n         * 3. cell`s isVisible property is same as column`s visible property.\n         */\n        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row) || //(1)\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.visible) || //(2)\n            row.cells[parseInt(index.toString(), 10)].visible === column.visible; //(3)\n    };\n    ContentRender.prototype.getModelGenerator = function () {\n        return this.generator = this.parent.allowGrouping ? new _services_group_model_generator__WEBPACK_IMPORTED_MODULE_6__.GroupModelGenerator(this.parent) : new _services_row_model_generator__WEBPACK_IMPORTED_MODULE_7__.RowModelGenerator(this.parent);\n    };\n    ContentRender.prototype.renderEmpty = function (tbody) {\n        this.getTable().appendChild(tbody);\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody).innerHTML = '';\n        }\n    };\n    ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.setFreezeSelection, { uid: uid, set: set, clearAll: clearAll });\n        var row = this.getRows().filter(function (row) { return clearAll || uid === row.uid; });\n        for (var j = 0; j < row.length; j++) {\n            row[parseInt(j.toString(), 10)].isSelected = set;\n            var cells = row[parseInt(j.toString(), 10)].cells;\n            for (var k = 0; k < cells.length; k++) {\n                cells[parseInt(k.toString(), 10)].isSelected = set;\n            }\n        }\n    };\n    ContentRender.prototype.getRowByIndex = function (index) {\n        index = this.getInfiniteRowIndex(index);\n        return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index) ? this.parent.getDataRows()[parseInt(index.toString(), 10)] : undefined;\n    };\n    ContentRender.prototype.getInfiniteRowIndex = function (index) {\n        if (this.parent.infiniteScrollSettings.enableCache && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index)) {\n            var fRows = this.parent.frozenRows;\n            var idx = fRows > index ? 0 : fRows;\n            var firstRowIndex = parseInt(this.parent.getRows()[parseInt(idx.toString(), 10)]\n                .getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.ariaRowIndex), 10) - 1;\n            index = fRows > index ? index : (index - firstRowIndex) + fRows;\n        }\n        return index;\n    };\n    ContentRender.prototype.getVirtualRowIndex = function (index) {\n        return index;\n    };\n    ContentRender.prototype.enableAfterRender = function (e) {\n        if (e.module === 'group' && e.enable) {\n            this.generator = this.getModelGenerator();\n        }\n    };\n    ContentRender.prototype.setRowObjects = function (rows) {\n        this.rows = rows;\n    };\n    /**\n     * @param {NotifyArgs} args - specifies the args\n     * @returns {void}\n     * @hidden\n     */\n    ContentRender.prototype.immutableModeRendering = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        gObj.hideSpinner();\n        var key = gObj.getPrimaryKeyFieldNames()[0];\n        var oldKeys = {};\n        var newKeys = {};\n        var newRowObjs = [];\n        var oldIndexes = {};\n        var oldRowObjs = gObj.getRowsObject().slice();\n        var batchChangeKeys = this.getBatchEditedRecords(key, oldRowObjs);\n        var newIndexes = {};\n        var hasBatch = Object.keys(batchChangeKeys).length !== 0;\n        if (gObj.getContent().querySelector('.e-emptyrow') || args.requestType === 'reorder'\n            || this.parent.groupSettings.columns.length) {\n            this.refreshContentRows(args);\n        }\n        else {\n            if (gObj.currentViewData.length === 0) {\n                return;\n            }\n            var oldRowElements = {};\n            var tbody = gObj.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody, { attrs: { role: 'rowgroup' } });\n            var dataSource = gObj.currentViewData;\n            var trs = [].slice.call(this.getTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody).children);\n            if (this.prevCurrentView.length) {\n                var prevLen = this.prevCurrentView.length;\n                var currentLen = dataSource.length;\n                if (prevLen === currentLen) {\n                    for (var i = 0; i < currentLen; i++) {\n                        if (this.parent.editSettings.mode === 'Batch'\n                            && trs[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n                            trs.splice(i, 1);\n                            --i;\n                            continue;\n                        }\n                        newKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]] = oldKeys[this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key]] = i;\n                        newIndexes[parseInt(i.toString(), 10)] = dataSource[parseInt(i.toString(), 10)][\"\" + key];\n                        oldRowElements[oldRowObjs[parseInt(i.toString(), 10)].uid] = trs[parseInt(i.toString(), 10)];\n                        oldIndexes[parseInt(i.toString(), 10)] = this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key];\n                    }\n                }\n                else {\n                    for (var i = 0; i < currentLen; i++) {\n                        newKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]] = i;\n                        newIndexes[parseInt(i.toString(), 10)] = dataSource[parseInt(i.toString(), 10)][\"\" + key];\n                    }\n                    for (var i = 0; i < prevLen; i++) {\n                        if (this.parent.editSettings.mode === 'Batch'\n                            && trs[parseInt(i.toString(), 10)].classList.contains('e-insertedrow')) {\n                            trs.splice(i, 1);\n                            --i;\n                            continue;\n                        }\n                        oldRowElements[oldRowObjs[parseInt(i.toString(), 10)].uid] = trs[parseInt(i.toString(), 10)];\n                        oldKeys[this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key]] = i;\n                        oldIndexes[parseInt(i.toString(), 10)] = this.prevCurrentView[parseInt(i.toString(), 10)][\"\" + key];\n                    }\n                }\n            }\n            for (var i = 0; i < dataSource.length; i++) {\n                var oldIndex = oldKeys[dataSource[parseInt(i.toString(), 10)][\"\" + key]];\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldIndex)) {\n                    var isEqual = false;\n                    if (this.parent.enableDeepCompare) {\n                        isEqual = this.objectEqualityChecker(this.prevCurrentView[parseInt(oldIndex.toString(), 10)], dataSource[parseInt(i.toString(), 10)]);\n                    }\n                    var tr = oldRowElements[oldRowObjs[parseInt(oldIndex.toString(), 10)]\n                        .uid];\n                    newRowObjs.push(oldRowObjs[parseInt(oldIndex.toString(), 10)]);\n                    if (this.rowElements[parseInt(oldIndex.toString(), 10)] && this.rowElements[parseInt(oldIndex.toString(), 10)].getAttribute('data-uid') === newRowObjs[parseInt(i.toString(), 10)].uid\n                        && ((hasBatch && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(batchChangeKeys[newIndexes[parseInt(i.toString(), 10)]]))\n                            || (!hasBatch && (isEqual\n                                || this.prevCurrentView[parseInt(oldIndex.toString(), 10)] === dataSource[parseInt(i.toString(), 10)])))) {\n                        if (oldIndex !== i) {\n                            this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n                        }\n                        tbody.appendChild(tr);\n                        continue;\n                    }\n                    if ((hasBatch && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(batchChangeKeys[newIndexes[parseInt(i.toString(), 10)]]))\n                        || (!this.parent.enableDeepCompare\n                            && dataSource[parseInt(i.toString(), 10)] !== this.prevCurrentView[parseInt(oldIndex.toString(), 10)])\n                        || (this.parent.enableDeepCompare && !isEqual)) {\n                        oldRowObjs[parseInt(oldIndex.toString(), 10)].setRowValue(dataSource[parseInt(i.toString(), 10)]);\n                    }\n                    tbody.appendChild(tr);\n                    this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    var row = new _row_renderer__WEBPACK_IMPORTED_MODULE_4__.RowRenderer(this.serviceLocator, null, gObj);\n                    var args_1 = { startIndex: i };\n                    var modelData = this.generator.generateRows([dataSource[parseInt(i.toString(), 10)]], args_1);\n                    newRowObjs.push(modelData[0]);\n                    var tr = row.render(modelData[0], gObj.getColumns());\n                    tbody.appendChild(tr);\n                    this.refreshImmutableContent(i, tr, newRowObjs[parseInt(i.toString(), 10)]);\n                }\n            }\n            this.rows = newRowObjs;\n            this.rowElements = [].slice.call(tbody.children);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.getTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.tbody));\n            this.getTable().appendChild(tbody);\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.dataBound, {}, function () {\n                if (_this.parent.allowTextWrap) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.freezeRender, { case: 'textwrap' });\n                }\n            });\n            if (args) {\n                var action = (args.requestType || '').toLowerCase() + '-complete';\n                this.parent.notify(action, args);\n            }\n        }\n    };\n    ContentRender.prototype.objectEqualityChecker = function (old, next) {\n        var keys = Object.keys(old);\n        var isEqual = true;\n        for (var i = 0; i < keys.length; i++) {\n            if (old[keys[parseInt(i.toString(), 10)]] !== next[keys[parseInt(i.toString(), 10)]]) {\n                var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date\n                    && next[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                if (!isDate || (old[keys[parseInt(i.toString(), 10)]]\n                    .getTime() !== next[keys[parseInt(i.toString(), 10)]].getTime())) {\n                    isEqual = false;\n                    break;\n                }\n            }\n        }\n        return isEqual;\n    };\n    ContentRender.prototype.getBatchEditedRecords = function (primaryKey, rows) {\n        var keys = {};\n        var changes = this.parent.getBatchChanges();\n        var changedRecords = [];\n        var addedRecords = [];\n        if (Object.keys(changes).length) {\n            changedRecords = changes.changedRecords;\n            addedRecords = changes.addedRecords;\n        }\n        var args = { cancel: false };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.immutableBatchCancel, { rows: rows, args: args });\n        if (addedRecords.length) {\n            if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                rows.splice(rows.length - 1, addedRecords.length);\n            }\n            else {\n                if (!args.cancel) {\n                    rows.splice(0, addedRecords.length);\n                }\n            }\n        }\n        for (var i = 0; i < changedRecords.length; i++) {\n            keys[changedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]] = i;\n        }\n        return keys;\n    };\n    ContentRender.prototype.refreshImmutableContent = function (index, tr, row) {\n        row.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n        if (row.isAltRow) {\n            tr.classList.add('e-altrow');\n        }\n        else {\n            tr.classList.remove('e-altrow');\n        }\n        row.index = index;\n        row.edit = undefined;\n        row.isDirty = false;\n        tr.setAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.ariaRowIndex, (index + 1).toString());\n        this.updateCellIndex(tr, index);\n    };\n    ContentRender.prototype.updateCellIndex = function (rowEle, index) {\n        for (var i = 0; i < rowEle.cells.length; i++) {\n            rowEle.cells[parseInt(i.toString(), 10)].setAttribute('index', index.toString());\n        }\n    };\n    return ContentRender;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/detail-expand-cell-renderer.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/detail-expand-cell-renderer.js ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DetailExpandCellRenderer: () => (/* binding */ DetailExpandCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n/**\n * ExpandCellRenderer class which responsible for building group expand cell.\n *\n * @hidden\n */\nvar DetailExpandCellRenderer = /** @class */ (function (_super) {\n    __extends(DetailExpandCellRenderer, _super);\n    function DetailExpandCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TD', {\n            className: 'e-detailrowcollapse',\n            attrs: { 'aria-expanded': 'false', tabindex: '-1' }\n        });\n        return _this;\n    }\n    /**\n     * Function to render the detail expand cell\n     *\n     * @param {Cell<Column>} cell - specifies the cell\n     * @param {Object} data - specifies the data\n     * @param {Object} attributes - specifies the attributes\n     * @returns {Element} returns the element\n     */\n    DetailExpandCellRenderer.prototype.render = function (cell, data, attributes) {\n        var node = this.element.cloneNode();\n        if (attributes && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(attributes['class'])) {\n            node.className = '';\n            node.className = attributes['class'];\n            node.appendChild(this.parent.createElement('a', { className: 'e-icons e-dtdiagonaldown e-icon-gdownarrow', attrs: {\n                    href: '#', 'title': this.localizer.getConstant('Expanded')\n                } }));\n        }\n        else {\n            node.appendChild(this.parent.createElement('a', { className: 'e-icons e-dtdiagonalright e-icon-grightarrow', attrs: {\n                    href: '#', 'title': this.localizer.getConstant('Collapsed')\n                } }));\n        }\n        if (cell.isSelected) {\n            node.classList.add('e-selectionbackground', 'e-active');\n        }\n        return node;\n    };\n    return DetailExpandCellRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_1__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9kZXRhaWwtZXhwYW5kLWNlbGwtcmVuZGVyZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUN3RDtBQUNWO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGNBQWM7QUFDN0IsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsdUVBQWlCO0FBQzVDO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLDhEQUE4RDtBQUM5RDtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyx3REFBWTtBQUNzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3RyYXZlbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3luY2Z1c2lvbitlajItZ3JpZHNAMjkuMS40MC9ub2RlX21vZHVsZXMvQHN5bmNmdXNpb24vZWoyLWdyaWRzL3NyYy9ncmlkL3JlbmRlcmVyL2RldGFpbC1leHBhbmQtY2VsbC1yZW5kZXJlci5qcz9hODM1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuaW1wb3J0IHsgaXNOdWxsT3JVbmRlZmluZWQgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYmFzZSc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXIgfSBmcm9tICcuL2NlbGwtcmVuZGVyZXInO1xuLyoqXG4gKiBFeHBhbmRDZWxsUmVuZGVyZXIgY2xhc3Mgd2hpY2ggcmVzcG9uc2libGUgZm9yIGJ1aWxkaW5nIGdyb3VwIGV4cGFuZCBjZWxsLlxuICpcbiAqIEBoaWRkZW5cbiAqL1xudmFyIERldGFpbEV4cGFuZENlbGxSZW5kZXJlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRGV0YWlsRXhwYW5kQ2VsbFJlbmRlcmVyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIERldGFpbEV4cGFuZENlbGxSZW5kZXJlcigpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmVsZW1lbnQgPSBfdGhpcy5wYXJlbnQuY3JlYXRlRWxlbWVudCgnVEQnLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6ICdlLWRldGFpbHJvd2NvbGxhcHNlJyxcbiAgICAgICAgICAgIGF0dHJzOiB7ICdhcmlhLWV4cGFuZGVkJzogJ2ZhbHNlJywgdGFiaW5kZXg6ICctMScgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byByZW5kZXIgdGhlIGRldGFpbCBleHBhbmQgY2VsbFxuICAgICAqXG4gICAgICogQHBhcmFtIHtDZWxsPENvbHVtbj59IGNlbGwgLSBzcGVjaWZpZXMgdGhlIGNlbGxcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSAtIHNwZWNpZmllcyB0aGUgZGF0YVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBhdHRyaWJ1dGVzIC0gc3BlY2lmaWVzIHRoZSBhdHRyaWJ1dGVzXG4gICAgICogQHJldHVybnMge0VsZW1lbnR9IHJldHVybnMgdGhlIGVsZW1lbnRcbiAgICAgKi9cbiAgICBEZXRhaWxFeHBhbmRDZWxsUmVuZGVyZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIChjZWxsLCBkYXRhLCBhdHRyaWJ1dGVzKSB7XG4gICAgICAgIHZhciBub2RlID0gdGhpcy5lbGVtZW50LmNsb25lTm9kZSgpO1xuICAgICAgICBpZiAoYXR0cmlidXRlcyAmJiAhaXNOdWxsT3JVbmRlZmluZWQoYXR0cmlidXRlc1snY2xhc3MnXSkpIHtcbiAgICAgICAgICAgIG5vZGUuY2xhc3NOYW1lID0gJyc7XG4gICAgICAgICAgICBub2RlLmNsYXNzTmFtZSA9IGF0dHJpYnV0ZXNbJ2NsYXNzJ107XG4gICAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKHRoaXMucGFyZW50LmNyZWF0ZUVsZW1lbnQoJ2EnLCB7IGNsYXNzTmFtZTogJ2UtaWNvbnMgZS1kdGRpYWdvbmFsZG93biBlLWljb24tZ2Rvd25hcnJvdycsIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgIGhyZWY6ICcjJywgJ3RpdGxlJzogdGhpcy5sb2NhbGl6ZXIuZ2V0Q29uc3RhbnQoJ0V4cGFuZGVkJylcbiAgICAgICAgICAgICAgICB9IH0pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQodGhpcy5wYXJlbnQuY3JlYXRlRWxlbWVudCgnYScsIHsgY2xhc3NOYW1lOiAnZS1pY29ucyBlLWR0ZGlhZ29uYWxyaWdodCBlLWljb24tZ3JpZ2h0YXJyb3cnLCBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICBocmVmOiAnIycsICd0aXRsZSc6IHRoaXMubG9jYWxpemVyLmdldENvbnN0YW50KCdDb2xsYXBzZWQnKVxuICAgICAgICAgICAgICAgIH0gfSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjZWxsLmlzU2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIG5vZGUuY2xhc3NMaXN0LmFkZCgnZS1zZWxlY3Rpb25iYWNrZ3JvdW5kJywgJ2UtYWN0aXZlJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcbiAgICByZXR1cm4gRGV0YWlsRXhwYW5kQ2VsbFJlbmRlcmVyO1xufShDZWxsUmVuZGVyZXIpKTtcbmV4cG9ydCB7IERldGFpbEV4cGFuZENlbGxSZW5kZXJlciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/detail-expand-cell-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/detail-header-indent-renderer.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/detail-header-indent-renderer.js ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DetailHeaderIndentCellRenderer: () => (/* binding */ DetailHeaderIndentCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * DetailHeaderIndentCellRenderer class which responsible for building detail header indent cell.\n *\n * @hidden\n */\nvar DetailHeaderIndentCellRenderer = /** @class */ (function (_super) {\n    __extends(DetailHeaderIndentCellRenderer, _super);\n    function DetailHeaderIndentCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TH', { className: 'e-detailheadercell' });\n        return _this;\n    }\n    /**\n     * Function to render the detail indent cell\n     *\n     * @param  {Cell} cell - specifies the cell\n     * @param  {Object} data - specifies the data\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    DetailHeaderIndentCellRenderer.prototype.render = function (cell, data) {\n        var node = this.element.cloneNode();\n        node.appendChild(this.parent.createElement('div', { className: 'e-emptycell' }));\n        return node;\n    };\n    return DetailHeaderIndentCellRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_0__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9kZXRhaWwtaGVhZGVyLWluZGVudC1yZW5kZXJlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3QjtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDOEM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGlDQUFpQztBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE1BQU07QUFDdEIsZ0JBQWdCLFFBQVE7QUFDeEIsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsMEJBQTBCO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyx3REFBWTtBQUM0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3RyYXZlbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3luY2Z1c2lvbitlajItZ3JpZHNAMjkuMS40MC9ub2RlX21vZHVsZXMvQHN5bmNmdXNpb24vZWoyLWdyaWRzL3NyYy9ncmlkL3JlbmRlcmVyL2RldGFpbC1oZWFkZXItaW5kZW50LXJlbmRlcmVyLmpzPzgxZmMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXIgfSBmcm9tICcuL2NlbGwtcmVuZGVyZXInO1xuLyoqXG4gKiBEZXRhaWxIZWFkZXJJbmRlbnRDZWxsUmVuZGVyZXIgY2xhc3Mgd2hpY2ggcmVzcG9uc2libGUgZm9yIGJ1aWxkaW5nIGRldGFpbCBoZWFkZXIgaW5kZW50IGNlbGwuXG4gKlxuICogQGhpZGRlblxuICovXG52YXIgRGV0YWlsSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEZXRhaWxIZWFkZXJJbmRlbnRDZWxsUmVuZGVyZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRGV0YWlsSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZWxlbWVudCA9IF90aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdUSCcsIHsgY2xhc3NOYW1lOiAnZS1kZXRhaWxoZWFkZXJjZWxsJyB9KTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byByZW5kZXIgdGhlIGRldGFpbCBpbmRlbnQgY2VsbFxuICAgICAqXG4gICAgICogQHBhcmFtICB7Q2VsbH0gY2VsbCAtIHNwZWNpZmllcyB0aGUgY2VsbFxuICAgICAqIEBwYXJhbSAge09iamVjdH0gZGF0YSAtIHNwZWNpZmllcyB0aGUgZGF0YVxuICAgICAqIEByZXR1cm5zIHtFbGVtZW50fSByZXR1cm5zIHRoZSBlbGVtZW50XG4gICAgICovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgIERldGFpbEhlYWRlckluZGVudENlbGxSZW5kZXJlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKGNlbGwsIGRhdGEpIHtcbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLmVsZW1lbnQuY2xvbmVOb2RlKCk7XG4gICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQodGhpcy5wYXJlbnQuY3JlYXRlRWxlbWVudCgnZGl2JywgeyBjbGFzc05hbWU6ICdlLWVtcHR5Y2VsbCcgfSkpO1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICAgIHJldHVybiBEZXRhaWxIZWFkZXJJbmRlbnRDZWxsUmVuZGVyZXI7XG59KENlbGxSZW5kZXJlcikpO1xuZXhwb3J0IHsgRGV0YWlsSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/detail-header-indent-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/expand-cell-renderer.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/expand-cell-renderer.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExpandCellRenderer: () => (/* binding */ ExpandCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _indent_cell_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./indent-cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/indent-cell-renderer.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n/**\n * ExpandCellRenderer class which responsible for building group expand cell.\n *\n * @hidden\n */\nvar ExpandCellRenderer = /** @class */ (function (_super) {\n    __extends(ExpandCellRenderer, _super);\n    function ExpandCellRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Function to render the expand cell\n     *\n     * @param {Cell} cell - specifies the cell\n     * @param {Object} data - specifies the data\n     * @param {string} data.field - Defines the field\n     * @param {string} data.key - Defines the key\n     * @param {Object} attr - specifies the attribute\n     * @param {boolean} isExpand - specifies isexpand\n     * @returns {Element} returns the element\n     */\n    ExpandCellRenderer.prototype.render = function (cell, data, attr, isExpand) {\n        var node = this.element.cloneNode();\n        node.setAttribute('ej-mappingname', data.field);\n        node.setAttribute('ej-mappingvalue', data.key);\n        node.setAttribute('aria-expanded', isExpand ? 'true' : 'false');\n        node.setAttribute('tabindex', '-1');\n        if (this.parent.infiniteScrollSettings && this.parent.infiniteScrollSettings.enableCache &&\n            !this.parent.groupSettings.enableLazyLoading) {\n            cell.cellType = _base_enum__WEBPACK_IMPORTED_MODULE_0__.CellType.Indent;\n            node.className = isExpand ? 'e-recordplusexpand e-disablepointer' : 'e-recordpluscollapse e-disablepointer';\n        }\n        else {\n            node.className = isExpand ? 'e-recordplusexpand' : 'e-recordpluscollapse';\n            node.appendChild(this.parent.createElement('a', {\n                className: isExpand ? 'e-icons e-gdiagonaldown e-icon-gdownarrow' : 'e-icons e-gnextforward e-icon-grightarrow',\n                attrs: { href: '#', 'title': isExpand ? this.localizer.getConstant('Expanded') : this.localizer.getConstant('Collapsed') }\n            }));\n        }\n        return node;\n    };\n    return ExpandCellRenderer;\n}(_indent_cell_renderer__WEBPACK_IMPORTED_MODULE_1__.IndentCellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9leHBhbmQtY2VsbC1yZW5kZXJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0I7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQzJEO0FBQ3BCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxNQUFNO0FBQ3JCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixlQUFlLFNBQVM7QUFDeEIsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGdEQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMscUVBQWtCO0FBQ1UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haV90cmF2ZWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9leHBhbmQtY2VsbC1yZW5kZXJlci5qcz84MWZiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuaW1wb3J0IHsgSW5kZW50Q2VsbFJlbmRlcmVyIH0gZnJvbSAnLi9pbmRlbnQtY2VsbC1yZW5kZXJlcic7XG5pbXBvcnQgeyBDZWxsVHlwZSB9IGZyb20gJy4uL2Jhc2UvZW51bSc7XG4vKipcbiAqIEV4cGFuZENlbGxSZW5kZXJlciBjbGFzcyB3aGljaCByZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcgZ3JvdXAgZXhwYW5kIGNlbGwuXG4gKlxuICogQGhpZGRlblxuICovXG52YXIgRXhwYW5kQ2VsbFJlbmRlcmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhFeHBhbmRDZWxsUmVuZGVyZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRXhwYW5kQ2VsbFJlbmRlcmVyKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJlbmRlciB0aGUgZXhwYW5kIGNlbGxcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Q2VsbH0gY2VsbCAtIHNwZWNpZmllcyB0aGUgY2VsbFxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIC0gc3BlY2lmaWVzIHRoZSBkYXRhXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGRhdGEuZmllbGQgLSBEZWZpbmVzIHRoZSBmaWVsZFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhLmtleSAtIERlZmluZXMgdGhlIGtleVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBhdHRyIC0gc3BlY2lmaWVzIHRoZSBhdHRyaWJ1dGVcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlzRXhwYW5kIC0gc3BlY2lmaWVzIGlzZXhwYW5kXG4gICAgICogQHJldHVybnMge0VsZW1lbnR9IHJldHVybnMgdGhlIGVsZW1lbnRcbiAgICAgKi9cbiAgICBFeHBhbmRDZWxsUmVuZGVyZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIChjZWxsLCBkYXRhLCBhdHRyLCBpc0V4cGFuZCkge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMuZWxlbWVudC5jbG9uZU5vZGUoKTtcbiAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ2VqLW1hcHBpbmduYW1lJywgZGF0YS5maWVsZCk7XG4gICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdlai1tYXBwaW5ndmFsdWUnLCBkYXRhLmtleSk7XG4gICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgaXNFeHBhbmQgPyAndHJ1ZScgOiAnZmFsc2UnKTtcbiAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudC5pbmZpbml0ZVNjcm9sbFNldHRpbmdzICYmIHRoaXMucGFyZW50LmluZmluaXRlU2Nyb2xsU2V0dGluZ3MuZW5hYmxlQ2FjaGUgJiZcbiAgICAgICAgICAgICF0aGlzLnBhcmVudC5ncm91cFNldHRpbmdzLmVuYWJsZUxhenlMb2FkaW5nKSB7XG4gICAgICAgICAgICBjZWxsLmNlbGxUeXBlID0gQ2VsbFR5cGUuSW5kZW50O1xuICAgICAgICAgICAgbm9kZS5jbGFzc05hbWUgPSBpc0V4cGFuZCA/ICdlLXJlY29yZHBsdXNleHBhbmQgZS1kaXNhYmxlcG9pbnRlcicgOiAnZS1yZWNvcmRwbHVzY29sbGFwc2UgZS1kaXNhYmxlcG9pbnRlcic7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBub2RlLmNsYXNzTmFtZSA9IGlzRXhwYW5kID8gJ2UtcmVjb3JkcGx1c2V4cGFuZCcgOiAnZS1yZWNvcmRwbHVzY29sbGFwc2UnO1xuICAgICAgICAgICAgbm9kZS5hcHBlbmRDaGlsZCh0aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdhJywge1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogaXNFeHBhbmQgPyAnZS1pY29ucyBlLWdkaWFnb25hbGRvd24gZS1pY29uLWdkb3duYXJyb3cnIDogJ2UtaWNvbnMgZS1nbmV4dGZvcndhcmQgZS1pY29uLWdyaWdodGFycm93JyxcbiAgICAgICAgICAgICAgICBhdHRyczogeyBocmVmOiAnIycsICd0aXRsZSc6IGlzRXhwYW5kID8gdGhpcy5sb2NhbGl6ZXIuZ2V0Q29uc3RhbnQoJ0V4cGFuZGVkJykgOiB0aGlzLmxvY2FsaXplci5nZXRDb25zdGFudCgnQ29sbGFwc2VkJykgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub2RlO1xuICAgIH07XG4gICAgcmV0dXJuIEV4cGFuZENlbGxSZW5kZXJlcjtcbn0oSW5kZW50Q2VsbFJlbmRlcmVyKSk7XG5leHBvcnQgeyBFeHBhbmRDZWxsUmVuZGVyZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/expand-cell-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-cell-renderer.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-cell-renderer.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeaderCellRenderer: () => (/* binding */ HeaderCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\n/* harmony import */ var _services_aria_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/aria-service */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/aria-service.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-buttons@29.1.34/node_modules/@syncfusion/ej2-buttons/src/common/common.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n/**\n * HeaderCellRenderer class which responsible for building header cell content.\n *\n * @hidden\n */\nvar HeaderCellRenderer = /** @class */ (function (_super) {\n    __extends(HeaderCellRenderer, _super);\n    function HeaderCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent\n            .createElement('TH', { className: 'e-headercell', attrs: { tabindex: '-1', role: 'columnheader' } });\n        _this.ariaService = new _services_aria_service__WEBPACK_IMPORTED_MODULE_1__.AriaService();\n        _this.hTxtEle = _this.parent.createElement('span', { className: 'e-headertext' });\n        _this.sortEle = _this.parent.createElement('div', { className: 'e-sortfilterdiv e-icons', attrs: { 'aria-hidden': 'true' } });\n        _this.gui = _this.parent.createElement('div');\n        _this.chkAllBox = _this.parent.createElement('input', { className: 'e-checkselectall', attrs: { 'type': 'checkbox', 'aria-label': _this.localizer.getConstant('SelectAllCheckbox') } });\n        return _this;\n    }\n    /**\n     * Function to return the wrapper for the TH content.\n     *\n     * @returns {string | Element} returns the element\n     */\n    HeaderCellRenderer.prototype.getGui = function () {\n        return this.gui.cloneNode();\n    };\n    /**\n     * Function to render the cell content based on Column object.\n     *\n     * @param {Cell} cell - specifies the column\n     * @param {Object} data - specifies the data\n     * @param {object} attributes - specifies the aattributes\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    HeaderCellRenderer.prototype.render = function (cell, data, attributes) {\n        var node = this.element.cloneNode();\n        var fltrMenuEle = this.parent.createElement('div', { className: 'e-filtermenudiv e-icons e-icon-filter', attrs: { 'aria-hidden': 'true' } });\n        return this.prepareHeader(cell, node, fltrMenuEle);\n    };\n    /**\n     * Function to refresh the cell content based on Column object.\n     *\n     * @param  {Cell} cell - specifies the cell\n     * @param  {Element} node - specifies the noe\n     * @returns {Element} returns the element\n     */\n    HeaderCellRenderer.prototype.refresh = function (cell, node) {\n        this.clean(node);\n        var fltrMenuEle = this.parent.createElement('div', { className: 'e-filtermenudiv e-icons e-icon-filter', attrs: { 'aria-hidden': 'true' } });\n        return this.prepareHeader(cell, node, fltrMenuEle);\n    };\n    HeaderCellRenderer.prototype.clean = function (node) {\n        node.innerHTML = '';\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    HeaderCellRenderer.prototype.prepareHeader = function (cell, node, fltrMenuEle) {\n        var column = cell.column;\n        var ariaAttr = {};\n        var elementDesc = '';\n        //Prepare innerHtml\n        var innerDIV = this.getGui();\n        var hValueAccer;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(innerDIV, {\n            'e-mappinguid': column.uid,\n            'class': 'e-headercelldiv'\n        });\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.headerValueAccessor)) {\n            hValueAccer = this.getValue(column.headerText, column);\n        }\n        if (this.parent.rowHeight && this.parent.allowSorting && column.allowSorting && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.field)) {\n            node.classList.add('e-sort-icon');\n        }\n        if (column.type !== 'checkbox') {\n            var value = column.headerText;\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(hValueAccer)) {\n                value = hValueAccer;\n            }\n            var headerText = this.hTxtEle.cloneNode();\n            headerText[column.getDomSetter()] = this.parent.sanitize(value);\n            innerDIV.appendChild(headerText);\n        }\n        else {\n            column.editType = 'booleanedit';\n            var checkAllWrap = (0,_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__.createCheckBox)(this.parent.createElement, false, { checked: false, label: ' ' });\n            this.chkAllBox.id = 'checkbox-' + column.uid;\n            checkAllWrap.insertBefore(this.chkAllBox.cloneNode(), checkAllWrap.firstChild);\n            if (this.parent.cssClass) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([checkAllWrap], [this.parent.cssClass]);\n            }\n            innerDIV.appendChild(checkAllWrap);\n            innerDIV.classList.add('e-headerchkcelldiv');\n        }\n        this.buildAttributeFromCell(node, cell);\n        this.appendHtml(node, innerDIV);\n        node.appendChild(this.sortEle.cloneNode());\n        if ((this.parent.allowFiltering && this.parent.filterSettings.type !== 'FilterBar') &&\n            (column.allowFiltering && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.field)) &&\n            !(this.parent.showColumnMenu && column.showColumnMenu)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(fltrMenuEle, {\n                'e-mappinguid': 'e-flmenu-' + column.uid\n            });\n            elementDesc = elementDesc.length ? elementDesc + '. ' + this.localizer.getConstant('FilterDescription') : this.localizer.getConstant('FilterDescription');\n            node.classList.add('e-fltr-icon');\n            var matchFlColumns = [];\n            if (this.parent.filterSettings.columns.length && this.parent.filterSettings.columns.length !== matchFlColumns.length) {\n                var foreignColumn = this.parent.getForeignKeyColumns();\n                for (var index = 0; index < this.parent.columns.length; index++) {\n                    for (var count = 0; count < this.parent.filterSettings.columns.length; count++) {\n                        if (this.parent.filterSettings.columns[parseInt(count.toString(), 10)].field === column.field\n                            || (foreignColumn.length\n                                && column.foreignKeyValue === this.parent.filterSettings.columns[parseInt(count.toString(), 10)].field)) {\n                            fltrMenuEle.classList.add('e-filtered');\n                            matchFlColumns.push(column.field);\n                            break;\n                        }\n                    }\n                }\n            }\n            node.appendChild(fltrMenuEle.cloneNode());\n        }\n        if (cell.className) {\n            node.classList.add(cell.className);\n        }\n        if (column.customAttributes) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.setStyleAndAttributes)(node, column.customAttributes);\n        }\n        if (this.parent.allowSorting && column.allowSorting) {\n            ariaAttr.sort = 'none';\n            elementDesc = elementDesc.length ? elementDesc + '. ' + this.localizer.getConstant('SortDescription') : this.localizer.getConstant('SortDescription');\n        }\n        if ((this.parent.allowGrouping && column.allowGrouping) || this.parent.allowReordering && column.allowReordering) {\n            ariaAttr.grabbed = false;\n            elementDesc = elementDesc.length ? elementDesc + '. ' + this.localizer.getConstant('GroupDescription') : this.localizer.getConstant('GroupDescription');\n        }\n        if (this.parent.showColumnMenu && column.type !== 'checkbox' && !column.template) {\n            elementDesc = elementDesc.length ? elementDesc + '. ' + this.localizer.getConstant('ColumnMenuDescription') : this.localizer.getConstant('ColumnMenuDescription');\n        }\n        node = this.extendPrepareHeader(column, node);\n        var result;\n        var gridObj = this.parent;\n        var colIndex = gridObj.getColumnIndexByField(column.field);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.headerTemplate)) {\n            //need to pass the template id for blazor headertemplate\n            var headerTempID = gridObj.element.id + column.uid + 'headerTemplate';\n            var str = 'isStringTemplate';\n            var col = column;\n            var isReactCompiler = this.parent.isReact && typeof (column.headerTemplate) !== 'string' && !(column.headerTemplate.prototype && column.headerTemplate.prototype.CSPTemplate);\n            var isReactChild_1 = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n                this.parent.parentDetails.parentInstObj.isReact;\n            var isReactPrintGrid = this.parent.printGridParent && this.parent.printGridParent.isReact;\n            if (isReactCompiler || isReactChild_1 || isReactPrintGrid) {\n                var copied = { 'index': colIndex };\n                node.firstElementChild.innerHTML = '';\n                column.getHeaderTemplate()((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(copied, col), gridObj, 'headerTemplate', headerTempID, this.parent[\"\" + str], null, node.firstElementChild);\n                this.parent.renderTemplates();\n            }\n            else {\n                result = column.getHeaderTemplate()((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({ 'index': colIndex }, col), gridObj, 'headerTemplate', headerTempID, this.parent[\"\" + str], undefined, undefined, this.parent['root']);\n                node.firstElementChild.innerHTML = '';\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.appendChildren)(node.firstElementChild, result);\n            }\n        }\n        this.ariaService.setOptions(node, ariaAttr);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.headerTextAlign) || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.textAlign)) {\n            var alignment = column.headerTextAlign || column.textAlign;\n            if (alignment.toLowerCase() === 'right' || alignment.toLowerCase() === 'left') {\n                node.classList.add(alignment.toLowerCase() === 'right' ? 'e-rightalign' : 'e-leftalign');\n            }\n            else if (alignment.toLowerCase() === 'center') {\n                node.classList.add('e-centeralign');\n            }\n            else if (alignment.toLowerCase() === 'justify') {\n                node.classList.add('e-justifyalign');\n            }\n        }\n        if (column.clipMode === 'Clip' || (!column.clipMode && this.parent.clipMode === 'Clip')) {\n            node.classList.add('e-gridclip');\n        }\n        else if ((column.clipMode === 'EllipsisWithTooltip' || (!column.clipMode && this.parent.clipMode === 'EllipsisWithTooltip'))\n            && !(gridObj.allowTextWrap && (gridObj.textWrapSettings.wrapMode === 'Header'\n                || gridObj.textWrapSettings.wrapMode === 'Both'))) {\n            if (column.type !== 'checkbox') {\n                node.classList.add('e-ellipsistooltip');\n            }\n        }\n        if (elementDesc) {\n            var titleElem = (this.parent.createElement('span', { id: 'headerTitle-' + column.uid, innerHTML: elementDesc }));\n            titleElem.style.display = 'none';\n            node.appendChild(titleElem);\n            node.setAttribute('aria-describedby', titleElem.id);\n        }\n        node.setAttribute('aria-rowspan', (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.rowSpan) ? cell.rowSpan : 1).toString());\n        node.setAttribute('aria-colspan', '1');\n        var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n            this.parent.parentDetails.parentInstObj.isReact;\n        if (((this.parent.isReact && this.parent.requireTemplateRef)\n            || (isReactChild && this.parent.parentDetails.parentInstObj.requireTemplateRef))\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.headerTemplate)) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var thisRef_1 = this;\n            thisRef_1.parent.renderTemplates(function () {\n                thisRef_1.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.headerCellInfo, { cell: cell, node: node });\n            });\n        }\n        else {\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_4__.headerCellInfo, { cell: cell, node: node });\n        }\n        if (this.parent.isFrozenGrid()) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.addStickyColumnPosition)(this.parent, column, node);\n        }\n        return node;\n    };\n    HeaderCellRenderer.prototype.getValue = function (field, column) {\n        return column.headerValueAccessor(field, column);\n    };\n    HeaderCellRenderer.prototype.extendPrepareHeader = function (column, node) {\n        if (this.parent.showColumnMenu && column.showColumnMenu && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.field)) {\n            var element = (this.parent.createElement('div', { className: 'e-icons e-columnmenu', attrs: { 'aria-hidden': 'true' } }));\n            var matchFilteredColumns = [];\n            if (this.parent.filterSettings.columns.length && this.parent.filterSettings.columns.length !== matchFilteredColumns.length) {\n                for (var i = 0; i < this.parent.columns.length; i++) {\n                    for (var j = 0; j < this.parent.filterSettings.columns.length; j++) {\n                        if (this.parent.filterSettings.columns[parseInt(j.toString(), 10)].field === column.field) {\n                            element.classList.add('e-filtered');\n                            matchFilteredColumns.push(column.field);\n                            break;\n                        }\n                    }\n                }\n            }\n            node.classList.add('e-fltr-icon');\n            node.appendChild(element);\n        }\n        if (this.parent.allowResizing) {\n            var handler = this.parent.createElement('div');\n            handler.className = column.allowResizing ? 'e-rhandler e-rcursor' : 'e-rsuppress';\n            node.appendChild(handler);\n        }\n        return node;\n    };\n    /**\n     * Function to specifies how the result content to be placed in the cell.\n     *\n     * @param  {Element} node - specifies the node\n     * @param  {string|Element} innerHtml - specifies the innerHtml\n     * @returns {Element} returns the element\n     */\n    HeaderCellRenderer.prototype.appendHtml = function (node, innerHtml) {\n        node.appendChild(innerHtml);\n        return node;\n    };\n    return HeaderCellRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_5__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9oZWFkZXItY2VsbC1yZW5kZXJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUMwRTtBQUN6QjtBQUM0QztBQUMvQztBQUNRO0FBQ0U7QUFDUDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0Msd0NBQXdDO0FBQy9HLGdDQUFnQywrREFBVztBQUMzQyw2REFBNkQsMkJBQTJCO0FBQ3hGLDREQUE0RCwrQ0FBK0MseUJBQXlCO0FBQ3BJO0FBQ0EsZ0VBQWdFLHdDQUF3QyxzRkFBc0Y7QUFDOUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLE1BQU07QUFDckIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCw2REFBNkQseUJBQXlCO0FBQ25KO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsTUFBTTtBQUN0QixnQkFBZ0IsU0FBUztBQUN6QixpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsNkRBQTZELHlCQUF5QjtBQUNuSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0VBQVU7QUFDbEI7QUFDQTtBQUNBLFNBQVM7QUFDVCxhQUFhLHVFQUFpQjtBQUM5QjtBQUNBO0FBQ0EseUZBQXlGLHVFQUFpQjtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1RUFBaUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix1RUFBYyxxQ0FBcUMsNEJBQTRCO0FBQzlHO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw4REFBUTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVFQUFpQjtBQUN4RDtBQUNBLFlBQVksZ0VBQVU7QUFDdEI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxvQ0FBb0M7QUFDeEUsd0NBQXdDLG1EQUFtRDtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaUVBQXFCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1RUFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsMkNBQTJDLDREQUFNO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCw0REFBTSxHQUFHLG1CQUFtQjtBQUNoRjtBQUNBLGdCQUFnQiwwREFBYztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxhQUFhLHVFQUFpQiw2QkFBNkIsdUVBQWlCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLHlEQUF5RDtBQUMxSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyx1RUFBaUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1RUFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDBEQUFjLElBQUksd0JBQXdCO0FBQ25GLGFBQWE7QUFDYjtBQUNBO0FBQ0EsZ0NBQWdDLDBEQUFjLElBQUksd0JBQXdCO0FBQzFFO0FBQ0E7QUFDQSxZQUFZLG1FQUF1QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSx1RUFBaUI7QUFDckYsOERBQThELDRDQUE0Qyx5QkFBeUI7QUFDbkk7QUFDQTtBQUNBLGdDQUFnQyxnQ0FBZ0M7QUFDaEUsb0NBQW9DLCtDQUErQztBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QixnQkFBZ0IsZ0JBQWdCO0FBQ2hDLGlCQUFpQixTQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsQ0FBQyx3REFBWTtBQUNnQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3RyYXZlbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3luY2Z1c2lvbitlajItZ3JpZHNAMjkuMS40MC9ub2RlX21vZHVsZXMvQHN5bmNmdXNpb24vZWoyLWdyaWRzL3NyYy9ncmlkL3JlbmRlcmVyL2hlYWRlci1jZWxsLXJlbmRlcmVyLmpzP2Y3ZTQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5pbXBvcnQgeyBpc051bGxPclVuZGVmaW5lZCwgZXh0ZW5kLCBhZGRDbGFzcyB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1iYXNlJztcbmltcG9ydCB7IGF0dHJpYnV0ZXMgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYmFzZSc7XG5pbXBvcnQgeyBzZXRTdHlsZUFuZEF0dHJpYnV0ZXMsIGFwcGVuZENoaWxkcmVuLCBhZGRTdGlja3lDb2x1bW5Qb3NpdGlvbiB9IGZyb20gJy4uL2Jhc2UvdXRpbCc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXIgfSBmcm9tICcuL2NlbGwtcmVuZGVyZXInO1xuaW1wb3J0IHsgQXJpYVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hcmlhLXNlcnZpY2UnO1xuaW1wb3J0IHsgY3JlYXRlQ2hlY2tCb3ggfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYnV0dG9ucyc7XG5pbXBvcnQgeyBoZWFkZXJDZWxsSW5mbyB9IGZyb20gJy4uL2Jhc2UvY29uc3RhbnQnO1xuLyoqXG4gKiBIZWFkZXJDZWxsUmVuZGVyZXIgY2xhc3Mgd2hpY2ggcmVzcG9uc2libGUgZm9yIGJ1aWxkaW5nIGhlYWRlciBjZWxsIGNvbnRlbnQuXG4gKlxuICogQGhpZGRlblxuICovXG52YXIgSGVhZGVyQ2VsbFJlbmRlcmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhIZWFkZXJDZWxsUmVuZGVyZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSGVhZGVyQ2VsbFJlbmRlcmVyKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZWxlbWVudCA9IF90aGlzLnBhcmVudFxuICAgICAgICAgICAgLmNyZWF0ZUVsZW1lbnQoJ1RIJywgeyBjbGFzc05hbWU6ICdlLWhlYWRlcmNlbGwnLCBhdHRyczogeyB0YWJpbmRleDogJy0xJywgcm9sZTogJ2NvbHVtbmhlYWRlcicgfSB9KTtcbiAgICAgICAgX3RoaXMuYXJpYVNlcnZpY2UgPSBuZXcgQXJpYVNlcnZpY2UoKTtcbiAgICAgICAgX3RoaXMuaFR4dEVsZSA9IF90aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdzcGFuJywgeyBjbGFzc05hbWU6ICdlLWhlYWRlcnRleHQnIH0pO1xuICAgICAgICBfdGhpcy5zb3J0RWxlID0gX3RoaXMucGFyZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicsIHsgY2xhc3NOYW1lOiAnZS1zb3J0ZmlsdGVyZGl2IGUtaWNvbnMnLCBhdHRyczogeyAnYXJpYS1oaWRkZW4nOiAndHJ1ZScgfSB9KTtcbiAgICAgICAgX3RoaXMuZ3VpID0gX3RoaXMucGFyZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBfdGhpcy5jaGtBbGxCb3ggPSBfdGhpcy5wYXJlbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnLCB7IGNsYXNzTmFtZTogJ2UtY2hlY2tzZWxlY3RhbGwnLCBhdHRyczogeyAndHlwZSc6ICdjaGVja2JveCcsICdhcmlhLWxhYmVsJzogX3RoaXMubG9jYWxpemVyLmdldENvbnN0YW50KCdTZWxlY3RBbGxDaGVja2JveCcpIH0gfSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcmV0dXJuIHRoZSB3cmFwcGVyIGZvciB0aGUgVEggY29udGVudC5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmcgfCBFbGVtZW50fSByZXR1cm5zIHRoZSBlbGVtZW50XG4gICAgICovXG4gICAgSGVhZGVyQ2VsbFJlbmRlcmVyLnByb3RvdHlwZS5nZXRHdWkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmd1aS5jbG9uZU5vZGUoKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJlbmRlciB0aGUgY2VsbCBjb250ZW50IGJhc2VkIG9uIENvbHVtbiBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0NlbGx9IGNlbGwgLSBzcGVjaWZpZXMgdGhlIGNvbHVtblxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIC0gc3BlY2lmaWVzIHRoZSBkYXRhXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGF0dHJpYnV0ZXMgLSBzcGVjaWZpZXMgdGhlIGFhdHRyaWJ1dGVzXG4gICAgICogQHJldHVybnMge0VsZW1lbnR9IHJldHVybnMgdGhlIGVsZW1lbnRcbiAgICAgKi9cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgSGVhZGVyQ2VsbFJlbmRlcmVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoY2VsbCwgZGF0YSwgYXR0cmlidXRlcykge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMuZWxlbWVudC5jbG9uZU5vZGUoKTtcbiAgICAgICAgdmFyIGZsdHJNZW51RWxlID0gdGhpcy5wYXJlbnQuY3JlYXRlRWxlbWVudCgnZGl2JywgeyBjbGFzc05hbWU6ICdlLWZpbHRlcm1lbnVkaXYgZS1pY29ucyBlLWljb24tZmlsdGVyJywgYXR0cnM6IHsgJ2FyaWEtaGlkZGVuJzogJ3RydWUnIH0gfSk7XG4gICAgICAgIHJldHVybiB0aGlzLnByZXBhcmVIZWFkZXIoY2VsbCwgbm9kZSwgZmx0ck1lbnVFbGUpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcmVmcmVzaCB0aGUgY2VsbCBjb250ZW50IGJhc2VkIG9uIENvbHVtbiBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gIHtDZWxsfSBjZWxsIC0gc3BlY2lmaWVzIHRoZSBjZWxsXG4gICAgICogQHBhcmFtICB7RWxlbWVudH0gbm9kZSAtIHNwZWNpZmllcyB0aGUgbm9lXG4gICAgICogQHJldHVybnMge0VsZW1lbnR9IHJldHVybnMgdGhlIGVsZW1lbnRcbiAgICAgKi9cbiAgICBIZWFkZXJDZWxsUmVuZGVyZXIucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbiAoY2VsbCwgbm9kZSkge1xuICAgICAgICB0aGlzLmNsZWFuKG5vZGUpO1xuICAgICAgICB2YXIgZmx0ck1lbnVFbGUgPSB0aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdkaXYnLCB7IGNsYXNzTmFtZTogJ2UtZmlsdGVybWVudWRpdiBlLWljb25zIGUtaWNvbi1maWx0ZXInLCBhdHRyczogeyAnYXJpYS1oaWRkZW4nOiAndHJ1ZScgfSB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJlcGFyZUhlYWRlcihjZWxsLCBub2RlLCBmbHRyTWVudUVsZSk7XG4gICAgfTtcbiAgICBIZWFkZXJDZWxsUmVuZGVyZXIucHJvdG90eXBlLmNsZWFuID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgbm9kZS5pbm5lckhUTUwgPSAnJztcbiAgICB9O1xuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptYXgtZnVuYy1ib2R5LWxlbmd0aCAqL1xuICAgIEhlYWRlckNlbGxSZW5kZXJlci5wcm90b3R5cGUucHJlcGFyZUhlYWRlciA9IGZ1bmN0aW9uIChjZWxsLCBub2RlLCBmbHRyTWVudUVsZSkge1xuICAgICAgICB2YXIgY29sdW1uID0gY2VsbC5jb2x1bW47XG4gICAgICAgIHZhciBhcmlhQXR0ciA9IHt9O1xuICAgICAgICB2YXIgZWxlbWVudERlc2MgPSAnJztcbiAgICAgICAgLy9QcmVwYXJlIGlubmVySHRtbFxuICAgICAgICB2YXIgaW5uZXJESVYgPSB0aGlzLmdldEd1aSgpO1xuICAgICAgICB2YXIgaFZhbHVlQWNjZXI7XG4gICAgICAgIGF0dHJpYnV0ZXMoaW5uZXJESVYsIHtcbiAgICAgICAgICAgICdlLW1hcHBpbmd1aWQnOiBjb2x1bW4udWlkLFxuICAgICAgICAgICAgJ2NsYXNzJzogJ2UtaGVhZGVyY2VsbGRpdidcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQoY29sdW1uLmhlYWRlclZhbHVlQWNjZXNzb3IpKSB7XG4gICAgICAgICAgICBoVmFsdWVBY2NlciA9IHRoaXMuZ2V0VmFsdWUoY29sdW1uLmhlYWRlclRleHQsIGNvbHVtbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucGFyZW50LnJvd0hlaWdodCAmJiB0aGlzLnBhcmVudC5hbGxvd1NvcnRpbmcgJiYgY29sdW1uLmFsbG93U29ydGluZyAmJiAhaXNOdWxsT3JVbmRlZmluZWQoY29sdW1uLmZpZWxkKSkge1xuICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCdlLXNvcnQtaWNvbicpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb2x1bW4udHlwZSAhPT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gY29sdW1uLmhlYWRlclRleHQ7XG4gICAgICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKGhWYWx1ZUFjY2VyKSkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gaFZhbHVlQWNjZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaGVhZGVyVGV4dCA9IHRoaXMuaFR4dEVsZS5jbG9uZU5vZGUoKTtcbiAgICAgICAgICAgIGhlYWRlclRleHRbY29sdW1uLmdldERvbVNldHRlcigpXSA9IHRoaXMucGFyZW50LnNhbml0aXplKHZhbHVlKTtcbiAgICAgICAgICAgIGlubmVyRElWLmFwcGVuZENoaWxkKGhlYWRlclRleHQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29sdW1uLmVkaXRUeXBlID0gJ2Jvb2xlYW5lZGl0JztcbiAgICAgICAgICAgIHZhciBjaGVja0FsbFdyYXAgPSBjcmVhdGVDaGVja0JveCh0aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50LCBmYWxzZSwgeyBjaGVja2VkOiBmYWxzZSwgbGFiZWw6ICcgJyB9KTtcbiAgICAgICAgICAgIHRoaXMuY2hrQWxsQm94LmlkID0gJ2NoZWNrYm94LScgKyBjb2x1bW4udWlkO1xuICAgICAgICAgICAgY2hlY2tBbGxXcmFwLmluc2VydEJlZm9yZSh0aGlzLmNoa0FsbEJveC5jbG9uZU5vZGUoKSwgY2hlY2tBbGxXcmFwLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgaWYgKHRoaXMucGFyZW50LmNzc0NsYXNzKSB7XG4gICAgICAgICAgICAgICAgYWRkQ2xhc3MoW2NoZWNrQWxsV3JhcF0sIFt0aGlzLnBhcmVudC5jc3NDbGFzc10pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5uZXJESVYuYXBwZW5kQ2hpbGQoY2hlY2tBbGxXcmFwKTtcbiAgICAgICAgICAgIGlubmVyRElWLmNsYXNzTGlzdC5hZGQoJ2UtaGVhZGVyY2hrY2VsbGRpdicpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYnVpbGRBdHRyaWJ1dGVGcm9tQ2VsbChub2RlLCBjZWxsKTtcbiAgICAgICAgdGhpcy5hcHBlbmRIdG1sKG5vZGUsIGlubmVyRElWKTtcbiAgICAgICAgbm9kZS5hcHBlbmRDaGlsZCh0aGlzLnNvcnRFbGUuY2xvbmVOb2RlKCkpO1xuICAgICAgICBpZiAoKHRoaXMucGFyZW50LmFsbG93RmlsdGVyaW5nICYmIHRoaXMucGFyZW50LmZpbHRlclNldHRpbmdzLnR5cGUgIT09ICdGaWx0ZXJCYXInKSAmJlxuICAgICAgICAgICAgKGNvbHVtbi5hbGxvd0ZpbHRlcmluZyAmJiAhaXNOdWxsT3JVbmRlZmluZWQoY29sdW1uLmZpZWxkKSkgJiZcbiAgICAgICAgICAgICEodGhpcy5wYXJlbnQuc2hvd0NvbHVtbk1lbnUgJiYgY29sdW1uLnNob3dDb2x1bW5NZW51KSkge1xuICAgICAgICAgICAgYXR0cmlidXRlcyhmbHRyTWVudUVsZSwge1xuICAgICAgICAgICAgICAgICdlLW1hcHBpbmd1aWQnOiAnZS1mbG1lbnUtJyArIGNvbHVtbi51aWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZWxlbWVudERlc2MgPSBlbGVtZW50RGVzYy5sZW5ndGggPyBlbGVtZW50RGVzYyArICcuICcgKyB0aGlzLmxvY2FsaXplci5nZXRDb25zdGFudCgnRmlsdGVyRGVzY3JpcHRpb24nKSA6IHRoaXMubG9jYWxpemVyLmdldENvbnN0YW50KCdGaWx0ZXJEZXNjcmlwdGlvbicpO1xuICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCdlLWZsdHItaWNvbicpO1xuICAgICAgICAgICAgdmFyIG1hdGNoRmxDb2x1bW5zID0gW107XG4gICAgICAgICAgICBpZiAodGhpcy5wYXJlbnQuZmlsdGVyU2V0dGluZ3MuY29sdW1ucy5sZW5ndGggJiYgdGhpcy5wYXJlbnQuZmlsdGVyU2V0dGluZ3MuY29sdW1ucy5sZW5ndGggIT09IG1hdGNoRmxDb2x1bW5zLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHZhciBmb3JlaWduQ29sdW1uID0gdGhpcy5wYXJlbnQuZ2V0Rm9yZWlnbktleUNvbHVtbnMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5wYXJlbnQuY29sdW1ucy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgY291bnQgPSAwOyBjb3VudCA8IHRoaXMucGFyZW50LmZpbHRlclNldHRpbmdzLmNvbHVtbnMubGVuZ3RoOyBjb3VudCsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5wYXJlbnQuZmlsdGVyU2V0dGluZ3MuY29sdW1uc1twYXJzZUludChjb3VudC50b1N0cmluZygpLCAxMCldLmZpZWxkID09PSBjb2x1bW4uZmllbGRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB8fCAoZm9yZWlnbkNvbHVtbi5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiYgY29sdW1uLmZvcmVpZ25LZXlWYWx1ZSA9PT0gdGhpcy5wYXJlbnQuZmlsdGVyU2V0dGluZ3MuY29sdW1uc1twYXJzZUludChjb3VudC50b1N0cmluZygpLCAxMCldLmZpZWxkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsdHJNZW51RWxlLmNsYXNzTGlzdC5hZGQoJ2UtZmlsdGVyZWQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaEZsQ29sdW1ucy5wdXNoKGNvbHVtbi5maWVsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKGZsdHJNZW51RWxlLmNsb25lTm9kZSgpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2VsbC5jbGFzc05hbWUpIHtcbiAgICAgICAgICAgIG5vZGUuY2xhc3NMaXN0LmFkZChjZWxsLmNsYXNzTmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbHVtbi5jdXN0b21BdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICBzZXRTdHlsZUFuZEF0dHJpYnV0ZXMobm9kZSwgY29sdW1uLmN1c3RvbUF0dHJpYnV0ZXMpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnBhcmVudC5hbGxvd1NvcnRpbmcgJiYgY29sdW1uLmFsbG93U29ydGluZykge1xuICAgICAgICAgICAgYXJpYUF0dHIuc29ydCA9ICdub25lJztcbiAgICAgICAgICAgIGVsZW1lbnREZXNjID0gZWxlbWVudERlc2MubGVuZ3RoID8gZWxlbWVudERlc2MgKyAnLiAnICsgdGhpcy5sb2NhbGl6ZXIuZ2V0Q29uc3RhbnQoJ1NvcnREZXNjcmlwdGlvbicpIDogdGhpcy5sb2NhbGl6ZXIuZ2V0Q29uc3RhbnQoJ1NvcnREZXNjcmlwdGlvbicpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgodGhpcy5wYXJlbnQuYWxsb3dHcm91cGluZyAmJiBjb2x1bW4uYWxsb3dHcm91cGluZykgfHwgdGhpcy5wYXJlbnQuYWxsb3dSZW9yZGVyaW5nICYmIGNvbHVtbi5hbGxvd1Jlb3JkZXJpbmcpIHtcbiAgICAgICAgICAgIGFyaWFBdHRyLmdyYWJiZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGVsZW1lbnREZXNjID0gZWxlbWVudERlc2MubGVuZ3RoID8gZWxlbWVudERlc2MgKyAnLiAnICsgdGhpcy5sb2NhbGl6ZXIuZ2V0Q29uc3RhbnQoJ0dyb3VwRGVzY3JpcHRpb24nKSA6IHRoaXMubG9jYWxpemVyLmdldENvbnN0YW50KCdHcm91cERlc2NyaXB0aW9uJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucGFyZW50LnNob3dDb2x1bW5NZW51ICYmIGNvbHVtbi50eXBlICE9PSAnY2hlY2tib3gnICYmICFjb2x1bW4udGVtcGxhdGUpIHtcbiAgICAgICAgICAgIGVsZW1lbnREZXNjID0gZWxlbWVudERlc2MubGVuZ3RoID8gZWxlbWVudERlc2MgKyAnLiAnICsgdGhpcy5sb2NhbGl6ZXIuZ2V0Q29uc3RhbnQoJ0NvbHVtbk1lbnVEZXNjcmlwdGlvbicpIDogdGhpcy5sb2NhbGl6ZXIuZ2V0Q29uc3RhbnQoJ0NvbHVtbk1lbnVEZXNjcmlwdGlvbicpO1xuICAgICAgICB9XG4gICAgICAgIG5vZGUgPSB0aGlzLmV4dGVuZFByZXBhcmVIZWFkZXIoY29sdW1uLCBub2RlKTtcbiAgICAgICAgdmFyIHJlc3VsdDtcbiAgICAgICAgdmFyIGdyaWRPYmogPSB0aGlzLnBhcmVudDtcbiAgICAgICAgdmFyIGNvbEluZGV4ID0gZ3JpZE9iai5nZXRDb2x1bW5JbmRleEJ5RmllbGQoY29sdW1uLmZpZWxkKTtcbiAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChjb2x1bW4uaGVhZGVyVGVtcGxhdGUpKSB7XG4gICAgICAgICAgICAvL25lZWQgdG8gcGFzcyB0aGUgdGVtcGxhdGUgaWQgZm9yIGJsYXpvciBoZWFkZXJ0ZW1wbGF0ZVxuICAgICAgICAgICAgdmFyIGhlYWRlclRlbXBJRCA9IGdyaWRPYmouZWxlbWVudC5pZCArIGNvbHVtbi51aWQgKyAnaGVhZGVyVGVtcGxhdGUnO1xuICAgICAgICAgICAgdmFyIHN0ciA9ICdpc1N0cmluZ1RlbXBsYXRlJztcbiAgICAgICAgICAgIHZhciBjb2wgPSBjb2x1bW47XG4gICAgICAgICAgICB2YXIgaXNSZWFjdENvbXBpbGVyID0gdGhpcy5wYXJlbnQuaXNSZWFjdCAmJiB0eXBlb2YgKGNvbHVtbi5oZWFkZXJUZW1wbGF0ZSkgIT09ICdzdHJpbmcnICYmICEoY29sdW1uLmhlYWRlclRlbXBsYXRlLnByb3RvdHlwZSAmJiBjb2x1bW4uaGVhZGVyVGVtcGxhdGUucHJvdG90eXBlLkNTUFRlbXBsYXRlKTtcbiAgICAgICAgICAgIHZhciBpc1JlYWN0Q2hpbGRfMSA9IHRoaXMucGFyZW50LnBhcmVudERldGFpbHMgJiYgdGhpcy5wYXJlbnQucGFyZW50RGV0YWlscy5wYXJlbnRJbnN0T2JqICYmXG4gICAgICAgICAgICAgICAgdGhpcy5wYXJlbnQucGFyZW50RGV0YWlscy5wYXJlbnRJbnN0T2JqLmlzUmVhY3Q7XG4gICAgICAgICAgICB2YXIgaXNSZWFjdFByaW50R3JpZCA9IHRoaXMucGFyZW50LnByaW50R3JpZFBhcmVudCAmJiB0aGlzLnBhcmVudC5wcmludEdyaWRQYXJlbnQuaXNSZWFjdDtcbiAgICAgICAgICAgIGlmIChpc1JlYWN0Q29tcGlsZXIgfHwgaXNSZWFjdENoaWxkXzEgfHwgaXNSZWFjdFByaW50R3JpZCkge1xuICAgICAgICAgICAgICAgIHZhciBjb3BpZWQgPSB7ICdpbmRleCc6IGNvbEluZGV4IH07XG4gICAgICAgICAgICAgICAgbm9kZS5maXJzdEVsZW1lbnRDaGlsZC5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgICAgICBjb2x1bW4uZ2V0SGVhZGVyVGVtcGxhdGUoKShleHRlbmQoY29waWVkLCBjb2wpLCBncmlkT2JqLCAnaGVhZGVyVGVtcGxhdGUnLCBoZWFkZXJUZW1wSUQsIHRoaXMucGFyZW50W1wiXCIgKyBzdHJdLCBudWxsLCBub2RlLmZpcnN0RWxlbWVudENoaWxkKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmVudC5yZW5kZXJUZW1wbGF0ZXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IGNvbHVtbi5nZXRIZWFkZXJUZW1wbGF0ZSgpKGV4dGVuZCh7ICdpbmRleCc6IGNvbEluZGV4IH0sIGNvbCksIGdyaWRPYmosICdoZWFkZXJUZW1wbGF0ZScsIGhlYWRlclRlbXBJRCwgdGhpcy5wYXJlbnRbXCJcIiArIHN0cl0sIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB0aGlzLnBhcmVudFsncm9vdCddKTtcbiAgICAgICAgICAgICAgICBub2RlLmZpcnN0RWxlbWVudENoaWxkLmlubmVySFRNTCA9ICcnO1xuICAgICAgICAgICAgICAgIGFwcGVuZENoaWxkcmVuKG5vZGUuZmlyc3RFbGVtZW50Q2hpbGQsIHJlc3VsdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hcmlhU2VydmljZS5zZXRPcHRpb25zKG5vZGUsIGFyaWFBdHRyKTtcbiAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChjb2x1bW4uaGVhZGVyVGV4dEFsaWduKSB8fCAhaXNOdWxsT3JVbmRlZmluZWQoY29sdW1uLnRleHRBbGlnbikpIHtcbiAgICAgICAgICAgIHZhciBhbGlnbm1lbnQgPSBjb2x1bW4uaGVhZGVyVGV4dEFsaWduIHx8IGNvbHVtbi50ZXh0QWxpZ247XG4gICAgICAgICAgICBpZiAoYWxpZ25tZW50LnRvTG93ZXJDYXNlKCkgPT09ICdyaWdodCcgfHwgYWxpZ25tZW50LnRvTG93ZXJDYXNlKCkgPT09ICdsZWZ0Jykge1xuICAgICAgICAgICAgICAgIG5vZGUuY2xhc3NMaXN0LmFkZChhbGlnbm1lbnQudG9Mb3dlckNhc2UoKSA9PT0gJ3JpZ2h0JyA/ICdlLXJpZ2h0YWxpZ24nIDogJ2UtbGVmdGFsaWduJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChhbGlnbm1lbnQudG9Mb3dlckNhc2UoKSA9PT0gJ2NlbnRlcicpIHtcbiAgICAgICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5hZGQoJ2UtY2VudGVyYWxpZ24nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGFsaWdubWVudC50b0xvd2VyQ2FzZSgpID09PSAnanVzdGlmeScpIHtcbiAgICAgICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5hZGQoJ2UtanVzdGlmeWFsaWduJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbHVtbi5jbGlwTW9kZSA9PT0gJ0NsaXAnIHx8ICghY29sdW1uLmNsaXBNb2RlICYmIHRoaXMucGFyZW50LmNsaXBNb2RlID09PSAnQ2xpcCcpKSB7XG4gICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5hZGQoJ2UtZ3JpZGNsaXAnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICgoY29sdW1uLmNsaXBNb2RlID09PSAnRWxsaXBzaXNXaXRoVG9vbHRpcCcgfHwgKCFjb2x1bW4uY2xpcE1vZGUgJiYgdGhpcy5wYXJlbnQuY2xpcE1vZGUgPT09ICdFbGxpcHNpc1dpdGhUb29sdGlwJykpXG4gICAgICAgICAgICAmJiAhKGdyaWRPYmouYWxsb3dUZXh0V3JhcCAmJiAoZ3JpZE9iai50ZXh0V3JhcFNldHRpbmdzLndyYXBNb2RlID09PSAnSGVhZGVyJ1xuICAgICAgICAgICAgICAgIHx8IGdyaWRPYmoudGV4dFdyYXBTZXR0aW5ncy53cmFwTW9kZSA9PT0gJ0JvdGgnKSkpIHtcbiAgICAgICAgICAgIGlmIChjb2x1bW4udHlwZSAhPT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgICAgIG5vZGUuY2xhc3NMaXN0LmFkZCgnZS1lbGxpcHNpc3Rvb2x0aXAnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoZWxlbWVudERlc2MpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZUVsZW0gPSAodGhpcy5wYXJlbnQuY3JlYXRlRWxlbWVudCgnc3BhbicsIHsgaWQ6ICdoZWFkZXJUaXRsZS0nICsgY29sdW1uLnVpZCwgaW5uZXJIVE1MOiBlbGVtZW50RGVzYyB9KSk7XG4gICAgICAgICAgICB0aXRsZUVsZW0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQodGl0bGVFbGVtKTtcbiAgICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdhcmlhLWRlc2NyaWJlZGJ5JywgdGl0bGVFbGVtLmlkKTtcbiAgICAgICAgfVxuICAgICAgICBub2RlLnNldEF0dHJpYnV0ZSgnYXJpYS1yb3dzcGFuJywgKCFpc051bGxPclVuZGVmaW5lZChjZWxsLnJvd1NwYW4pID8gY2VsbC5yb3dTcGFuIDogMSkudG9TdHJpbmcoKSk7XG4gICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdhcmlhLWNvbHNwYW4nLCAnMScpO1xuICAgICAgICB2YXIgaXNSZWFjdENoaWxkID0gdGhpcy5wYXJlbnQucGFyZW50RGV0YWlscyAmJiB0aGlzLnBhcmVudC5wYXJlbnREZXRhaWxzLnBhcmVudEluc3RPYmogJiZcbiAgICAgICAgICAgIHRoaXMucGFyZW50LnBhcmVudERldGFpbHMucGFyZW50SW5zdE9iai5pc1JlYWN0O1xuICAgICAgICBpZiAoKCh0aGlzLnBhcmVudC5pc1JlYWN0ICYmIHRoaXMucGFyZW50LnJlcXVpcmVUZW1wbGF0ZVJlZilcbiAgICAgICAgICAgIHx8IChpc1JlYWN0Q2hpbGQgJiYgdGhpcy5wYXJlbnQucGFyZW50RGV0YWlscy5wYXJlbnRJbnN0T2JqLnJlcXVpcmVUZW1wbGF0ZVJlZikpXG4gICAgICAgICAgICAmJiAhaXNOdWxsT3JVbmRlZmluZWQoY29sdW1uLmhlYWRlclRlbXBsYXRlKSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby10aGlzLWFsaWFzXG4gICAgICAgICAgICB2YXIgdGhpc1JlZl8xID0gdGhpcztcbiAgICAgICAgICAgIHRoaXNSZWZfMS5wYXJlbnQucmVuZGVyVGVtcGxhdGVzKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzUmVmXzEucGFyZW50LnRyaWdnZXIoaGVhZGVyQ2VsbEluZm8sIHsgY2VsbDogY2VsbCwgbm9kZTogbm9kZSB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQudHJpZ2dlcihoZWFkZXJDZWxsSW5mbywgeyBjZWxsOiBjZWxsLCBub2RlOiBub2RlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnBhcmVudC5pc0Zyb3plbkdyaWQoKSkge1xuICAgICAgICAgICAgYWRkU3RpY2t5Q29sdW1uUG9zaXRpb24odGhpcy5wYXJlbnQsIGNvbHVtbiwgbm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcbiAgICBIZWFkZXJDZWxsUmVuZGVyZXIucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gKGZpZWxkLCBjb2x1bW4pIHtcbiAgICAgICAgcmV0dXJuIGNvbHVtbi5oZWFkZXJWYWx1ZUFjY2Vzc29yKGZpZWxkLCBjb2x1bW4pO1xuICAgIH07XG4gICAgSGVhZGVyQ2VsbFJlbmRlcmVyLnByb3RvdHlwZS5leHRlbmRQcmVwYXJlSGVhZGVyID0gZnVuY3Rpb24gKGNvbHVtbiwgbm9kZSkge1xuICAgICAgICBpZiAodGhpcy5wYXJlbnQuc2hvd0NvbHVtbk1lbnUgJiYgY29sdW1uLnNob3dDb2x1bW5NZW51ICYmICFpc051bGxPclVuZGVmaW5lZChjb2x1bW4uZmllbGQpKSB7XG4gICAgICAgICAgICB2YXIgZWxlbWVudCA9ICh0aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdkaXYnLCB7IGNsYXNzTmFtZTogJ2UtaWNvbnMgZS1jb2x1bW5tZW51JywgYXR0cnM6IHsgJ2FyaWEtaGlkZGVuJzogJ3RydWUnIH0gfSkpO1xuICAgICAgICAgICAgdmFyIG1hdGNoRmlsdGVyZWRDb2x1bW5zID0gW107XG4gICAgICAgICAgICBpZiAodGhpcy5wYXJlbnQuZmlsdGVyU2V0dGluZ3MuY29sdW1ucy5sZW5ndGggJiYgdGhpcy5wYXJlbnQuZmlsdGVyU2V0dGluZ3MuY29sdW1ucy5sZW5ndGggIT09IG1hdGNoRmlsdGVyZWRDb2x1bW5zLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5wYXJlbnQuY29sdW1ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMucGFyZW50LmZpbHRlclNldHRpbmdzLmNvbHVtbnMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnBhcmVudC5maWx0ZXJTZXR0aW5ncy5jb2x1bW5zW3BhcnNlSW50KGoudG9TdHJpbmcoKSwgMTApXS5maWVsZCA9PT0gY29sdW1uLmZpZWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdlLWZpbHRlcmVkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hGaWx0ZXJlZENvbHVtbnMucHVzaChjb2x1bW4uZmllbGQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCdlLWZsdHItaWNvbicpO1xuICAgICAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wYXJlbnQuYWxsb3dSZXNpemluZykge1xuICAgICAgICAgICAgdmFyIGhhbmRsZXIgPSB0aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIGhhbmRsZXIuY2xhc3NOYW1lID0gY29sdW1uLmFsbG93UmVzaXppbmcgPyAnZS1yaGFuZGxlciBlLXJjdXJzb3InIDogJ2UtcnN1cHByZXNzJztcbiAgICAgICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQoaGFuZGxlcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBzcGVjaWZpZXMgaG93IHRoZSByZXN1bHQgY29udGVudCB0byBiZSBwbGFjZWQgaW4gdGhlIGNlbGwuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gIHtFbGVtZW50fSBub2RlIC0gc3BlY2lmaWVzIHRoZSBub2RlXG4gICAgICogQHBhcmFtICB7c3RyaW5nfEVsZW1lbnR9IGlubmVySHRtbCAtIHNwZWNpZmllcyB0aGUgaW5uZXJIdG1sXG4gICAgICogQHJldHVybnMge0VsZW1lbnR9IHJldHVybnMgdGhlIGVsZW1lbnRcbiAgICAgKi9cbiAgICBIZWFkZXJDZWxsUmVuZGVyZXIucHJvdG90eXBlLmFwcGVuZEh0bWwgPSBmdW5jdGlvbiAobm9kZSwgaW5uZXJIdG1sKSB7XG4gICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQoaW5uZXJIdG1sKTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcbiAgICByZXR1cm4gSGVhZGVyQ2VsbFJlbmRlcmVyO1xufShDZWxsUmVuZGVyZXIpKTtcbmV4cG9ydCB7IEhlYWRlckNlbGxSZW5kZXJlciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-cell-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-indent-renderer.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-indent-renderer.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeaderIndentCellRenderer: () => (/* binding */ HeaderIndentCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/**\n * HeaderIndentCellRenderer class which responsible for building header indent cell.\n *\n * @hidden\n */\nvar HeaderIndentCellRenderer = /** @class */ (function (_super) {\n    __extends(HeaderIndentCellRenderer, _super);\n    function HeaderIndentCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TH', { className: 'e-grouptopleftcell' });\n        return _this;\n    }\n    /**\n     * Function to render the indent cell\n     *\n     * @param  {Cell} cell - specifies the cell\n     * @param  {Object} data - specifies the data\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    HeaderIndentCellRenderer.prototype.render = function (cell, data) {\n        var node = this.element.cloneNode();\n        node.appendChild(this.parent.createElement('div', { className: 'e-headercelldiv e-emptycell', innerHTML: '' }));\n        return node;\n    };\n    return HeaderIndentCellRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_0__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9oZWFkZXItaW5kZW50LXJlbmRlcmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUM4QztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsaUNBQWlDO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsTUFBTTtBQUN0QixnQkFBZ0IsUUFBUTtBQUN4QixpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCx5REFBeUQ7QUFDckg7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxDQUFDLHdEQUFZO0FBQ3NCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlfdHJhdmVsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzeW5jZnVzaW9uK2VqMi1ncmlkc0AyOS4xLjQwL25vZGVfbW9kdWxlcy9Ac3luY2Z1c2lvbi9lajItZ3JpZHMvc3JjL2dyaWQvcmVuZGVyZXIvaGVhZGVyLWluZGVudC1yZW5kZXJlci5qcz81MTUyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuaW1wb3J0IHsgQ2VsbFJlbmRlcmVyIH0gZnJvbSAnLi9jZWxsLXJlbmRlcmVyJztcbi8qKlxuICogSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyIGNsYXNzIHdoaWNoIHJlc3BvbnNpYmxlIGZvciBidWlsZGluZyBoZWFkZXIgaW5kZW50IGNlbGwuXG4gKlxuICogQGhpZGRlblxuICovXG52YXIgSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhIZWFkZXJJbmRlbnRDZWxsUmVuZGVyZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZWxlbWVudCA9IF90aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdUSCcsIHsgY2xhc3NOYW1lOiAnZS1ncm91cHRvcGxlZnRjZWxsJyB9KTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byByZW5kZXIgdGhlIGluZGVudCBjZWxsXG4gICAgICpcbiAgICAgKiBAcGFyYW0gIHtDZWxsfSBjZWxsIC0gc3BlY2lmaWVzIHRoZSBjZWxsXG4gICAgICogQHBhcmFtICB7T2JqZWN0fSBkYXRhIC0gc3BlY2lmaWVzIHRoZSBkYXRhXG4gICAgICogQHJldHVybnMge0VsZW1lbnR9IHJldHVybnMgdGhlIGVsZW1lbnRcbiAgICAgKi9cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoY2VsbCwgZGF0YSkge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMuZWxlbWVudC5jbG9uZU5vZGUoKTtcbiAgICAgICAgbm9kZS5hcHBlbmRDaGlsZCh0aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdkaXYnLCB7IGNsYXNzTmFtZTogJ2UtaGVhZGVyY2VsbGRpdiBlLWVtcHR5Y2VsbCcsIGlubmVySFRNTDogJycgfSkpO1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICAgIHJldHVybiBIZWFkZXJJbmRlbnRDZWxsUmVuZGVyZXI7XG59KENlbGxSZW5kZXJlcikpO1xuZXhwb3J0IHsgSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-indent-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-renderer.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-renderer.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeaderRender: () => (/* binding */ HeaderRender)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _row_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./row-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-renderer.js\");\n/* harmony import */ var _models_cell__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/cell */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/cell.js\");\n/* harmony import */ var _models_row__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../models/row */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-buttons@29.1.34/node_modules/@syncfusion/ej2-buttons/src/button/button.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n// eslint-disable-next-line valid-jsdoc, jsdoc/require-param\n/**\n * Content module is used to render grid content\n *\n * @hidden\n */\nvar HeaderRender = /** @class */ (function () {\n    /**\n     * Constructor for header renderer module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the serviceLocator\n     */\n    function HeaderRender(parent, serviceLocator) {\n        var _this = this;\n        this.frzIdx = 0;\n        this.notfrzIdx = 0;\n        this.isFirstCol = false;\n        this.isReplaceDragEle = true;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.helper = function (e) {\n            var gObj = _this.parent;\n            var target = _this.draggable.currentStateTarget;\n            var parentEle = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(target, 'e-headercell');\n            if (!(gObj.allowReordering || gObj.allowGrouping) || (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(parentEle)\n                && parentEle.getElementsByClassName('e-checkselectall').length > 0)) {\n                return false;\n            }\n            var visualElement = _this.parent.createElement('div', { className: 'e-cloneproperties e-dragclone e-headerclone' });\n            var element = target.classList.contains('e-headercell') ? target : parentEle;\n            if (!element || (!gObj.allowReordering && element.classList.contains('e-stackedheadercell'))) {\n                return false;\n            }\n            var height = element.offsetHeight;\n            var headercelldiv = element.querySelector('.e-headercelldiv') || element.querySelector('.e-stackedheadercelldiv');\n            var col;\n            if (headercelldiv) {\n                if (element.querySelector('.e-stackedheadercelldiv')) {\n                    col = gObj.getStackedHeaderColumnByHeaderText(headercelldiv.innerText.trim(), gObj.columns);\n                }\n                else {\n                    col = gObj.getColumnByUid(headercelldiv.getAttribute('e-mappinguid'));\n                }\n                _this.column = col;\n                if (_this.column.lockColumn) {\n                    return false;\n                }\n                visualElement.setAttribute('e-mappinguid', _this.column.uid);\n            }\n            if (col && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.headerTemplate)) {\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.headerTemplate)) {\n                    var colIndex = gObj.getColumnIndexByField(col.field);\n                    var result = col.getHeaderTemplate()((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({ 'index': colIndex }, col), gObj, 'headerTemplate', null, null, null, null, gObj.root);\n                    var isReactCompiler = gObj.isReact && typeof (col.headerTemplate) !== 'string';\n                    var isReactChild = gObj.parentDetails && gObj.parentDetails.parentInstObj &&\n                        gObj.parentDetails.parentInstObj.isReact;\n                    if (isReactCompiler || isReactChild) {\n                        gObj.renderTemplates();\n                    }\n                    (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.appendChildren)(visualElement, result);\n                }\n                else {\n                    visualElement.innerHTML = col.headerTemplate;\n                }\n                if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(visualElement.firstChild) && visualElement.firstChild.nodeType === 1) {\n                    visualElement.firstChild.style.pointerEvents = 'none';\n                }\n            }\n            else {\n                visualElement.innerHTML = headercelldiv ?\n                    col.headerText : element.firstElementChild.innerHTML;\n            }\n            visualElement.style.width = element.offsetWidth + 'px';\n            visualElement.style.height = element.offsetHeight + 'px';\n            visualElement.style.lineHeight = (height - 6).toString() + 'px';\n            gObj.element.appendChild(visualElement);\n            return visualElement;\n        };\n        this.dragStart = function (e) {\n            var gObj = _this.parent;\n            gObj.element.querySelector('.e-gridpopup').style.display = 'none';\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnDragStart, { target: _this.draggable.currentStateTarget, column: _this.column, event: e.event });\n        };\n        this.drag = function (e) {\n            var gObj = _this.parent;\n            var target = e.target;\n            if (target) {\n                var closest = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-grid');\n                var cloneElement = _this.parent.element.querySelector('.e-cloneproperties');\n                if (!closest || closest.getAttribute('id') !== gObj.element.getAttribute('id')) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(cloneElement, ['e-notallowedcur'], ['e-defaultcur']);\n                    if (gObj.allowReordering) {\n                        gObj.element.querySelector('.e-reorderuparrow').style.display = 'none';\n                        gObj.element.querySelector('.e-reorderdownarrow').style.display = 'none';\n                    }\n                    if (!gObj.groupSettings.allowReordering) {\n                        return;\n                    }\n                }\n                gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnDrag, { target: e.target, column: _this.column, event: e.event });\n            }\n        };\n        this.dragStop = function (e) {\n            var gObj = _this.parent;\n            var cancel;\n            gObj.element.querySelector('.e-gridpopup').style.display = 'none';\n            if ((!(0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(e.target, 'e-headercell') && !(0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(e.target, 'e-groupdroparea')) ||\n                (!gObj.allowReordering && (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(e.target, 'e-headercell')) ||\n                (!e.helper.getAttribute('e-mappinguid') && (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(e.target, 'e-groupdroparea'))) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(e.helper);\n                cancel = true;\n            }\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnDragStop, { target: e.target, event: e.event, column: _this.column, cancel: cancel });\n        };\n        this.drop = function (e) {\n            var gObj = _this.parent;\n            var uid = e.droppedElement.getAttribute('e-mappinguid');\n            var closest = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-grid');\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(e.droppedElement);\n            if (closest && closest.getAttribute('id') !== gObj.element.getAttribute('id') ||\n                !(gObj.allowReordering || gObj.allowGrouping)) {\n                return;\n            }\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.headerDrop, { target: e.target, uid: uid, droppedElement: e.droppedElement });\n        };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.ariaService = this.serviceLocator.getService('ariaService');\n        this.widthService = this.serviceLocator.getService('widthService');\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (!this.parent.enableColumnVirtualization) {\n            this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnVisibilityChanged, this.setVisible, this);\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnPositionChanged, this.colPosRefresh, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.initialEnd, this.renderCustomToolbar, this);\n        if (this.parent.rowRenderingMode === 'Vertical') {\n            this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.uiUpdate, this.updateCustomResponsiveToolbar, this);\n        }\n    }\n    /**\n     * The function is used to render grid header div\n     *\n     * @returns {void}\n     */\n    HeaderRender.prototype.renderPanel = function () {\n        var div = this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.gridHeader);\n        var isRendered = (div != null);\n        div = isRendered ? div : this.parent.createElement('div', { className: 'e-gridheader' });\n        var innerDiv = isRendered ? div.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.headerContent) :\n            this.parent.createElement('div', { className: _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.headerContent });\n        this.toggleStackClass(div);\n        div.appendChild(innerDiv);\n        this.setPanel(div);\n        if (!isRendered) {\n            this.parent.element.appendChild(div);\n        }\n    };\n    /**\n     * The function is used to render grid header div\n     *\n     * @returns {void}\n     */\n    HeaderRender.prototype.renderTable = function () {\n        var headerDiv = this.getPanel();\n        headerDiv.appendChild(this.createHeaderTable());\n        this.setTable(headerDiv.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.table));\n        this.initializeHeaderDrag();\n        this.initializeHeaderDrop();\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.headerRefreshed, { rows: this.rows });\n    };\n    /**\n     * Get the header content div element of grid\n     *\n     * @returns {Element} returns the element\n     */\n    HeaderRender.prototype.getPanel = function () {\n        return this.headerPanel;\n    };\n    /**\n     * Set the header content div element of grid\n     *\n     * @param  {Element} panel - specifies the panel element\n     * @returns {void}\n     */\n    HeaderRender.prototype.setPanel = function (panel) {\n        this.headerPanel = panel;\n    };\n    /**\n     * Get the header table element of grid\n     *\n     * @returns {Element} returns the element\n     */\n    HeaderRender.prototype.getTable = function () {\n        return this.headerTable;\n    };\n    /**\n     * Set the header table element of grid\n     *\n     * @param  {Element} table - specifies the table element\n     * @returns {void}\n     */\n    HeaderRender.prototype.setTable = function (table) {\n        this.headerTable = table;\n    };\n    /**\n     * Get the header colgroup element\n     *\n     * @returns {Element} returns the element\n     */\n    HeaderRender.prototype.getColGroup = function () {\n        return this.colgroup;\n    };\n    /**\n     * Set the header colgroup element\n     *\n     * @param {Element} colGroup - specifies the colgroup\n     * @returns {Element} returns the element\n     */\n    HeaderRender.prototype.setColGroup = function (colGroup) {\n        return this.colgroup = colGroup;\n    };\n    /**\n     * Get the header row element collection.\n     *\n     * @returns {Element[]} returns the element\n     */\n    HeaderRender.prototype.getRows = function () {\n        var table = this.getTable();\n        return table.tHead.rows;\n    };\n    /**\n     * The function is used to create header table elements\n     *\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    HeaderRender.prototype.createHeaderTable = function () {\n        var table = this.createTable();\n        var innerDiv = this.getPanel().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.headerContent);\n        innerDiv.appendChild(table);\n        return innerDiv;\n    };\n    /**\n     * The function is used to create header table elements\n     *\n     * @param {Element} tableEle - specifies the table Element\n     * @param {freezeTable} tableName - specifies the table name\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    HeaderRender.prototype.createHeader = function (tableEle, tableName) {\n        if (tableEle === void 0) { tableEle = null; }\n        var gObj = this.parent;\n        if (this.getTable()) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.getTable());\n        }\n        var table = this.parent.createElement('table', { className: _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.table, attrs: { role: 'presentation' } });\n        table.style.cssText = 'border-collapse: separate; border-spacing: .25px;';\n        var findHeaderRow = this.createHeaderContent(tableName);\n        var thead = findHeaderRow.thead;\n        var tbody = this.parent.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.tbody, { className: this.parent.frozenRows ||\n                ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && this.parent.editSettings.showAddNewRow) ? '' :\n                'e-hide', attrs: { role: 'rowgroup' } });\n        this.caption = this.parent.createElement('caption', { innerHTML: this.parent.element.id + '_header_table', className: 'e-hide' });\n        var colGroup = this.parent.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.colGroup);\n        var rowBody = this.parent.createElement('tr', { attrs: { role: 'row' }, className: (this.parent.enableVirtualization ||\n                this.parent.enableInfiniteScrolling) && this.parent.editSettings.showAddNewRow ? 'e-hide' : '' });\n        var bodyCell;\n        var rows = this.rows = findHeaderRow.rows;\n        for (var i = 0, len = rows.length; i < len; i++) {\n            for (var j = 0, len_1 = rows[parseInt(i.toString(), 10)].cells.length; j < len_1; j++) {\n                bodyCell = this.parent.createElement('td');\n                rowBody.appendChild(bodyCell);\n            }\n        }\n        if (gObj.allowFiltering || gObj.allowSorting || gObj.allowGrouping) {\n            table.classList.add('e-sortfilter');\n        }\n        this.updateColGroup(colGroup);\n        tbody.appendChild(rowBody);\n        table.appendChild(this.setColGroup(colGroup));\n        table.appendChild(thead);\n        table.appendChild(tbody);\n        table.appendChild(this.caption);\n        return table;\n    };\n    /**\n     * @param {Element} tableEle - specifies the column\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    HeaderRender.prototype.createTable = function (tableEle) {\n        if (tableEle === void 0) { tableEle = null; }\n        return this.createHeader(tableEle);\n    };\n    HeaderRender.prototype.createHeaderContent = function (tableName) {\n        var gObj = this.parent;\n        var columns = gObj.getColumns();\n        var thead = this.parent.createElement('thead', { attrs: { 'role': 'rowgroup' } });\n        var colHeader = this.parent.createElement('tr', { className: 'e-columnheader', attrs: { role: 'row' } });\n        var rowRenderer = new _row_renderer__WEBPACK_IMPORTED_MODULE_4__.RowRenderer(this.serviceLocator, _base_enum__WEBPACK_IMPORTED_MODULE_5__.CellType.Header, gObj);\n        rowRenderer.element = colHeader;\n        var rows = [];\n        var headerRow;\n        this.colDepth = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.measureColumnDepth)(gObj.columns);\n        for (var i = 0, len = this.colDepth; i < len; i++) {\n            rows[parseInt(i.toString(), 10)] = this.generateRow(i);\n            rows[parseInt(i.toString(), 10)].cells = [];\n        }\n        rows = this.ensureColumns(rows);\n        rows = this.getHeaderCells(rows, tableName);\n        if (gObj.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n            for (var i = 0, len = rows.length; i < len; i++) {\n                rows[parseInt(i.toString(), 10)].cells.push(this.generateCell({}, _base_enum__WEBPACK_IMPORTED_MODULE_5__.CellType.RowDragHIcon));\n            }\n        }\n        var headerTemplateColumn = columns.filter(function (a) { return a.headerTemplate; });\n        if (headerTemplateColumn.length && (this.parent.isReact || this.parent.isVue)) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.clearReactVueTemplates)(this.parent, ['headerTemplate']);\n        }\n        for (var i = 0, len = this.colDepth; i < len; i++) {\n            headerRow = rowRenderer.render(rows[parseInt(i.toString(), 10)], columns);\n            if (this.parent.rowHeight && headerRow.querySelector('.e-headercell')) {\n                headerRow.style.height = this.parent.rowHeight + 'px';\n            }\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.addFixedColumnBorder)(headerRow);\n            thead.appendChild(headerRow);\n        }\n        var findHeaderRow = {\n            thead: thead,\n            rows: rows\n        };\n        return findHeaderRow;\n    };\n    HeaderRender.prototype.updateColGroup = function (colGroup) {\n        var cols = this.parent.getColumns();\n        var col;\n        var indexes = this.parent.getColumnIndexesInView();\n        colGroup.id = this.parent.element.id + _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.colGroup;\n        if (this.parent.allowGrouping) {\n            for (var i = 0, len = this.parent.groupSettings.columns.length; i < len; i++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n                    continue;\n                }\n                col = this.parent.createElement('col', { className: 'e-group-intent' });\n                colGroup.appendChild(col);\n            }\n        }\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            col = this.parent.createElement('col', { className: 'e-detail-intent' });\n            colGroup.appendChild(col);\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n            col = this.parent.createElement('col', { className: 'e-drag-intent' });\n            colGroup.appendChild(col);\n        }\n        for (var i = 0, len = cols.length; i < len; i++) {\n            col = this.parent.createElement('col');\n            if (cols[parseInt(i.toString(), 10)].visible === false) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(col, { 'display': 'none' });\n            }\n            colGroup.appendChild(col);\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n            col = this.parent.createElement('col', { className: 'e-drag-intent' });\n            colGroup.appendChild(col);\n        }\n        return colGroup;\n    };\n    HeaderRender.prototype.ensureColumns = function (rows) {\n        //TODO: generate dummy column for group, detail, stacked row here; ensureColumns here\n        var gObj = this.parent;\n        var indexes = this.parent.getColumnIndexesInView();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (gObj.allowGrouping) {\n                for (var c = 0, len_2 = gObj.groupSettings.columns.length; c < len_2; c++) {\n                    if (this.parent.enableColumnVirtualization && indexes.indexOf(c) === -1) {\n                        continue;\n                    }\n                    rows[parseInt(i.toString(), 10)].cells.push(this.generateCell({}, _base_enum__WEBPACK_IMPORTED_MODULE_5__.CellType.HeaderIndent));\n                }\n            }\n            if (gObj.detailTemplate || gObj.childGrid) {\n                var args = {};\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.detailIndentCellInfo, args);\n                rows[parseInt(i.toString(), 10)].cells.push(this.generateCell(args, _base_enum__WEBPACK_IMPORTED_MODULE_5__.CellType.DetailHeader));\n            }\n            if (gObj.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n                rows[parseInt(i.toString(), 10)].cells.push(this.generateCell({}, _base_enum__WEBPACK_IMPORTED_MODULE_5__.CellType.RowDragHIcon));\n            }\n        }\n        return rows;\n    };\n    HeaderRender.prototype.getHeaderCells = function (rows, tableName) {\n        var thead = this.parent.getHeaderTable() && this.parent.getHeaderTable().querySelector('thead');\n        var cols = this.parent.enableColumnVirtualization ?\n            this.parent.getColumns(this.parent.enablePersistence) : this.parent.columns;\n        this.frzIdx = 0;\n        this.notfrzIdx = 0;\n        if (this.parent.lockcolPositionCount) {\n            for (var i = 0; i < (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cols) ? cols.length : 0); i++) {\n                this.lockColsRendered = false;\n                rows = this.appendCells(cols[parseInt(i.toString(), 10)], rows, 0, i === 0, false, i === (cols.length - 1), thead, tableName, false);\n            }\n        }\n        for (var i = 0, len = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cols) ? cols.length : 0); i < len; i++) {\n            this.notfrzIdx = 0;\n            this.lockColsRendered = true;\n            rows = this.appendCells(cols[parseInt(i.toString(), 10)], rows, 0, i === 0, false, i === (len - 1), thead, tableName, false);\n        }\n        return rows;\n    };\n    HeaderRender.prototype.appendCells = function (cols, rows, index, isFirstObj, isFirstCol, isLastCol, isMovable, tableName, isStackLastCol) {\n        var lastCol = isLastCol ? isStackLastCol ? 'e-laststackcell' : 'e-lastcell' : '';\n        var isLockColumn = !this.parent.lockcolPositionCount\n            || (cols.lockColumn && !this.lockColsRendered) || (!cols.lockColumn && this.lockColsRendered);\n        if (!cols.columns) {\n            if (isLockColumn) {\n                rows[parseInt(index.toString(), 10)].cells.push(this.generateCell(cols, _base_enum__WEBPACK_IMPORTED_MODULE_5__.CellType.Header, this.colDepth - index, (isFirstObj ? '' : (isFirstCol ? 'e-firstcell' : '')) + lastCol, index, this.parent.getColumnIndexByUid(cols.uid)));\n            }\n            if (this.parent.lockcolPositionCount) {\n                if ((this.frzIdx + this.notfrzIdx < this.parent.frozenColumns) &&\n                    ((cols.lockColumn && !this.lockColsRendered) || (!cols.lockColumn && this.lockColsRendered))) {\n                    this.frzIdx++;\n                }\n                else {\n                    this.notfrzIdx++;\n                }\n            }\n            else {\n                this.frzIdx++;\n            }\n        }\n        else {\n            this.isFirstCol = false;\n            var colSpan = this.getCellCnt(cols, 0);\n            if (colSpan) {\n                var stackedLockColsCount = this.getStackedLockColsCount(cols, 0);\n                var isStackedLockColumn = this.parent.lockcolPositionCount === 0\n                    || (!this.lockColsRendered && stackedLockColsCount !== 0)\n                    || (this.lockColsRendered && (colSpan - stackedLockColsCount) !== 0);\n                if (isStackedLockColumn) {\n                    rows[parseInt(index.toString(), 10)].cells.push(new _models_cell__WEBPACK_IMPORTED_MODULE_6__.Cell({\n                        cellType: _base_enum__WEBPACK_IMPORTED_MODULE_5__.CellType.StackedHeader, column: cols,\n                        colSpan: this.getColSpan(colSpan, stackedLockColsCount),\n                        className: isFirstObj ? '' : (isFirstCol ? 'e-firstcell' : '')\n                    }));\n                }\n            }\n            if (this.parent.lockcolPositionCount && !this.lockColsRendered) {\n                for (var i = 0; i < cols.columns.length; i++) {\n                    rows = this.appendCells(cols.columns[parseInt(i.toString(), 10)], rows, index + 1, isFirstObj, i === 0, i === (cols.columns.length - 1) && isLastCol, isMovable, tableName, false);\n                }\n            }\n            if (this.lockColsRendered) {\n                for (var i = 0, len = cols.columns.length; i < len; i++) {\n                    isFirstObj = isFirstObj && i === 0;\n                    var isFirstCol_1 = this.isFirstCol = cols.columns[parseInt(i.toString(), 10)].visible\n                        && !isFirstObj;\n                    var isLaststackedCol = i === (len - 1) && isLastCol;\n                    rows = this.appendCells(cols.columns[parseInt(i.toString(), 10)], rows, index + 1, isFirstObj, isFirstCol_1 && !isLaststackedCol, isLaststackedCol, isMovable, tableName, true);\n                }\n            }\n        }\n        return rows;\n    };\n    HeaderRender.prototype.getStackedLockColsCount = function (col, lockColsCount) {\n        if (col.columns) {\n            for (var i = 0; i < col.columns.length; i++) {\n                lockColsCount = this.getStackedLockColsCount(col.columns[parseInt(i.toString(), 10)], lockColsCount);\n            }\n        }\n        else if (col.lockColumn) {\n            lockColsCount++;\n        }\n        return lockColsCount;\n    };\n    HeaderRender.prototype.getColSpan = function (colSpan, stackedLockColsCount) {\n        colSpan = !this.lockColsRendered ? stackedLockColsCount : colSpan - stackedLockColsCount;\n        return colSpan;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    HeaderRender.prototype.generateRow = function (index) {\n        return new _models_row__WEBPACK_IMPORTED_MODULE_7__.Row({});\n    };\n    HeaderRender.prototype.generateCell = function (column, cellType, rowSpan, className, rowIndex, colIndex) {\n        var opt = {\n            'visible': column.visible,\n            'isDataCell': false,\n            'isTemplate': !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.headerTemplate),\n            'rowID': '',\n            'column': column,\n            'cellType': cellType,\n            'rowSpan': rowSpan,\n            'className': className,\n            'index': rowIndex,\n            'colIndex': colIndex\n        };\n        if (!opt.rowSpan || opt.rowSpan < 2) {\n            delete opt.rowSpan;\n        }\n        return new _models_cell__WEBPACK_IMPORTED_MODULE_6__.Cell(opt);\n    };\n    /**\n     * Function to hide header table column based on visible property\n     *\n     * @param {Column[]} columns - specifies the column\n     * @returns {void}\n     */\n    HeaderRender.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        var displayVal;\n        var idx;\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[parseInt(c.toString(), 10)];\n            idx = gObj.getNormalizedColumnIndex(column.uid);\n            displayVal = column.visible ? '' : 'none';\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(this.getColGroup().children[parseInt(idx.toString(), 10)], { 'display': displayVal });\n            if (gObj.editSettings.showAddNewRow && gObj.element.querySelector('.e-addedrow')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setStyleAttribute)(gObj.element.querySelector('.e-addedrow').querySelector('colgroup').childNodes[parseInt(idx.toString(), 10)], { 'display': displayVal });\n            }\n        }\n        this.refreshUI();\n        if (this.parent.editSettings.showAddNewRow) {\n            this.parent.isAddNewRow = true;\n        }\n    };\n    HeaderRender.prototype.colPosRefresh = function () {\n        this.refreshUI();\n    };\n    /**\n     * Refresh the header of the Grid.\n     *\n     * @returns {void}\n     */\n    HeaderRender.prototype.refreshUI = function () {\n        var headerDiv = this.getPanel();\n        this.toggleStackClass(headerDiv);\n        var table = this.getTable();\n        var tableName = undefined;\n        if (table) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(table);\n            if (this.parent.editSettings.showAddNewRow && !this.parent.isAddNewRow && table.querySelector('.e-addedrow') &&\n                (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                (table.querySelector('.e-addedrow')).classList.add('e-addrow-removed');\n                this.parent.isAddNewRow = true;\n            }\n            table.removeChild(table.firstChild);\n            table.removeChild(table.childNodes[0]);\n            var colGroup = this.parent.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_3__.colGroup);\n            var findHeaderRow = this.createHeaderContent(tableName);\n            this.rows = findHeaderRow.rows;\n            table.insertBefore(findHeaderRow.thead, table.firstChild);\n            this.updateColGroup(colGroup);\n            table.insertBefore(this.setColGroup(colGroup), table.firstChild);\n            this.appendContent(table);\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.colGroupRefresh, {});\n            this.widthService.setWidthToColumns();\n            this.parent.updateDefaultCursor();\n            this.initializeHeaderDrag();\n            var rows = [].slice.call(headerDiv.querySelectorAll('tr.e-columnheader'));\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var row = rows_1[_i];\n                var gCells = [].slice.call(row.getElementsByClassName('e-grouptopleftcell'));\n                if (gCells.length) {\n                    gCells[gCells.length - 1].classList.add('e-lastgrouptopleftcell');\n                }\n            }\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.headerRefreshed, { rows: this.rows });\n            if (this.parent.enableColumnVirtualization && (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.parentsUntil)(table, _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.movableHeader)) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.headerRefreshed, { rows: this.rows, args: { isFrozen: false, isXaxis: true } });\n            }\n            if (this.parent.allowTextWrap && this.parent.textWrapSettings.wrapMode === 'Header') {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.wrap)(rows, true);\n            }\n        }\n        var firstHeaderCell = this.parent.getHeaderContent().querySelector('.e-headercell:not(.e-hide)');\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(firstHeaderCell)) {\n            firstHeaderCell.tabIndex = 0;\n        }\n    };\n    HeaderRender.prototype.toggleStackClass = function (div) {\n        var column = this.parent.columns;\n        var stackedHdr = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column) ? column.some(function (column) { return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.columns); })\n            : false);\n        if (stackedHdr) {\n            div.classList.add('e-stackedheader');\n        }\n        else {\n            div.classList.remove('e-stackedheader');\n        }\n    };\n    HeaderRender.prototype.appendContent = function (table) {\n        this.getPanel().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.headerContent).appendChild(table);\n    };\n    HeaderRender.prototype.getCellCnt = function (col, cnt) {\n        if (col.columns) {\n            for (var i = 0, len = col.columns.length; i < len; i++) {\n                cnt = this.getCellCnt(col.columns[parseInt(i.toString(), 10)], cnt);\n            }\n        }\n        else {\n            if (col.visible) {\n                cnt++;\n            }\n        }\n        return cnt;\n    };\n    HeaderRender.prototype.initializeHeaderDrag = function () {\n        var gObj = this.parent;\n        if (!(this.parent.allowReordering || (this.parent.allowGrouping && this.parent.groupSettings.showDropArea))) {\n            return;\n        }\n        this.draggable = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Draggable(gObj.getHeaderContent(), {\n            dragTarget: '.e-headercell',\n            distance: 5,\n            helper: this.helper,\n            dragStart: this.dragStart,\n            drag: this.drag,\n            dragStop: this.dragStop,\n            abort: '.e-rhandler',\n            isReplaceDragEle: this.isReplaceDragEle\n        });\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.destroy, this.droppableDestroy, this);\n    };\n    HeaderRender.prototype.initializeHeaderDrop = function () {\n        var gObj = this.parent;\n        this.droppable = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Droppable(gObj.getHeaderContent(), {\n            accept: '.e-dragclone',\n            drop: this.drop\n        });\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_2__.destroy, this.droppableDestroy, this);\n    };\n    HeaderRender.prototype.droppableDestroy = function () {\n        if (this.droppable && !this.droppable.isDestroyed) {\n            this.droppable.destroy();\n        }\n        if (this.draggable && !this.draggable.isDestroyed) {\n            this.draggable.destroy();\n        }\n    };\n    HeaderRender.prototype.renderCustomToolbar = function () {\n        var _this = this;\n        var gObj = this.parent;\n        if (gObj.rowRenderingMode === 'Vertical' && !gObj.toolbar\n            && (gObj.allowSorting || (gObj.allowFiltering && gObj.filterSettings.type !== 'FilterBar'))) {\n            var div = gObj.createElement('div', { className: 'e-res-toolbar e-toolbar' });\n            var toolbarItems = gObj.createElement('div', { className: 'e-toolbar-items' });\n            var toolbarLeft = gObj.createElement('div', { className: 'e-toolbar-left' });\n            var count = this.parent.allowFiltering && this.parent.allowSorting ? 2 : 1;\n            for (var i = 0; i < count; i++) {\n                var toolbarItem = gObj.createElement('div', { className: 'e-toolbar-item e-gridresponsiveicons e-icons e-tbtn-align' });\n                var cls = count === 1 ? this.parent.allowSorting ? 'sort'\n                    : 'filter' : i === 1 ? 'sort' : 'filter';\n                var button = gObj.createElement('button', { className: 'e-tbar-btn e-control e-btn e-lib e-icon-btn' });\n                var span = gObj.createElement('span', { className: 'e-btn-icon e-res' + cls + '-icon e-icons' });\n                button.appendChild(span);\n                var btnObj = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_8__.Button({\n                    cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n                });\n                btnObj.appendTo(button);\n                button.onclick = function (e) {\n                    if (e.target.classList.contains('e-ressort-btn')\n                        || e.target.classList.contains('e-ressort-icon') ||\n                        e.target.querySelector('.e-ressort-icon')) {\n                        _this.parent.showResponsiveCustomSort();\n                    }\n                    else {\n                        _this.parent.showResponsiveCustomFilter();\n                    }\n                };\n                toolbarItem.appendChild(button);\n                toolbarLeft.appendChild(toolbarItem);\n            }\n            toolbarItems.appendChild(toolbarLeft);\n            div.appendChild(toolbarItems);\n            gObj.element.insertBefore(div, this.parent.element.querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_3__.gridHeader));\n        }\n        else {\n            if (gObj.enableAdaptiveUI && !gObj.toolbar) {\n                gObj.getContent().classList.add('e-responsive-header');\n            }\n        }\n    };\n    HeaderRender.prototype.updateCustomResponsiveToolbar = function (args) {\n        var resToolbar = this.parent.element.querySelector('.e-responsive-toolbar');\n        if (args.module === 'toolbar') {\n            if (resToolbar) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(resToolbar);\n            }\n            else {\n                this.renderCustomToolbar();\n            }\n        }\n    };\n    return HeaderRender;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/indent-cell-renderer.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/indent-cell-renderer.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndentCellRenderer: () => (/* binding */ IndentCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n/**\n * IndentCellRenderer class which responsible for building group indent cell.\n *\n * @hidden\n */\nvar IndentCellRenderer = /** @class */ (function (_super) {\n    __extends(IndentCellRenderer, _super);\n    function IndentCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TD', { className: 'e-indentcell' });\n        return _this;\n    }\n    /**\n     * Function to render the indent cell\n     *\n     * @param  {Cell} cell - specifies the cell\n     * @param  {Object} data - specifies the data\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    IndentCellRenderer.prototype.render = function (cell, data) {\n        var node = this.element.cloneNode();\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_0__.setStyleAndAttributes)(node, cell.attributes);\n        return node;\n    };\n    return IndentCellRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_1__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9pbmRlbnQtY2VsbC1yZW5kZXJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0I7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ29EO0FBQ047QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELDJCQUEyQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE1BQU07QUFDdEIsZ0JBQWdCLFFBQVE7QUFDeEIsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFxQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsd0RBQVk7QUFDZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haV90cmF2ZWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9pbmRlbnQtY2VsbC1yZW5kZXJlci5qcz82YzI3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuaW1wb3J0IHsgc2V0U3R5bGVBbmRBdHRyaWJ1dGVzIH0gZnJvbSAnLi4vYmFzZS91dGlsJztcbmltcG9ydCB7IENlbGxSZW5kZXJlciB9IGZyb20gJy4vY2VsbC1yZW5kZXJlcic7XG4vKipcbiAqIEluZGVudENlbGxSZW5kZXJlciBjbGFzcyB3aGljaCByZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcgZ3JvdXAgaW5kZW50IGNlbGwuXG4gKlxuICogQGhpZGRlblxuICovXG52YXIgSW5kZW50Q2VsbFJlbmRlcmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhJbmRlbnRDZWxsUmVuZGVyZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSW5kZW50Q2VsbFJlbmRlcmVyKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZWxlbWVudCA9IF90aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdURCcsIHsgY2xhc3NOYW1lOiAnZS1pbmRlbnRjZWxsJyB9KTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byByZW5kZXIgdGhlIGluZGVudCBjZWxsXG4gICAgICpcbiAgICAgKiBAcGFyYW0gIHtDZWxsfSBjZWxsIC0gc3BlY2lmaWVzIHRoZSBjZWxsXG4gICAgICogQHBhcmFtICB7T2JqZWN0fSBkYXRhIC0gc3BlY2lmaWVzIHRoZSBkYXRhXG4gICAgICogQHJldHVybnMge0VsZW1lbnR9IHJldHVybnMgdGhlIGVsZW1lbnRcbiAgICAgKi9cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgSW5kZW50Q2VsbFJlbmRlcmVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoY2VsbCwgZGF0YSkge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMuZWxlbWVudC5jbG9uZU5vZGUoKTtcbiAgICAgICAgc2V0U3R5bGVBbmRBdHRyaWJ1dGVzKG5vZGUsIGNlbGwuYXR0cmlidXRlcyk7XG4gICAgICAgIHJldHVybiBub2RlO1xuICAgIH07XG4gICAgcmV0dXJuIEluZGVudENlbGxSZW5kZXJlcjtcbn0oQ2VsbFJlbmRlcmVyKSk7XG5leHBvcnQgeyBJbmRlbnRDZWxsUmVuZGVyZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/indent-cell-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/render.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/render.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Render: () => (/* binding */ Render)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/manager.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/query.js\");\n/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @syncfusion/ej2-data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-data@29.1.33/node_modules/@syncfusion/ej2-data/src/util.js\");\n/* harmony import */ var _services_value_formatter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../services/value-formatter */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _actions_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/data */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js\");\n/* harmony import */ var _models_column__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../models/column */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column.js\");\n/* harmony import */ var _models_row__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/row */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js\");\n/* harmony import */ var _models_cell__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../models/cell */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/cell.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _renderer_content_renderer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../renderer/content-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js\");\n/* harmony import */ var _renderer_header_renderer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../renderer/header-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-renderer.js\");\n/* harmony import */ var _renderer_cell_renderer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../renderer/cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\n/* harmony import */ var _renderer_header_cell_renderer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../renderer/header-cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-cell-renderer.js\");\n/* harmony import */ var _renderer_stacked_cell_renderer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../renderer/stacked-cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/stacked-cell-renderer.js\");\n/* harmony import */ var _renderer_indent_cell_renderer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../renderer/indent-cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/indent-cell-renderer.js\");\n/* harmony import */ var _renderer_caption_cell_renderer__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../renderer/caption-cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/caption-cell-renderer.js\");\n/* harmony import */ var _renderer_expand_cell_renderer__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../renderer/expand-cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/expand-cell-renderer.js\");\n/* harmony import */ var _renderer_header_indent_renderer__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../renderer/header-indent-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/header-indent-renderer.js\");\n/* harmony import */ var _renderer_detail_header_indent_renderer__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../renderer/detail-header-indent-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/detail-header-indent-renderer.js\");\n/* harmony import */ var _renderer_detail_expand_cell_renderer__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../renderer/detail-expand-cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/detail-expand-cell-renderer.js\");\n/* harmony import */ var _row_drag_drop_renderer__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./row-drag-drop-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-drag-drop-renderer.js\");\n/* harmony import */ var _renderer_row_drag_header_indent_render__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../renderer/row-drag-header-indent-render */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-drag-header-indent-render.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Content module is used to render grid content\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} locator - specifies the serviceLocator\n     */\n    function Render(parent, locator) {\n        this.emptyGrid = false;\n        this.counter = 0;\n        this.parent = parent;\n        this.locator = locator;\n        this.data = new _actions_data__WEBPACK_IMPORTED_MODULE_1__.Data(parent, locator);\n        this.l10n = locator.getService('localization');\n        this.ariaService = this.locator.getService('ariaService');\n        this.renderer = this.locator.getService('rendererFactory');\n        this.addEventListener();\n    }\n    /**\n     * To initialize grid header, content and footer rendering\n     *\n     * @returns {void}\n     */\n    Render.prototype.render = function () {\n        var gObj = this.parent;\n        this.headerRenderer = this.renderer.getRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.RenderType.Header);\n        this.contentRenderer = this.renderer.getRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.RenderType.Content);\n        this.headerRenderer.renderPanel();\n        this.contentRenderer.renderPanel();\n        if (gObj.getColumns().length) {\n            this.isLayoutRendered = true;\n            this.headerRenderer.renderTable();\n            this.contentRenderer.renderTable();\n            this.emptyRow(false);\n        }\n        this.parent.scrollModule.setWidth();\n        this.parent.scrollModule.setHeight();\n        if (this.parent.height !== 'auto') {\n            this.parent.scrollModule.setPadding();\n        }\n        this.refreshDataManager();\n    };\n    /**\n     * Refresh the entire Grid.\n     *\n     * @param {NotifyArgs} e - specifies the NotifyArgs\n     * @returns {void}\n     */\n    Render.prototype.refresh = function (e) {\n        var _this = this;\n        if (e === void 0) { e = { requestType: 'refresh' }; }\n        var gObj = this.parent;\n        gObj.notify(e.requestType + \"-begin\", e);\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionBegin, e, function (args) {\n            if (args === void 0) { args = { requestType: 'refresh' }; }\n            if (args.cancel) {\n                gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.cancelBegin, args);\n                if (args.action === 'clearFilter' && _this.parent.filterSettings.type === 'Menu') {\n                    _this.parent.filterSettings.columns[_this.parent.filterModule.filterObjIndex] = _this.parent.filterModule.prevFilterObject;\n                    var iconClass = _this.parent.showColumnMenu && _this.parent.filterModule['column'].showColumnMenu ? '.e-columnmenu' : '.e-icon-filter';\n                    var col = _this.parent.element.querySelector('[e-mappinguid=\"' + _this.parent.filterModule['column'].uid + '\"]').parentElement;\n                    var flIcon = col.querySelector(iconClass);\n                    if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.parent.filterModule.prevFilterObject)) {\n                        flIcon.classList.add('e-filtered');\n                    }\n                }\n                if (args.action === 'clear-filter' && (_this.parent.filterSettings.type === 'CheckBox' || _this.parent.filterSettings.type === 'Excel')) {\n                    _this.parent.filterSettings.columns = _this.parent.filterModule.checkboxPrevFilterObject;\n                }\n                if (args.requestType === 'grouping') {\n                    // Remove the dropped column name from groupsettings.columns if args.cancel is true\n                    var index = gObj.groupSettings.columns.indexOf(args.columnName);\n                    if (index !== -1) {\n                        gObj.setProperties({ groupSettings: { Columns: gObj.groupSettings.columns.splice(index, 1) } }, true);\n                        gObj.setProperties({ sortSettings: { Columns: gObj.sortSettings.columns.splice(index, 1) } }, true);\n                        var column = gObj.getColumnByField(args.columnName);\n                        var headerCell = gObj.getColumnHeaderByField(column.field);\n                        column.visible = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(headerCell) && !headerCell.classList.contains('e-hide'));\n                    }\n                }\n                return;\n            }\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.destroyEditForm, args);\n            if (args.requestType === 'virtualscroll' && (_this.parent.getDataModule().isRemote() || 'result' in _this.parent.dataSource)\n                && args.virtualInfo && args.virtualInfo.direction === 'down') {\n                _this.parent.contentModule.prevInfo = args.virtualInfo;\n            }\n            if (_this.parent.groupModule && args.preventFocusOnGroup) {\n                _this.parent.groupModule.preventFocusOnGroup = args.preventFocusOnGroup;\n            }\n            if (gObj.allowSelection && (args.action === 'clearFilter' || args.action === 'clear-filter' ||\n                (args.requestType === 'searching' && args.searchString === '') || args.action === 'add')) {\n                gObj.selectionModule['rmtHdrChkbxClicked'] = false;\n                if (gObj.selectionModule.isPartialSelection) {\n                    gObj.selectionModule['isHdrSelectAllClicked'] = false;\n                }\n            }\n            if (gObj.allowPaging && gObj.pageSettings.pageSizes && gObj.pagerModule.pagerObj.isAllPage &&\n                (args.action === 'add' && args.requestType === 'save') && gObj.pagerModule.pagerObj.checkAll) {\n                gObj.setProperties({ pageSettings: { pageSize: gObj.pageSettings.pageSize + 1 } }, true);\n            }\n            if (args.requestType === 'delete' && gObj.allowPaging) {\n                var dataLength = args.data.length;\n                var count = gObj.pageSettings.totalRecordsCount - dataLength;\n                var currentViewData = gObj.getCurrentViewRecords().length;\n                // eslint-disable-next-line max-len\n                if ((!(currentViewData - dataLength) && count && ((gObj.pageSettings.currentPage - 1) * gObj.pageSettings.pageSize) === count) || (count && count <= dataLength)) {\n                    gObj.prevPageMoving = true;\n                    gObj.setProperties({\n                        pageSettings: {\n                            totalRecordsCount: count, currentPage: Math.ceil(count / gObj.pageSettings.pageSize)\n                        }\n                    }, true);\n                    gObj.pagerModule.pagerObj.totalRecordsCount = count;\n                }\n            }\n            if (args.requestType === 'reorder' && _this.parent.dataSource && 'result' in _this.parent.dataSource) {\n                _this.contentRenderer.refreshContentRows(args);\n            }\n            else if ((args.requestType === 'paging' || args.requestType === 'columnstate' || args.requestType === 'reorder')\n                && _this.parent.groupSettings.enableLazyLoading && _this.parent.groupSettings.columns.length\n                && (_this.parent.enableVirtualization ? _this.parent.lazyLoadRender :\n                    _this.parent.contentModule).getGroupCache()[_this.parent.pageSettings.currentPage]) {\n                _this.contentRenderer.refreshContentRows(args);\n            }\n            else {\n                _this.refreshDataManager(args);\n            }\n        });\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.resetTemplates = function () {\n        var gObj = this.parent;\n        var gridColumns = gObj.getColumns();\n        if (gObj.detailTemplate) {\n            var detailTemplateID = gObj.element.id + 'detailTemplate';\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.blazorTemplates[\"\" + detailTemplateID] = [];\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(detailTemplateID, 'DetailTemplate');\n        }\n        if (gObj.groupSettings.captionTemplate) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(gObj.element.id + 'captionTemplate', 'CaptionTemplate');\n        }\n        if (gObj.rowTemplate) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(gObj.element.id + 'rowTemplate', 'RowTemplate');\n        }\n        if (gObj.toolbarTemplate) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(gObj.element.id + 'toolbarTemplate', 'ToolbarTemplate');\n        }\n        if (gObj.pageSettings.template) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(gObj.element.id + '_template', 'pageSettings');\n        }\n        for (var i = 0; i < gridColumns.length; i++) {\n            if (gridColumns[parseInt(i.toString(), 10)].template) {\n                _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.blazorTemplates[gObj.element.id + gridColumns[parseInt(i.toString(), 10)].uid] = [];\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(gObj.element.id + gridColumns[parseInt(i.toString(), 10)].uid, 'Template');\n            }\n            if (gridColumns[parseInt(i.toString(), 10)].headerTemplate) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(gObj.element.id + gridColumns[parseInt(i.toString(), 10)].uid + 'headerTemplate', 'HeaderTemplate');\n            }\n            if (gridColumns[parseInt(i.toString(), 10)].filterTemplate) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(gObj.element.id + gridColumns[parseInt(i.toString(), 10)].uid + 'filterTemplate', 'FilterTemplate');\n            }\n        }\n        var guid = 'guid';\n        for (var k = 0; k < gObj.aggregates.length; k++) {\n            for (var j = 0; j < gObj.aggregates[parseInt(k.toString(), 10)].columns.length; j++) {\n                if (gObj.aggregates[parseInt(k.toString(), 10)].columns[parseInt(j.toString(), 10)].footerTemplate) {\n                    var tempID = gObj.element.id + gObj.aggregates[parseInt(k.toString(), 10)].columns[parseInt(j.toString(), 10)][\"\" + guid] + 'footerTemplate';\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(tempID, 'FooterTemplate');\n                }\n                if (gObj.aggregates[parseInt(k.toString(), 10)].columns[parseInt(j.toString(), 10)].groupFooterTemplate) {\n                    var tempID = gObj.element.id + gObj.aggregates[parseInt(k.toString(), 10)].columns[parseInt(j.toString(), 10)][\"\" + guid] + 'groupFooterTemplate';\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(tempID, 'GroupFooterTemplate');\n                }\n                if (gObj.aggregates[parseInt(k.toString(), 10)].columns[parseInt(j.toString(), 10)].groupCaptionTemplate) {\n                    var tempID = gObj.element.id + gObj.aggregates[parseInt(k.toString(), 10)].columns[parseInt(j.toString(), 10)][\"\" + guid] + 'groupCaptionTemplate';\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.resetBlazorTemplate)(tempID, 'GroupCaptionTemplate');\n                }\n            }\n        }\n    };\n    Render.prototype.refreshComplete = function (e) {\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionComplete, e);\n    };\n    /**\n     * The function is used to refresh the dataManager\n     *\n     * @param {NotifyArgs} args - specifies the args\n     * @returns {void}\n     */\n    Render.prototype.refreshDataManager = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        var maskRow = (gObj.loadingIndicator.indicatorType === 'Shimmer' && args.requestType !== 'virtualscroll'\n            && args.requestType !== 'infiniteScroll') || ((args.requestType === 'virtualscroll' || args.requestType === 'infiniteScroll')\n            && gObj.enableVirtualMaskRow);\n        if (args.requestType !== 'virtualscroll' && !args.isCaptionCollapse && !maskRow) {\n            this.parent.showSpinner();\n        }\n        if (maskRow) {\n            gObj.showMaskRow(args.requestType === 'virtualscroll' ? args.virtualInfo.sentinelInfo.axis\n                : args.requestType === 'infiniteScroll' ? args.direction : undefined);\n        }\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.resetInfiniteBlocks, args);\n        this.emptyGrid = false;\n        var dataManager;\n        var isFActon = this.isNeedForeignAction();\n        this.ariaService.setBusy(this.parent.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_4__.content), true);\n        if (isFActon) {\n            var deffered = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Deferred();\n            dataManager = this.getFData(deffered, args);\n        }\n        if (!dataManager) {\n            if (gObj.allowPaging && !gObj.getDataModule().dataManager.dataSource.offline && gObj.pageSettings\n                && gObj.pageSettings.pageSizes && gObj.pagerModule && gObj.pagerModule.pagerObj && gObj.pagerModule.pagerObj.isAllPage) {\n                gObj.pagerModule.pagerObj.isAllPage = undefined;\n            }\n            dataManager = this.data.getData(args, this.data.generateQuery().requiresCount());\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            dataManager = dataManager.then(function (e) {\n                var query = _this.data.generateQuery().requiresCount();\n                if (_this.emptyGrid) {\n                    var def = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Deferred();\n                    def.resolve({ result: [], count: 0 });\n                    return def.promise;\n                }\n                return _this.data.getData(args, query);\n            });\n        }\n        var foreignKeyColumns = this.parent.getForeignKeyColumns();\n        var foreignKeyLength = foreignKeyColumns.length;\n        if (this.parent.columnQueryMode === 'ExcludeHidden' && foreignKeyLength) {\n            foreignKeyLength = foreignKeyColumns.filter(function (col) { return col.visible !== false; }).length;\n        }\n        if (foreignKeyLength && (!isFActon || this.parent.searchSettings.key.length)) {\n            var deffered_1 = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Deferred();\n            dataManager = dataManager.then(function (e) {\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.getForeignKeyData, { dataManager: dataManager, result: e, promise: deffered_1, action: args });\n                return deffered_1.promise;\n            });\n        }\n        if (this.parent.groupSettings.disablePageWiseAggregates && this.parent.groupSettings.columns.length) {\n            dataManager = dataManager.then(function (e) { return _this.validateGroupRecords(e); });\n        }\n        dataManager.then(function (e) { return _this.dataManagerSuccess(e, args); })\n            .catch(function (e) { return _this.dataManagerFailure(e, args); });\n    };\n    Render.prototype.getFData = function (deferred, args) {\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.getForeignKeyData, { isComplex: true, promise: deferred, action: args });\n        return deferred.promise;\n    };\n    Render.prototype.isNeedForeignAction = function () {\n        var gObj = this.parent;\n        return !!((gObj.allowFiltering && gObj.filterSettings.columns.length) ||\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.searchSettings.key) && gObj.searchSettings.key.length))\n            && this.foreignKey(this.parent.getForeignKeyColumns());\n    };\n    Render.prototype.foreignKey = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            var fbool = false;\n            fbool = _this.parent.filterSettings.columns.some(function (value) {\n                return col.uid === value.uid;\n            });\n            return !!(fbool || _this.parent.searchSettings.key.length);\n        });\n    };\n    Render.prototype.sendBulkRequest = function (args) {\n        var _this = this;\n        args.requestType = 'batchsave';\n        var gObj = this.parent;\n        if (gObj.allowPaging && gObj.pageSettings.pageSizes && gObj.pagerModule.pagerObj.isAllPage && gObj.pagerModule.pagerObj.checkAll) {\n            var dataLength = args['changes'].addedRecords.length;\n            if (dataLength) {\n                gObj.setProperties({ pageSettings: { pageSize: gObj.pageSettings.pageSize + dataLength } }, true);\n            }\n        }\n        if (gObj.allowPaging && (args.changes.addedRecords.length ||\n            args.changes.deletedRecords.length ||\n            args.changes.changedRecords.length) && gObj.pageSettings\n            && gObj.pageSettings.pageSizes && gObj.pagerModule && gObj.pagerModule.pagerObj\n            && !gObj.getDataModule().dataManager.dataSource.offline && gObj.pagerModule.pagerObj.isAllPage) {\n            gObj.pagerModule.pagerObj.isAllPage = undefined;\n        }\n        var promise = this.data.saveChanges(args.changes, this.parent.getPrimaryKeyFieldNames()[0], args.original);\n        var query = this.data.generateQuery().requiresCount();\n        if (this.data.dataManager.dataSource.offline) {\n            this.refreshDataManager({ requestType: 'batchsave' });\n            return;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            promise.then(function (e) {\n                _this.data.getData(args, query)\n                    .then(function (e) { return _this.dmSuccess(e, args); })\n                    .catch(function (e) { return _this.dmFailure(e, args); });\n            })\n                .catch(function (e) { return _this.dmFailure(e, args); });\n        }\n    };\n    Render.prototype.dmSuccess = function (e, args) {\n        this.dataManagerSuccess(e, args);\n    };\n    Render.prototype.dmFailure = function (e, args) {\n        this.dataManagerFailure(e, args);\n    };\n    /**\n     * Render empty row to Grid which is used at the time to represent to no records.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.renderEmptyRow = function () {\n        this.emptyRow(true);\n    };\n    Render.prototype.emptyRow = function (isTrigger) {\n        var gObj = this.parent;\n        var tbody = this.contentRenderer.getTable().querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_4__.tbody);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(tbody)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(tbody);\n        }\n        tbody = this.parent.createElement(_base_string_literals__WEBPACK_IMPORTED_MODULE_4__.tbody, { attrs: { role: 'rowgroup' } });\n        var spanCount = gObj.allowRowDragAndDrop && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.rowDropSettings.targetID) ? 1 : 0;\n        if (gObj.detailTemplate || gObj.childGrid) {\n            ++spanCount;\n        }\n        var className = gObj.editSettings.showAddNewRow && gObj.editSettings.newRowPosition === 'Bottom' ?\n            'e-emptyrow e-show-added-row' : 'e-emptyrow';\n        var tr = this.parent.createElement('tr', { className: className, attrs: { role: 'row' } });\n        var td;\n        if (gObj.emptyRecordTemplate) {\n            var emptyRecordTemplateID = gObj.element.id + 'emptyRecordTemplate';\n            td = this.parent.createElement('td', { attrs: { colspan: (gObj.getVisibleColumns().length +\n                        spanCount + gObj.groupSettings.columns.length).toString() } });\n            if (gObj.isVue || (gObj.parentDetails && gObj.parentDetails.parentInstObj && gObj.parentDetails.parentInstObj.isVue)) {\n                td.appendChild(gObj.getEmptyRecordTemplate()(gObj.dataSource, gObj, 'emptyRecordTemplate', emptyRecordTemplateID, undefined, undefined, undefined, this.parent['root'])[1]);\n            }\n            else {\n                td.appendChild(gObj.getEmptyRecordTemplate()(gObj.dataSource, gObj, 'emptyRecordTemplate', emptyRecordTemplateID, undefined, undefined, undefined, this.parent['root'])[0]);\n            }\n            if (gObj.isReact) {\n                this.parent.renderTemplates();\n            }\n        }\n        else {\n            td = this.parent.createElement('td', {\n                innerHTML: this.l10n.getConstant('EmptyRecord'),\n                attrs: { colspan: (gObj.getVisibleColumns().length + spanCount + (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(gObj.groupSettings.columns) ?\n                        gObj.groupSettings.columns.length : 0)).toString() }\n            });\n        }\n        if (gObj.isFrozenGrid()) {\n            td.classList.add('e-leftfreeze');\n            td.style.left = 0 + 'px';\n        }\n        if (gObj.frozenRows && gObj.element.querySelector('.e-frozenrow-border')) {\n            this.parent.element.querySelector('.e-frozenrow-border').classList.add('e-frozenrow-empty');\n        }\n        tr.appendChild(td);\n        tbody.appendChild(tr);\n        this.contentRenderer.renderEmpty(tbody);\n        if (isTrigger) {\n            if (!this.parent.isInitialLoad) {\n                this.parent.focusModule.setFirstFocusableTabIndex();\n            }\n            this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.dataBound, {});\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.onEmpty, { rows: [new _models_row__WEBPACK_IMPORTED_MODULE_6__.Row({ isDataRow: true, cells: [new _models_cell__WEBPACK_IMPORTED_MODULE_7__.Cell({ isDataCell: true, visible: true })] })] });\n            if (gObj.editSettings.showAddNewRow) {\n                gObj.addRecord();\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.showAddNewRowFocus, {});\n            }\n        }\n    };\n    Render.prototype.dynamicColumnChange = function () {\n        if (this.parent.getCurrentViewRecords().length) {\n            this.updateColumnType(this.parent.getCurrentViewRecords()[0]);\n        }\n    };\n    Render.prototype.updateColumnType = function (record) {\n        var columns = this.parent.getColumns();\n        var value;\n        var cFormat = 'customFormat';\n        var equalTo = 'equalTo';\n        var data = record && record.items ? record.items[0] : record;\n        var fmtr = this.locator.getService('valueFormatter');\n        for (var i = 0, len = columns.length; i < len; i++) {\n            value = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getObject)(columns[parseInt(i.toString(), 10)].field || '', data);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns[parseInt(i.toString(), 10)][\"\" + cFormat])) {\n                columns[parseInt(i.toString(), 10)].format = columns[parseInt(i.toString(), 10)][\"\" + cFormat];\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns[parseInt(i.toString(), 10)].validationRules)\n                && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(columns[parseInt(i.toString(), 10)].validationRules[\"\" + equalTo])) {\n                columns[parseInt(i.toString(), 10)].validationRules[\"\" + equalTo][0] = this.parent.element.id + columns[parseInt(i.toString(), 10)].validationRules[\"\" + equalTo][0];\n            }\n            if (columns[parseInt(i.toString(), 10)].isForeignColumn() && columns[parseInt(i.toString(), 10)].columnData) {\n                value = (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getObject)(columns[parseInt(i.toString(), 10)].foreignKeyValue || '', columns[parseInt(i.toString(), 10)].columnData[0]);\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n                this.isColTypeDef = true;\n                if (!columns[parseInt(i.toString(), 10)].type) {\n                    columns[parseInt(i.toString(), 10)].type = value.getDay ? (value.getHours() > 0 || value.getMinutes() > 0 ||\n                        value.getSeconds() > 0 || value.getMilliseconds() > 0 ? 'datetime' : 'date') : typeof (value);\n                }\n            }\n            else {\n                columns[parseInt(i.toString(), 10)].type = columns[parseInt(i.toString(), 10)].type || null;\n            }\n            var valueFormatter = new _services_value_formatter__WEBPACK_IMPORTED_MODULE_9__.ValueFormatter();\n            if (columns[parseInt(i.toString(), 10)].format && (columns[parseInt(i.toString(), 10)].format.skeleton\n                || (columns[parseInt(i.toString(), 10)].format.format &&\n                    typeof columns[parseInt(i.toString(), 10)].format.format === 'string'))) {\n                columns[parseInt(i.toString(), 10)].setFormatter(valueFormatter.getFormatFunction((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, columns[parseInt(i.toString(), 10)].format)));\n                columns[parseInt(i.toString(), 10)].setParser(valueFormatter.getParserFunction(columns[parseInt(i.toString(), 10)].format));\n            }\n            if (typeof (columns[parseInt(i.toString(), 10)].format) === 'string') {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.setFormatter)(this.locator, columns[parseInt(i.toString(), 10)]);\n            }\n            else if (!columns[parseInt(i.toString(), 10)].format && columns[parseInt(i.toString(), 10)].type === 'number') {\n                columns[parseInt(i.toString(), 10)].setParser(fmtr.getParserFunction({ format: 'n2' }));\n            }\n            if (columns[parseInt(i.toString(), 10)].type === 'dateonly' && !columns[parseInt(i.toString(), 10)].format) {\n                columns[parseInt(i.toString(), 10)].format = 'yMd';\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.setFormatter)(this.locator, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * @param {ReturnType} e - specifies the return type\n     * @param {NotifyArgs} args - specifies the Notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Render.prototype.dataManagerSuccess = function (e, args) {\n        var _this = this;\n        var gObj = this.parent;\n        this.contentRenderer = this.renderer.getRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.RenderType.Content);\n        this.headerRenderer = this.renderer.getRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.RenderType.Header);\n        e.actionArgs = args;\n        var detailGrid = gObj.childGrid || gObj.detailTemplate ? true : false;\n        var isInfiniteDelete = this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache &&\n            !gObj.groupSettings.enableLazyLoading && ((args.requestType === 'delete' && !detailGrid) || (args.requestType === 'save' &&\n            this.parent.infiniteScrollModule.requestType === 'add' && !(gObj.sortSettings.columns.length ||\n            gObj.filterSettings.columns.length || this.parent.groupSettings.columns.length || gObj.searchSettings.key || detailGrid)));\n        // tslint:disable-next-line:max-func-body-length\n        gObj.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.beforeDataBound, e, function (dataArgs) {\n            if (dataArgs.cancel) {\n                return;\n            }\n            dataArgs.result = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dataArgs.result) ? [] : dataArgs.result;\n            var len = Object.keys(dataArgs.result).length;\n            if (_this.parent.isDestroyed) {\n                return;\n            }\n            if ((!gObj.getColumns().length && !len) && !(gObj.columns.length && gObj.columns[0] instanceof _models_column__WEBPACK_IMPORTED_MODULE_10__.Column)) {\n                gObj.hideSpinner();\n                return;\n            }\n            if (_this.isInfiniteEnd(args) && !len) {\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.infiniteEditHandler, { e: args, result: e.result, count: e.count, agg: e.aggregates });\n                return;\n            }\n            _this.parent.isEdit = false;\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.editReset, {});\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.tooltipDestroy, {});\n            if (args && !((args.requestType === 'infiniteScroll' || args.requestType === 'delete' || args.action === 'add') &&\n                gObj.enableInfiniteScrolling)) {\n                _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.commandColumnDestroy, { type: 'refreshCommandColumn' });\n            }\n            _this.contentRenderer.prevCurrentView = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.parent.currentViewData) && _this.parent.currentViewData.slice();\n            gObj.currentViewData = dataArgs.result;\n            gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshInfiniteCurrentViewData, { args: args, data: dataArgs.result });\n            if (dataArgs.count && !gObj.allowPaging && (gObj.enableVirtualization || gObj.enableInfiniteScrolling)) {\n                gObj.totalDataRecordsCount = dataArgs.count;\n            }\n            if (!len && dataArgs.count && gObj.allowPaging && args && args.requestType !== 'delete') {\n                if (_this.parent.groupSettings.enableLazyLoading\n                    && (args.requestType === 'grouping' || args.requestType === 'ungrouping')) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.groupComplete, args);\n                }\n                gObj.prevPageMoving = true;\n                gObj.pageSettings.totalRecordsCount = dataArgs.count;\n                if (args.requestType !== 'paging') {\n                    gObj.pageSettings.currentPage = Math.ceil(dataArgs.count / gObj.pageSettings.pageSize);\n                }\n                gObj.dataBind();\n                return;\n            }\n            if ((!gObj.getColumns().length && len || !_this.isLayoutRendered) && !(0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(gObj)) {\n                gObj.removeMaskRow();\n                _this.updatesOnInitialRender(dataArgs);\n            }\n            if (!_this.isColTypeDef && gObj.getCurrentViewRecords()) {\n                if (_this.data.dataManager.dataSource.offline && gObj.dataSource && gObj.dataSource.length) {\n                    _this.updateColumnType(gObj.dataSource[0]);\n                }\n                else {\n                    _this.updateColumnType(gObj.getCurrentViewRecords()[0]);\n                }\n            }\n            if (!_this.parent.isInitialLoad && _this.parent.groupSettings.disablePageWiseAggregates &&\n                !_this.parent.groupSettings.columns.length) {\n                dataArgs.result = _this.parent.dataSource instanceof Array ? _this.parent.dataSource : _this.parent.currentViewData;\n            }\n            if ((_this.parent.isReact || _this.parent.isVue) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args) && args.requestType !== 'infiniteScroll' && !args.isFrozen) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.clearReactVueTemplates)(_this.parent, ['footerTemplate']);\n            }\n            if (_this.parent.isAngular && _this.parent.allowGrouping && _this.parent.groupSettings.captionTemplate\n                && !(!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args) && args.requestType === 'infiniteScroll')) {\n                _this.parent.destroyTemplate(['groupSettings_captionTemplate']);\n            }\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.dataReady, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({ count: dataArgs.count, result: dataArgs.result, aggregates: dataArgs.aggregates, loadSummaryOnEmpty: false }, args));\n            if ((gObj.groupSettings.columns.length || (args && args.requestType === 'ungrouping'))\n                && (args && args.requestType !== 'filtering')) {\n                _this.headerRenderer.refreshUI();\n            }\n            if (len) {\n                if ((0,_base_util__WEBPACK_IMPORTED_MODULE_8__.isGroupAdaptive)(gObj)) {\n                    var content = 'content';\n                    args.scrollTop = { top: _this.contentRenderer[\"\" + content].scrollTop };\n                }\n                if (!isInfiniteDelete) {\n                    if (_this.parent.enableImmutableMode) {\n                        _this.contentRenderer.immutableModeRendering(args);\n                    }\n                    else {\n                        _this.contentRenderer.refreshContentRows(args);\n                    }\n                }\n                else {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.infiniteEditHandler, { e: args, result: e.result, count: e.count, agg: e.aggregates });\n                }\n            }\n            else {\n                if (args && args.isCaptionCollapse) {\n                    return;\n                }\n                if (!gObj.getColumns().length) {\n                    gObj.element.innerHTML = '';\n                    alert(_this.l10n.getConstant('EmptyDataSourceError')); //ToDO: change this alert as dialog\n                    return;\n                }\n                _this.contentRenderer.setRowElements([]);\n                _this.contentRenderer.setRowObjects([]);\n                _this.ariaService.setBusy(_this.parent.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_4__.content), false);\n                gObj.removeMaskRow();\n                _this.renderEmptyRow();\n                if (gObj.enableColumnVirtualization && !len) {\n                    _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.contentReady, { rows: gObj.getRowsObject(), args: {} });\n                }\n                if (args) {\n                    var action = (args.requestType || '').toLowerCase() + '-complete';\n                    _this.parent.notify(action, args);\n                    if (args.requestType === 'batchsave') {\n                        args.cancel = false;\n                        args.rows = [];\n                        args.isFrozen = !args.isFrozen;\n                        _this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionComplete, args);\n                    }\n                }\n                if (_this.parent.autoFit) {\n                    _this.parent.preventAdjustColumns();\n                }\n                _this.parent.hideSpinner();\n            }\n            _this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.toolbarRefresh, {});\n            _this.setRowCount(_this.parent.getCurrentViewRecords().length);\n            if ('query' in e) {\n                _this.parent.getDataModule().isQueryInvokedFromData = false;\n            }\n        });\n    };\n    /**\n     * @param {object} e - specifies the object\n     * @param {Object[]} e.result - specifies the result\n     * @param {NotifyArgs} args - specifies the args\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.dataManagerFailure = function (e, args) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.contentModule)) {\n            this.ariaService.setOptions(this.parent.getContent().querySelector('.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_4__.content), { busy: false, invalid: true });\n            this.setRowCount(1);\n        }\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.actionFailure, e && e.error ? e : { error: e });\n        this.parent.hideSpinner();\n        this.parent.removeMaskRow();\n        if (args.requestType === 'save' || args.requestType === 'delete'\n            || args.name === 'bulk-save') {\n            return;\n        }\n        this.parent.currentViewData = [];\n        this.renderEmptyRow();\n        if (!this.parent.isInitialLoad) {\n            this.parent.focusModule.setFirstFocusableTabIndex();\n        }\n        this.parent.log('actionfailure', { error: e });\n    };\n    Render.prototype.setRowCount = function (dataRowCount) {\n        this.ariaService.setOptions(this.parent.element, {\n            rowcount: dataRowCount ? dataRowCount.toString() : '1'\n        });\n    };\n    Render.prototype.isInfiniteEnd = function (args) {\n        return this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache && args.requestType === 'delete';\n    };\n    Render.prototype.updatesOnInitialRender = function (e) {\n        this.isLayoutRendered = true;\n        var isEmptyCol = false;\n        if (this.parent.columns.length < 1) {\n            this.buildColumns(e.result[0]);\n            isEmptyCol = true;\n        }\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.prepareColumns)(this.parent.columns, null, this.parent);\n        if (isEmptyCol) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshSplitFrozenColumn, {});\n        }\n        this.headerRenderer.renderTable();\n        this.contentRenderer.renderTable();\n        this.parent.isAutoGen = true;\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_3__.autoCol, {});\n    };\n    Render.prototype.iterateComplexColumns = function (obj, field, split) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            var childKeys = typeof obj[keys[parseInt(i.toString(), 10)]] === 'object'\n                && obj[keys[parseInt(i.toString(), 10)]] && !(obj[keys[parseInt(i.toString(), 10)]] instanceof Date) ?\n                Object.keys(obj[keys[parseInt(i.toString(), 10)]]) : [];\n            if (childKeys.length) {\n                this.iterateComplexColumns(obj[keys[parseInt(i.toString(), 10)]], field + (keys[parseInt(i.toString(), 10)] + '.'), split);\n            }\n            else {\n                split[this.counter] = field + keys[parseInt(i.toString(), 10)];\n                this.counter++;\n            }\n        }\n    };\n    Render.prototype.buildColumns = function (record) {\n        var cols = [];\n        var complexCols = {};\n        this.iterateComplexColumns(record, '', complexCols);\n        var columns = Object.keys(complexCols).filter(function (e) { return complexCols[\"\" + e] !== 'BlazId'; }).\n            map(function (field) { return complexCols[\"\" + field]; });\n        for (var i = 0, len = columns.length; i < len; i++) {\n            cols[parseInt(i.toString(), 10)] = { 'field': columns[parseInt(i.toString(), 10)] };\n            if (this.parent.enableColumnVirtualization) {\n                cols[parseInt(i.toString(), 10)].width = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cols[parseInt(i.toString(), 10)].width) ?\n                    cols[parseInt(i.toString(), 10)].width : 200;\n            }\n        }\n        this.parent.setProperties({ 'columns': cols }, true);\n    };\n    Render.prototype.instantiateRenderer = function () {\n        this.renderer.addRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.RenderType.Header, new _renderer_header_renderer__WEBPACK_IMPORTED_MODULE_11__.HeaderRender(this.parent, this.locator));\n        this.renderer.addRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.RenderType.Content, new _renderer_content_renderer__WEBPACK_IMPORTED_MODULE_12__.ContentRender(this.parent, this.locator));\n        var cellrender = this.locator.getService('cellRendererFactory');\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Header, new _renderer_header_cell_renderer__WEBPACK_IMPORTED_MODULE_13__.HeaderCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Data, new _renderer_cell_renderer__WEBPACK_IMPORTED_MODULE_14__.CellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.StackedHeader, new _renderer_stacked_cell_renderer__WEBPACK_IMPORTED_MODULE_15__.StackedHeaderCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Indent, new _renderer_indent_cell_renderer__WEBPACK_IMPORTED_MODULE_16__.IndentCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.GroupCaption, new _renderer_caption_cell_renderer__WEBPACK_IMPORTED_MODULE_17__.GroupCaptionCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.GroupCaptionEmpty, new _renderer_caption_cell_renderer__WEBPACK_IMPORTED_MODULE_17__.GroupCaptionEmptyCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Expand, new _renderer_expand_cell_renderer__WEBPACK_IMPORTED_MODULE_18__.ExpandCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.HeaderIndent, new _renderer_header_indent_renderer__WEBPACK_IMPORTED_MODULE_19__.HeaderIndentCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.StackedHeader, new _renderer_stacked_cell_renderer__WEBPACK_IMPORTED_MODULE_15__.StackedHeaderCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.DetailHeader, new _renderer_detail_header_indent_renderer__WEBPACK_IMPORTED_MODULE_20__.DetailHeaderIndentCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.RowDragHIcon, new _renderer_row_drag_header_indent_render__WEBPACK_IMPORTED_MODULE_21__.RowDragDropHeaderRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.DetailExpand, new _renderer_detail_expand_cell_renderer__WEBPACK_IMPORTED_MODULE_22__.DetailExpandCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.DetailFooterIntent, new _renderer_indent_cell_renderer__WEBPACK_IMPORTED_MODULE_16__.IndentCellRenderer(this.parent, this.locator));\n        cellrender.addCellRenderer(_base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.RowDragIcon, new _row_drag_drop_renderer__WEBPACK_IMPORTED_MODULE_23__.RowDragDropRenderer(this.parent, this.locator));\n    };\n    Render.prototype.addEventListener = function () {\n        var _this = this;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.initialLoad, this.instantiateRenderer, this);\n        this.parent.on('refreshdataSource', this.dataManagerSuccess, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.modelChanged, this.refresh, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.refreshComplete, this.refreshComplete, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.bulkSave, this.sendBulkRequest, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.showEmptyGrid, function () { _this.emptyGrid = true; }, this);\n        this.parent.on(_base_constant__WEBPACK_IMPORTED_MODULE_3__.autoCol, this.dynamicColumnChange, this);\n    };\n    /**\n     * @param {ReturnType} e - specifies the Return type\n     * @returns {Promise<Object>} returns the object\n     * @hidden\n     */\n    Render.prototype.validateGroupRecords = function (e) {\n        var _this = this;\n        var index = e.result.length - 1;\n        if (index < 0) {\n            return Promise.resolve(e);\n        }\n        var group0 = e.result[0];\n        var groupN = e.result[parseInt(index.toString(), 10)];\n        var predicate = [];\n        var addWhere = function (input) {\n            var groups = [group0, groupN];\n            for (var i = 0; i < groups.length; i++) {\n                predicate.push(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_24__.Predicate('field', '==', groups[parseInt(i.toString(), 10)].field).and(_this.getPredicate('key', 'equal', groups[parseInt(i.toString(), 10)].key)));\n            }\n            input.where(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_24__.Predicate.or(predicate));\n        };\n        var query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_24__.Query();\n        addWhere(query);\n        var curDm = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(e.result);\n        var curFilter = curDm.executeLocal(query);\n        var newQuery = this.data.generateQuery(true);\n        var rPredicate = [];\n        if (this.data.isRemote()) {\n            var groups = [group0, groupN];\n            for (var i = 0; i < groups.length; i++) {\n                rPredicate.push(this.getPredicate(groups[parseInt(i.toString(), 10)].field, 'equal', groups[parseInt(i.toString(), 10)].key));\n            }\n            newQuery.where(_syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_24__.Predicate.or(rPredicate));\n        }\n        else {\n            addWhere(newQuery);\n        }\n        var deferred = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.Deferred();\n        this.data.getData({}, newQuery).then(function (r) {\n            _this.updateGroupInfo(curFilter, r.result);\n            deferred.resolve(e);\n        }).catch(function (e) { return deferred.reject(e); });\n        return deferred.promise;\n    };\n    /**\n     * @param {string} key - Defines the key\n     * @param {string} operator - Defines the operator\n     * @param {string | number | Date} value - Defines the value\n     * @returns {Predicate} - Returns the predicate\n     * @hidden */\n    Render.prototype.getPredicate = function (key, operator, value) {\n        if (value instanceof Date) {\n            return (0,_base_util__WEBPACK_IMPORTED_MODULE_8__.getDatePredicate)({ field: key, operator: operator, value: value });\n        }\n        return new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_24__.Predicate(key, operator, value);\n    };\n    /**\n     * @param {Object[]} current - Defines the current object\n     * @param {Object[]} untouched - Defines the object needs to merge\n     * @returns {Object[]} - Returns the updated group information\n     * @hidden */\n    Render.prototype.updateGroupInfo = function (current, untouched) {\n        var dm = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_5__.DataManager(untouched);\n        var elements = current;\n        for (var i = 0; i < elements.length; i++) {\n            var updatedGroup = dm.executeLocal(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_24__.Query()\n                .where(new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_24__.Predicate('field', '==', elements[parseInt(i.toString(), 10)].field).and(this.getPredicate('key', 'equal', elements[parseInt(i.toString(), 10)].key))))[0];\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(updatedGroup)) {\n                elements[parseInt(i.toString(), 10)].count = updatedGroup.count;\n                var itemGroup = elements[parseInt(i.toString(), 10)].items;\n                var updatedGroupItem = updatedGroup.items;\n                if (itemGroup.GroupGuid) {\n                    elements[parseInt(i.toString(), 10)].items =\n                        this.updateGroupInfo(elements[parseInt(i.toString(), 10)].items, updatedGroup.items);\n                }\n                var rows = this.parent.aggregates;\n                for (var j = 0; j < rows.length; j++) {\n                    var row = rows[parseInt(j.toString(), 10)];\n                    for (var k = 0; k < row.columns.length; k++) {\n                        var column = row.columns[parseInt(k.toString(), 10)];\n                        var types = column.type instanceof Array ? (column.type) : [(column.type)];\n                        for (var l = 0; l < types.length; l++) {\n                            var key = column.field + ' - ' + types[parseInt(l.toString(), 10)].toLowerCase();\n                            var data = itemGroup.level ? updatedGroupItem.records : updatedGroup.items;\n                            var context = this.parent;\n                            if (types[parseInt(l.toString(), 10)] === 'Custom') {\n                                var data_1 = itemGroup.level ? updatedGroupItem : updatedGroup;\n                                var temp = column\n                                    .customAggregate;\n                                if (typeof temp === 'string') {\n                                    temp = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(temp, window);\n                                }\n                                elements[parseInt(i.toString(), 10)].aggregates[\"\" + key] = temp ? temp.call(context, data_1, row.columns[parseInt(k.toString(), 10)]) : '';\n                            }\n                            else {\n                                elements[parseInt(i.toString(), 10)].aggregates[\"\" + key] = _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_25__.DataUtil.aggregates[types[parseInt(l.toString(), 10)].toLowerCase()](data, row.columns[parseInt(k.toString(), 10)].field);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return current;\n    };\n    return Render;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/render.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/responsive-dialog-renderer.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/responsive-dialog-renderer.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponsiveDialogRenderer: () => (/* binding */ ResponsiveDialogRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-popups */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-popups@29.1.37/node_modules/@syncfusion/ej2-popups/src/dialog/dialog.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-buttons@29.1.34/node_modules/@syncfusion/ej2-buttons/src/button/button.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n\n\n\n\n\n\n/**\n *\n * The `ResponsiveDialogRenderer` module is used to render the responsive dialogs.\n */\nvar ResponsiveDialogRenderer = /** @class */ (function () {\n    function ResponsiveDialogRenderer(parent, serviceLocator) {\n        this.sortedCols = [];\n        this.sortPredicate = [];\n        /** @hidden */\n        this.isCustomDialog = false;\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.addEventListener();\n    }\n    ResponsiveDialogRenderer.prototype.addEventListener = function () {\n        this.evtHandlers = [{ event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.filterDialogClose, handler: this.closeCustomDialog },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.refreshCustomFilterOkBtn, handler: this.refreshCustomFilterOkBtn },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.renderResponsiveCmenu, handler: this.renderResponsiveContextMenu },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.filterCmenuSelect, handler: this.renderCustomFilterDiv },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.customFilterClose, handler: this.customExFilterClose },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_1__.refreshCustomFilterClearBtn, handler: this.refreshCustomFilterClearBtn }];\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveEventListener)(this.parent, this.evtHandlers, true, this);\n        this.onActionCompleteFn = this.editComplate.bind(this);\n        this.parent.addEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_1__.actionComplete, this.onActionCompleteFn);\n    };\n    ResponsiveDialogRenderer.prototype.customExFilterClose = function () {\n        this.isCustomDlgRender = false;\n    };\n    ResponsiveDialogRenderer.prototype.renderCustomFilterDiv = function () {\n        var header = this.customResponsiveDlg.element.querySelector('.e-dlg-header-content');\n        var title = header.querySelector('.e-dlg-custom-header');\n        var closeBtn = header.querySelector('.e-dlg-closeicon-btn');\n        this.isCustomDlgRender = true;\n        this.parent.filterModule.filterModule.closeDialog();\n        this.saveBtn.element.style.display = '';\n        this.refreshCustomFilterOkBtn({ disabled: false });\n        this.backBtn.element.style.display = 'none';\n        closeBtn.style.display = '';\n        title.innerHTML = this.parent.localeObj.getConstant('CustomFilter');\n        var content = this.customResponsiveDlg.element.querySelector('.e-dlg-content');\n        this.customExcelFilterParent = this.parent.createElement('div', { className: 'e-xl-customfilterdiv e-default-filter' });\n        content.appendChild(this.customExcelFilterParent);\n    };\n    ResponsiveDialogRenderer.prototype.renderResponsiveContextMenu = function (args) {\n        if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter) {\n            var content = this.customResponsiveDlg.element.querySelector('.e-dlg-content');\n            var header = this.customResponsiveDlg.element.querySelector('.e-dlg-header-content');\n            var closeBtn = header.querySelector('.e-dlg-closeicon-btn');\n            var text = header.querySelector('.e-dlg-custom-header');\n            if (args.isOpen) {\n                content.firstChild.style.display = 'none';\n                content.appendChild(args.target);\n                closeBtn.style.display = 'none';\n                this.saveBtn.element.style.display = 'none';\n                this.filterClearBtn.element.style.display = 'none';\n                text.innerHTML = args.header;\n                var backBtn = this.parent.createElement('button');\n                var span = this.parent.createElement('span', { className: 'e-btn-icon e-resfilterback e-icons' });\n                backBtn.appendChild(span);\n                this.backBtn = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_4__.Button({\n                    cssClass: this.parent.cssClass ? 'e-res-back-btn' + ' ' + this.parent.cssClass : 'e-res-back-btn'\n                });\n                this.backBtn.appendTo(backBtn);\n                text.parentElement.insertBefore(backBtn, text);\n            }\n            else if (this.backBtn && !this.isCustomDlgRender) {\n                content.firstChild.style.display = '';\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(this.backBtn.element);\n                closeBtn.style.display = '';\n                this.saveBtn.element.style.display = '';\n                if (this.isFiltered) {\n                    this.filterClearBtn.element.style.display = '';\n                }\n                text.innerHTML = this.getHeaderTitle({ action: _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter }, args.col);\n            }\n        }\n    };\n    ResponsiveDialogRenderer.prototype.refreshCustomFilterClearBtn = function (args) {\n        if (this.filterClearBtn) {\n            this.isFiltered = args.isFiltered;\n            this.filterClearBtn.element.style.display = args.isFiltered ? '' : 'none';\n        }\n    };\n    ResponsiveDialogRenderer.prototype.refreshCustomFilterOkBtn = function (args) {\n        if (this.saveBtn) {\n            this.saveBtn.disabled = args.disabled;\n        }\n        if (this.parent.columnChooserModule && this.parent.columnChooserModule.responsiveDialogRenderer.saveBtn) {\n            this.parent.columnChooserModule.responsiveDialogRenderer.saveBtn.disabled = args.disabled;\n        }\n    };\n    ResponsiveDialogRenderer.prototype.columnMenuResponsiveContent = function (str, locale, disabled) {\n        var cDiv = this.parent.createElement('div', { className: 'e-responsivecoldiv e-responsive' + str.toLowerCase() + 'div' + (disabled ? ' e-disabled' : '') });\n        var span = this.parent.createElement('span', { className: 'e-icons e-res' + str.toLowerCase() + '-icon e-btn-icon' });\n        var icon = this.parent.createElement('span', { innerHTML: locale, className: 'e-rescolumn-menu e-res-header-text' });\n        cDiv.appendChild(span);\n        cDiv.appendChild(icon);\n        this.customColumnDiv.appendChild(cDiv);\n    };\n    ResponsiveDialogRenderer.prototype.renderResponsiveContent = function (col, column) {\n        var _this = this;\n        var gObj = this.parent;\n        var isColumnChooser = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser;\n        if (col || isColumnChooser) {\n            this.filterParent = this.parent.createElement('div', { className: (isColumnChooser ? 'e-maincolumnchooserdiv ' : '') + 'e-mainfilterdiv e-default-filter',\n                id: (isColumnChooser ? 'columchooser' : col.uid) + '-main-filter' });\n            return this.filterParent;\n        }\n        else {\n            this.customColumnDiv = gObj.createElement('div', { className: 'columndiv columnmenudiv' });\n            this.customColumnDiv.style.width = '100%';\n            if (this.parent.showColumnMenu && this.parent.rowRenderingMode === 'Horizontal' && this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColMenu) {\n                this.columnMenuResponsiveContent('AutoFitAll', gObj.localeObj.getConstant('AutoFitAll'));\n                this.columnMenuResponsiveContent('AutoFit', gObj.localeObj.getConstant('AutoFit'));\n                if (column.allowGrouping && gObj.allowGrouping) {\n                    this.columnMenuResponsiveContent('Group', gObj.localeObj.getConstant('Group'), gObj.groupSettings.columns.indexOf(column.field) >= 0);\n                    this.columnMenuResponsiveContent('UnGroup', gObj.localeObj.getConstant('Ungroup'), gObj.groupSettings.columns.indexOf(column.field) < 0);\n                }\n                if (column.allowSorting && gObj.allowSorting) {\n                    var direction = 'None';\n                    var sortColumns = this.parent.sortSettings.columns;\n                    for (var i = 0; i < sortColumns.length; i++) {\n                        if (sortColumns[parseInt(i.toString(), 10)].field === column.field) {\n                            direction = sortColumns[parseInt(i.toString(), 10)].direction;\n                            break;\n                        }\n                    }\n                    this.columnMenuResponsiveContent('ascending', gObj.localeObj.getConstant('SortAscending'), direction === 'Ascending');\n                    this.columnMenuResponsiveContent('descending', gObj.localeObj.getConstant('SortDescending'), direction === 'Descending');\n                }\n                if (gObj.showColumnChooser) {\n                    this.columnMenuResponsiveContent('Column', gObj.localeObj.getConstant('Columnchooser'));\n                }\n                if (column.allowFiltering && gObj.allowFiltering) {\n                    this.columnMenuResponsiveContent('Filter', gObj.localeObj.getConstant('FilterMenu'));\n                }\n            }\n            else {\n                var cols = gObj.getColumns();\n                var sortBtnParent = gObj.createElement('div', { className: 'e-ressortbutton-parent' });\n                var filteredCols = [];\n                var isSort = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort;\n                var isFilter = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter;\n                if (isFilter) {\n                    for (var i = 0; i < gObj.filterSettings.columns.length; i++) {\n                        filteredCols.push(gObj.filterSettings.columns[parseInt(i.toString(), 10)].field);\n                    }\n                }\n                for (var i = 0; i < cols.length; i++) {\n                    if (!cols[parseInt(i.toString(), 10)].visible || (!cols[parseInt(i.toString(), 10)].allowSorting && isSort)\n                        || (!cols[parseInt(i.toString(), 10)].allowFiltering && isFilter)) {\n                        continue;\n                    }\n                    var cDiv = gObj.createElement('div', { className: 'e-responsivecoldiv' });\n                    cDiv.setAttribute('data-e-mappingname', cols[parseInt(i.toString(), 10)].field);\n                    cDiv.setAttribute('data-e-mappinguid', cols[parseInt(i.toString(), 10)].uid);\n                    var span = gObj.createElement('span', { innerHTML: cols[parseInt(i.toString(), 10)].headerText, className: 'e-res-header-text' });\n                    cDiv.appendChild(span);\n                    this.customColumnDiv.appendChild(cDiv);\n                    if (isSort) {\n                        var fields = this.getSortedFieldsAndDirections('field');\n                        var index = fields.indexOf(cols[parseInt(i.toString(), 10)].field);\n                        var button = gObj.createElement('button', { id: gObj.element.id + cols[parseInt(i.toString(), 10)].field + 'sortbutton' });\n                        var clone = sortBtnParent.cloneNode();\n                        clone.appendChild(button);\n                        cDiv.appendChild(clone);\n                        var btnObj = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_4__.Button({\n                            cssClass: this.parent.cssClass ? 'e-ressortbutton' + ' ' + this.parent.cssClass : 'e-ressortbutton'\n                        });\n                        btnObj.appendTo(button);\n                        var buttonInnerText = void 0;\n                        if ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.sortSettings.columns[parseInt(index.toString(), 10)]))) {\n                            buttonInnerText = (this.parent.sortSettings.columns[parseInt(index.toString(), 10)].direction === 'Ascending') ?\n                                this.parent.localeObj.getConstant('AscendingText') : this.parent.localeObj.getConstant('DescendingText');\n                        }\n                        button.innerHTML = index > -1 ? buttonInnerText : this.parent.localeObj.getConstant('NoneText');\n                        button.onclick = function (e) {\n                            _this.sortButtonClickHandler(e.target);\n                        };\n                    }\n                    if (isFilter && filteredCols.indexOf(cols[parseInt(i.toString(), 10)].field) > -1) {\n                        var divIcon = gObj.createElement('div', { className: 'e-icons e-res-icon e-filtersetdiv' });\n                        var iconSpan = gObj.createElement('span', { className: 'e-icons e-res-icon e-filterset' });\n                        iconSpan.setAttribute('colType', cols[parseInt(i.toString(), 10)].type);\n                        divIcon.appendChild(iconSpan);\n                        cDiv.appendChild(divIcon);\n                    }\n                }\n            }\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.customColumnDiv, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? 'touchend' : 'click', this.customFilterColumnClickHandler, this);\n            return this.customColumnDiv;\n        }\n    };\n    ResponsiveDialogRenderer.prototype.getSortedFieldsAndDirections = function (name) {\n        var fields = [];\n        for (var i = 0; i < this.parent.sortSettings.columns.length; i++) {\n            fields.push(this.parent.sortSettings.columns[parseInt(i.toString(), 10)][\"\" + name]);\n        }\n        return fields;\n    };\n    ResponsiveDialogRenderer.prototype.sortButtonClickHandler = function (target) {\n        if (target) {\n            var columndiv = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsivecoldiv');\n            var field = columndiv.getAttribute('data-e-mappingname');\n            if (!this.parent.allowMultiSorting) {\n                this.sortPredicate = [];\n                this.sortedCols = [];\n                this.isSortApplied = false;\n                this.resetSortButtons(target);\n            }\n            var txt = target.textContent;\n            var directionTxt = txt === this.parent.localeObj.getConstant('NoneText') ? this.parent.localeObj.getConstant('AscendingText')\n                : txt === this.parent.localeObj.getConstant('AscendingText') ? this.parent.localeObj.getConstant('DescendingText')\n                    : this.parent.localeObj.getConstant('NoneText');\n            var direction = directionTxt === this.parent.localeObj.getConstant('AscendingText') ? 'Ascending'\n                : directionTxt === this.parent.localeObj.getConstant('DescendingText') ? 'Descending' : 'None';\n            target.innerHTML = directionTxt;\n            this.setSortedCols(field, direction);\n        }\n    };\n    ResponsiveDialogRenderer.prototype.resetSortButtons = function (target) {\n        var buttons = [].slice.call(this.customColumnDiv.getElementsByClassName('e-ressortbutton'));\n        for (var i = 0; i < buttons.length; i++) {\n            if (buttons[parseInt(i.toString(), 10)] !== target) {\n                buttons[parseInt(i.toString(), 10)].innerHTML = this.parent.localeObj.getConstant('NoneText');\n            }\n        }\n    };\n    ResponsiveDialogRenderer.prototype.setSortedCols = function (field, direction) {\n        var fields = this.getCurrentSortedFields();\n        var index = fields.indexOf(field);\n        if (this.parent.allowMultiSorting && index > -1) {\n            this.sortedCols.splice(index, 1);\n            this.sortPredicate.splice(index, 1);\n        }\n        this.isSortApplied = true;\n        if (direction !== 'None') {\n            this.sortedCols.push(field);\n            this.sortPredicate.push({ field: field, direction: direction });\n        }\n    };\n    ResponsiveDialogRenderer.prototype.getCurrentSortedFields = function () {\n        var fields = [];\n        for (var i = 0; i < this.sortedCols.length; i++) {\n            fields.push(this.sortedCols[parseInt(i.toString(), 10)]);\n        }\n        return fields;\n    };\n    ResponsiveDialogRenderer.prototype.customFilterColumnClickHandler = function (e) {\n        var gObj = this.parent;\n        var target = e.target;\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'columnmenudiv') && this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColMenu && !(0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-disabled')) {\n            var column = this.menuCol ? this.menuCol : this.filteredCol;\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsiveautofitalldiv')) {\n                gObj.autoFitColumns([]);\n                this.closeCustomFilter();\n            }\n            else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsiveautofitdiv')) {\n                gObj.autoFitColumns(column.field);\n                this.closeCustomFilter();\n            }\n            else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsivegroupdiv')) {\n                gObj.groupColumn(column.field);\n                this.closeCustomFilter();\n            }\n            else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsiveungroupdiv')) {\n                gObj.ungroupColumn(column.field);\n                this.closeCustomFilter();\n            }\n            else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsiveascendingdiv')) {\n                gObj.sortColumn(column.field, 'Ascending');\n                this.closeCustomFilter();\n            }\n            else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsivedescendingdiv')) {\n                gObj.sortColumn(column.field, 'Descending');\n                this.closeCustomFilter();\n            }\n            else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsivecolumndiv')) {\n                gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.renderResponsiveChangeAction, { action: 5 });\n                gObj.showResponsiveCustomColumnChooser();\n            }\n            else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsivefilterdiv')) {\n                gObj.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.renderResponsiveChangeAction, { action: 3 });\n                this.isRowResponsive = true;\n                this.isCustomDialog = false;\n                if (gObj.filterModule) {\n                    gObj.filterModule.responsiveDialogRenderer.showResponsiveDialog(column);\n                }\n            }\n            e.preventDefault();\n        }\n        if (this.action !== _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter) {\n            return;\n        }\n        if (gObj.filterSettings.type !== 'FilterBar') {\n            if (target.classList.contains('e-responsivecoldiv') || target.parentElement.classList.contains('e-responsivecoldiv')) {\n                var field = target.getAttribute('data-e-mappingname');\n                if (!field) {\n                    field = target.parentElement.getAttribute('data-e-mappingname');\n                }\n                if (field) {\n                    var col = gObj.getColumnByField(field);\n                    this.isRowResponsive = true;\n                    this.showResponsiveDialog(col);\n                }\n            }\n            else if (target.classList.contains('e-filterset') || target.parentElement.classList.contains('e-filtersetdiv')) {\n                var colDiv = (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(target, 'e-responsivecoldiv');\n                if (colDiv) {\n                    var field = colDiv.getAttribute('data-e-mappingname');\n                    var col = gObj.getColumnByField(field);\n                    if (col.filter.type === 'Menu' || (!col.filter.type && gObj.filterSettings.type === 'Menu')) {\n                        this.isDialogClose = true;\n                    }\n                    this.parent.filterModule.filterModule.clearCustomFilter(col);\n                    this.removeCustomDlgFilterEle(target);\n                }\n            }\n        }\n    };\n    /**\n     * Function to show the responsive dialog\n     *\n     * @param {Column} col - specifies the filter column\n     * @param {Column} column - specifies the menu column\n     * @returns {void}\n     */\n    ResponsiveDialogRenderer.prototype.showResponsiveDialog = function (col, column) {\n        if ((this.isCustomDialog && this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter && !this.isRowResponsive) ||\n            (column && this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColMenu)) {\n            this.menuCol = column;\n            this.renderCustomFilterDialog(null, column);\n        }\n        else {\n            this.filteredCol = col;\n            this.renderResponsiveDialog(col);\n            if (this.parent.enableAdaptiveUI && col) {\n                this.parent.filterModule.setFilterModel(col);\n                this.parent.filterModule.filterModule.openDialog(this.parent.filterModule.createOptions(col, undefined));\n            }\n            if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.renderResponsiveColumnChooserDiv, { action: 'open' });\n            }\n            if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort) {\n                var args = {\n                    cancel: false, dialogObj: this.customResponsiveDlg, requestType: 'beforeOpenAptiveSortDialog'\n                };\n                this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.beforeOpenAdaptiveDialog, args);\n                if (args.cancel) {\n                    return;\n                }\n            }\n            this.customResponsiveDlg.show(true);\n            this.customResponsiveDlg.element.style.maxHeight = '100%';\n            this.setTopToChildDialog(this.customResponsiveDlg.element);\n            if (this.parent.enableAdaptiveUI && this.parent.filterSettings && (this.parent.filterSettings.type === 'CheckBox'\n                || this.parent.filterSettings.type === 'Excel') && this.parent.filterSettings.enableInfiniteScrolling\n                && this.parent.filterSettings.loadingIndicator === 'Shimmer') {\n                var filterBase = this.parent.filterSettings.type === 'CheckBox' ? this.parent.filterModule.filterModule.checkBoxBase : this.parent.filterModule.filterModule.excelFilterBase;\n                filterBase.showMask();\n            }\n        }\n    };\n    ResponsiveDialogRenderer.prototype.setTopToChildDialog = function (dialogEle) {\n        var child = dialogEle.querySelector('.e-dialog');\n        if (child) {\n            var top_1 = dialogEle.querySelector('.e-dlg-header-content').getBoundingClientRect().height;\n            child.style.top = top_1 + 'px';\n        }\n    };\n    ResponsiveDialogRenderer.prototype.renderCustomFilterDialog = function (col, column) {\n        var gObj = this.parent;\n        var isColMenu = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColMenu;\n        if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter && gObj.filterSettings.type === 'FilterBar') {\n            return;\n        }\n        var colMenu = isColMenu ? 'e-customcolumnmenudiv ' : '';\n        var outerDiv = this.parent.createElement('div', {\n            id: gObj.element.id + (isColMenu ? 'customcolumnmenu' : 'customfilter'),\n            className: this.parent.cssClass ? colMenu +\n                'e-customfilterdiv e-responsive-dialog ' + this.parent.cssClass : colMenu + 'e-customfilterdiv e-responsive-dialog'\n        });\n        this.parent.element.appendChild(outerDiv);\n        this.customFilterDlg = this.getDialogOptions(col, true, null, column);\n        var args = {\n            cancel: false, dialogObj: this.customFilterDlg, requestType: 'beforeOpenAptiveFilterDialog'\n        };\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_1__.beforeOpenAdaptiveDialog, args);\n        if (args.cancel) {\n            return;\n        }\n        this.customFilterDlg.appendTo(outerDiv);\n        this.customFilterDlg.show(true);\n        this.customFilterDlg.element.style.maxHeight = '100%';\n    };\n    ResponsiveDialogRenderer.prototype.getDialogOptions = function (col, isCustomFilter, id, column) {\n        var options = new _syncfusion_ej2_popups__WEBPACK_IMPORTED_MODULE_5__.Dialog({\n            isModal: true,\n            showCloseIcon: (id === 'columnchooser' && this.parent.columnChooserSettings.headerTemplate &&\n                !this.parent.enableColumnVirtualization) ? false : true,\n            closeOnEscape: false,\n            locale: this.parent.locale,\n            target: this.parent.adaptiveDlgTarget ? this.parent.adaptiveDlgTarget : document.body,\n            visible: false,\n            enableRtl: this.parent.enableRtl,\n            content: this.renderResponsiveContent(col, column),\n            open: this.dialogOpen.bind(this),\n            created: this.dialogCreated.bind(this),\n            close: this.beforeDialogClose.bind(this),\n            width: '100%',\n            height: '100%',\n            animationSettings: { effect: 'None' },\n            cssClass: this.parent.cssClass ? this.parent.cssClass : ''\n        });\n        var isStringTemplate = 'isStringTemplate';\n        options[\"\" + isStringTemplate] = true;\n        if (isCustomFilter) {\n            options.header = this.renderResponsiveHeader(col, undefined, true);\n            var colMenu = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColMenu ? 'e-customcolumnmenu ' : '';\n            options.cssClass = colMenu + 'e-customfilter';\n        }\n        else {\n            options.header = this.renderResponsiveHeader(col);\n            options.cssClass = this.parent.rowRenderingMode === 'Vertical' && this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter\n                ? 'e-res' + id + ' e-row-responsive-filter' : 'e-res' + id;\n        }\n        return options;\n    };\n    ResponsiveDialogRenderer.prototype.renderResponsiveDialog = function (col) {\n        var gObj = this.parent;\n        if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter && gObj.filterSettings.type === 'FilterBar') {\n            return;\n        }\n        var id = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter ? 'filter' : 'sort';\n        id = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser ? 'columnchooser' : id;\n        var outerDiv = this.parent.createElement('div', {\n            id: gObj.element.id + 'responsive' + id,\n            className: this.parent.cssClass ?\n                'e-res' + id + 'div e-responsive-dialog ' + this.parent.cssClass : 'e-res' + id + 'div e-responsive-dialog'\n        });\n        this.parent.element.appendChild(outerDiv);\n        this.customResponsiveDlg = this.getDialogOptions(col, false, id);\n        this.customResponsiveDlg.appendTo(outerDiv);\n    };\n    ResponsiveDialogRenderer.prototype.dialogCreated = function () {\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addBiggerDialog)(this.parent);\n    };\n    ResponsiveDialogRenderer.prototype.dialogOpen = function () {\n        if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort && this.parent.allowMultiSorting) {\n            for (var i = 0; i < this.parent.sortSettings.columns.length; i++) {\n                this.sortedCols.push(this.parent.sortSettings.columns[parseInt(i.toString(), 10)].field);\n                var sortField = this.parent.sortSettings.columns[parseInt(i.toString(), 10)].field;\n                var sortDirection = this.parent.sortSettings.columns[parseInt(i.toString(), 10)].direction;\n                this.sortPredicate.push({ field: sortField, direction: sortDirection });\n            }\n        }\n    };\n    ResponsiveDialogRenderer.prototype.beforeDialogClose = function (args) {\n        this.isDialogClose = args.element && !args.element.querySelector('.e-xl-customfilterdiv')\n            && args.element.classList.contains('e-resfilterdiv');\n        if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter) {\n            if (args.element.classList.contains('e-resfilterdiv')) {\n                this.parent.filterModule.filterModule.closeResponsiveDialog(this.isCustomDlgRender);\n            }\n            else if (args.element.classList.contains('e-customfilterdiv')) {\n                this.closeCustomFilter();\n            }\n            if (this.parent.rowRenderingMode === 'Horizontal' && this.parent.showColumnMenu) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.renderResponsiveChangeAction, { action: 4 });\n                var custom = document.querySelector('.e-resfilter');\n                if (custom) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(custom);\n                }\n            }\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort) {\n            this.closeCustomDialog();\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColMenu) {\n            this.closeCustomFilter();\n            var custom = document.querySelector('.e-rescolummenu');\n            if (custom) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(custom);\n            }\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.renderResponsiveColumnChooserDiv, { action: 'clear' });\n            var custom = document.querySelector('.e-rescolumnchooser');\n            if (custom) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(custom);\n            }\n            if (this.parent.rowRenderingMode === 'Horizontal' && this.parent.showColumnMenu) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.renderResponsiveChangeAction, { action: 4 });\n            }\n            this.isCustomDialog = false;\n            this.isDialogClose = false;\n        }\n        this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.enterKeyHandler, this.keyHandler);\n    };\n    ResponsiveDialogRenderer.prototype.sortColumn = function () {\n        if (!this.isSortApplied) {\n            this.closeCustomDialog();\n            return;\n        }\n        if (this.sortPredicate.length) {\n            this.parent.setProperties({ sortSettings: { columns: [] } }, true);\n        }\n        for (var i = 0; i < this.sortPredicate.length; i++) {\n            this.parent.sortColumn(this.sortPredicate[parseInt(i.toString(), 10)].field, this.sortPredicate[parseInt(i.toString(), 10)].direction, this.parent.allowMultiSorting);\n        }\n        if (!this.sortPredicate.length) {\n            this.parent.clearSorting();\n        }\n        this.closeCustomDialog();\n    };\n    ResponsiveDialogRenderer.prototype.getHeaderTitle = function (args, col) {\n        var gObj = this.parent;\n        var title;\n        if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isEdit) {\n            title = gObj.localeObj.getConstant('EditFormTitle') + args.primaryKeyValue[0];\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isAdd) {\n            title = gObj.localeObj.getConstant('AddFormTitle');\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter) {\n            title = col ? col.headerText || col.field : gObj.localeObj.getConstant('FilterTitle');\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort) {\n            title = gObj.localeObj.getConstant('Sort');\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColMenu) {\n            title = gObj.localeObj.getConstant('ColumnMenu');\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser) {\n            title = gObj.localeObj.getConstant('ChooseColumns');\n        }\n        return title;\n    };\n    ResponsiveDialogRenderer.prototype.getDialogName = function (action) {\n        var name;\n        if (action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isAdd || action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isEdit) {\n            name = 'dialogEdit_wrapper_title';\n        }\n        else if (action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter) {\n            name = 'responsive_filter_dialog_wrapper';\n        }\n        else if (action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser) {\n            name = 'responsive_column_chooser_dialog_wrapper';\n        }\n        return name;\n    };\n    ResponsiveDialogRenderer.prototype.getButtonText = function (action) {\n        var text;\n        if (action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isAdd || action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isEdit) {\n            text = 'Save';\n        }\n        else if (action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter || this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort ||\n            action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser || this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser) {\n            text = 'OKButton';\n        }\n        return text;\n    };\n    /**\n     * Function to render the responsive header\n     *\n     * @param {Column} col - specifies the column\n     * @param {ResponsiveDialogArgs} args - specifies the responsive dialog arguments\n     * @param {boolean} isCustomFilter - specifies whether it is custom filter or not\n     * @returns {HTMLElement | string} returns the html element or string\n     */\n    ResponsiveDialogRenderer.prototype.renderResponsiveHeader = function (col, args, isCustomFilter) {\n        var _this = this;\n        var gObj = this.parent;\n        gObj.on(_base_constant__WEBPACK_IMPORTED_MODULE_1__.enterKeyHandler, this.keyHandler, this);\n        var id = gObj.element.id + this.getDialogName(this.action);\n        if (this.parent.columnChooserSettings.headerTemplate && !this.parent.enableColumnVirtualization &&\n            this.getHeaderTitle(args, col) === gObj.localeObj.getConstant('ChooseColumns')) {\n            var headerTempteElement = this.parent.columnChooserModule.renderHeader();\n            return headerTempteElement;\n        }\n        var header = gObj.createElement('div', { className: 'e-res-custom-element' });\n        var titleDiv = gObj.createElement('div', { className: 'e-dlg-custom-header', id: id });\n        titleDiv.innerHTML = this.getHeaderTitle(args, col);\n        header.appendChild(titleDiv);\n        var saveBtn = gObj.createElement('button');\n        if (!isCustomFilter) {\n            this.saveBtn = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_4__.Button({\n                cssClass: this.parent.cssClass ?\n                    'e-primary e-flat e-res-apply-btn' + ' ' + this.parent.cssClass : 'e-primary e-flat e-res-apply-btn'\n            });\n            saveBtn.innerHTML = gObj.localeObj.getConstant(this.getButtonText(this.action));\n            this.saveBtn.appendTo(saveBtn);\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            saveBtn.onclick = function (e) {\n                _this.dialogHdrBtnClickHandler();\n            };\n        }\n        var isSort = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort;\n        var isFilter = this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter;\n        if (isFilter || isSort) {\n            var id_1 = isSort ? 'sort' : 'filter';\n            var clearBtn = gObj.createElement('button');\n            this.filterClearBtn = new _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_4__.Button({\n                cssClass: this.parent.cssClass ? 'e-primary e-flat e-res-' + id_1 + '-clear-btn' + ' ' + this.parent.cssClass\n                    : 'e-primary e-flat e-res-' + id_1 + '-clear-btn'\n            });\n            if (isFilter) {\n                var span = gObj.createElement('span', { className: 'e-btn-icon e-icon-filter-clear e-icons' });\n                clearBtn.appendChild(span);\n            }\n            else {\n                clearBtn.innerHTML = gObj.localeObj.getConstant('Clear');\n            }\n            header.appendChild(clearBtn);\n            this.filterClearBtn.appendTo(clearBtn);\n            clearBtn.onclick = function (e) {\n                if (((0,_base_util__WEBPACK_IMPORTED_MODULE_2__.parentsUntil)(e.target, 'e-customfilter'))) {\n                    _this.parent.filterModule.clearFiltering();\n                    _this.removeCustomDlgFilterEle();\n                }\n                else {\n                    if (isFilter) {\n                        _this.filterClear();\n                    }\n                    else {\n                        _this.resetSortButtons();\n                        _this.sortedCols = [];\n                        _this.sortPredicate = [];\n                        _this.isSortApplied = true;\n                    }\n                }\n            };\n            header.appendChild(clearBtn);\n        }\n        if (!isCustomFilter) {\n            header.appendChild(saveBtn);\n        }\n        return header;\n    };\n    ResponsiveDialogRenderer.prototype.filterClear = function () {\n        this.parent.filterModule.filterModule.clearCustomFilter(this.filteredCol);\n        this.parent.filterModule.filterModule.closeResponsiveDialog();\n    };\n    ResponsiveDialogRenderer.prototype.removeCustomFilterElement = function () {\n        var elem = document.getElementById(this.parent.element.id + 'customcolumnmenu');\n        if (elem) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(elem);\n            var custom = document.querySelector('.e-customfilter');\n            if (custom) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(custom);\n            }\n        }\n        var custommenu = document.querySelector('.e-rescolumnchooser');\n        if (custommenu) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(custommenu);\n        }\n    };\n    /**\n     * Function to close the Responsive Column Chooser dialog.\n     * @returns {void}\n     * @hidden\n     */\n    ResponsiveDialogRenderer.prototype.hideResponsiveColumnChooser = function () {\n        var columnChooserElement = document.querySelector('.e-rescolumnchooser');\n        if (columnChooserElement) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(columnChooserElement);\n            this.isCustomDialog = false;\n            this.isDialogClose = false;\n        }\n    };\n    ResponsiveDialogRenderer.prototype.dialogHdrBtnClickHandler = function () {\n        if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isEdit || this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isAdd) {\n            this.parent.endEdit();\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter) {\n            this.parent.filterModule.filterModule.applyCustomFilter({ col: this.filteredCol, isCustomFilter: this.isCustomDlgRender });\n            this.removeCustomFilterElement();\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort) {\n            this.sortColumn();\n            this.removeCustomFilterElement();\n        }\n        else if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isColumnChooser) {\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.renderResponsiveColumnChooserDiv, { action: 'confirm' });\n            this.removeCustomFilterElement();\n            this.isCustomDialog = false;\n            this.isDialogClose = false;\n        }\n    };\n    ResponsiveDialogRenderer.prototype.closeCustomDialog = function () {\n        if (this.isCustomDlgRender) {\n            var mainfilterdiv = this.customResponsiveDlg.element.querySelector('.e-mainfilterdiv');\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(mainfilterdiv);\n            return;\n        }\n        this.isRowResponsive = false;\n        this.isCustomDlgRender = false;\n        this.destroyCustomFilterDialog();\n    };\n    ResponsiveDialogRenderer.prototype.destroyCustomFilterDialog = function () {\n        if (!this.customResponsiveDlg) {\n            return;\n        }\n        var elem = document.getElementById(this.customResponsiveDlg.element.id);\n        if (this.customResponsiveDlg && !this.customResponsiveDlg.isDestroyed && elem) {\n            this.customResponsiveDlg.destroy();\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(elem);\n        }\n        this.closeCustomFilter();\n        if (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isSort) {\n            this.sortPredicate = [];\n            this.sortedCols = [];\n            this.isSortApplied = false;\n        }\n    };\n    ResponsiveDialogRenderer.prototype.closeCustomFilter = function () {\n        if (!this.isDialogClose && this.customFilterDlg) {\n            var customEle = document.getElementById(this.customFilterDlg.element.id);\n            if (this.customFilterDlg && !this.customFilterDlg.isDestroyed && customEle) {\n                this.customFilterDlg.destroy();\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(customEle);\n            }\n        }\n        this.isCustomDialog = false;\n        this.isDialogClose = false;\n    };\n    ResponsiveDialogRenderer.prototype.removeCustomDlgFilterEle = function (target) {\n        if (target) {\n            if (target.parentElement.classList.contains('e-filtersetdiv')) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(target.parentElement);\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(target);\n            }\n        }\n        else {\n            var child = this.customColumnDiv.children;\n            for (var i = 0; i < child.length; i++) {\n                target = child[parseInt(i.toString(), 10)].querySelector('.e-filtersetdiv');\n                if (target) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.remove)(target);\n                    i--;\n                }\n            }\n        }\n    };\n    ResponsiveDialogRenderer.prototype.keyHandler = function (e) {\n        if (e.keyCode === 13 && ((this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isFilter\n            && e.target.classList.contains('e-searchinput'))\n            || (this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isEdit || this.action === _base_enum__WEBPACK_IMPORTED_MODULE_3__.ResponsiveDialogAction.isAdd))) {\n            this.dialogHdrBtnClickHandler();\n        }\n    };\n    ResponsiveDialogRenderer.prototype.editComplate = function (args) {\n        if (args.requestType === 'save' || args.requestType === 'cancel') {\n            this.parent.off(_base_constant__WEBPACK_IMPORTED_MODULE_1__.enterKeyHandler, this.keyHandler);\n        }\n    };\n    ResponsiveDialogRenderer.prototype.removeEventListener = function () {\n        if (this.customColumnDiv) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.customColumnDiv, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice ? 'touchend' : 'click', this.customFilterColumnClickHandler);\n        }\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_2__.addRemoveEventListener)(this.parent, this.evtHandlers, true, this);\n        this.parent.removeEventListener(_base_constant__WEBPACK_IMPORTED_MODULE_1__.actionComplete, this.onActionCompleteFn);\n    };\n    return ResponsiveDialogRenderer;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/responsive-dialog-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-drag-drop-renderer.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-drag-drop-renderer.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RowDragDropRenderer: () => (/* binding */ RowDragDropRenderer)\n/* harmony export */ });\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n/**\n * ExpandCellRenderer class which responsible for building group expand cell.\n *\n * @hidden\n */\nvar RowDragDropRenderer = /** @class */ (function (_super) {\n    __extends(RowDragDropRenderer, _super);\n    function RowDragDropRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TD', {\n            className: 'e-rowdragdrop e-rowdragdropcell',\n            attrs: { tabindex: '-1', role: 'gridcell' }\n        });\n        return _this;\n    }\n    /**\n     * Function to render the detail expand cell\n     *\n     * @param {Cell<Column>} cell - specifies the cell\n     * @param {Object} data - specifies the data\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    RowDragDropRenderer.prototype.render = function (cell, data) {\n        var nodeElement = this.element.cloneNode();\n        nodeElement.appendChild(this.parent.createElement('div', {\n            className: 'e-icons e-rowcelldrag e-dtdiagonalright e-icon-rowdragicon',\n            attrs: { 'aria-hidden': 'true' }\n        }));\n        if (cell.isSelected) {\n            nodeElement.classList.add('e-selectionbackground');\n            nodeElement.classList.add('e-active');\n        }\n        if (this.parent.getVisibleFrozenRightCount() || this.parent.getVisibleFrozenLeftCount()) {\n            nodeElement.classList.add('e-leftfreeze');\n            var width = this.parent.getFrozenMode() === 'Right' ? 0 : this.parent.groupSettings.columns.length * 30;\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_0__.applyStickyLeftRightPosition)(nodeElement, width, this.parent.enableRtl, this.parent.getFrozenMode() === 'Right' ? 'Right' : 'Left');\n        }\n        return nodeElement;\n    };\n    return RowDragDropRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_1__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9yb3ctZHJhZy1kcm9wLXJlbmRlcmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3QjtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDOEM7QUFDYTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3RUFBNEI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsd0RBQVk7QUFDaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haV90cmF2ZWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9yb3ctZHJhZy1kcm9wLXJlbmRlcmVyLmpzPzZhMjgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXIgfSBmcm9tICcuL2NlbGwtcmVuZGVyZXInO1xuaW1wb3J0IHsgYXBwbHlTdGlja3lMZWZ0UmlnaHRQb3NpdGlvbiB9IGZyb20gJy4uL2Jhc2UvdXRpbCc7XG4vKipcbiAqIEV4cGFuZENlbGxSZW5kZXJlciBjbGFzcyB3aGljaCByZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcgZ3JvdXAgZXhwYW5kIGNlbGwuXG4gKlxuICogQGhpZGRlblxuICovXG52YXIgUm93RHJhZ0Ryb3BSZW5kZXJlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUm93RHJhZ0Ryb3BSZW5kZXJlciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBSb3dEcmFnRHJvcFJlbmRlcmVyKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZWxlbWVudCA9IF90aGlzLnBhcmVudC5jcmVhdGVFbGVtZW50KCdURCcsIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogJ2Utcm93ZHJhZ2Ryb3AgZS1yb3dkcmFnZHJvcGNlbGwnLFxuICAgICAgICAgICAgYXR0cnM6IHsgdGFiaW5kZXg6ICctMScsIHJvbGU6ICdncmlkY2VsbCcgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byByZW5kZXIgdGhlIGRldGFpbCBleHBhbmQgY2VsbFxuICAgICAqXG4gICAgICogQHBhcmFtIHtDZWxsPENvbHVtbj59IGNlbGwgLSBzcGVjaWZpZXMgdGhlIGNlbGxcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSAtIHNwZWNpZmllcyB0aGUgZGF0YVxuICAgICAqIEByZXR1cm5zIHtFbGVtZW50fSByZXR1cm5zIHRoZSBlbGVtZW50XG4gICAgICovXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgIFJvd0RyYWdEcm9wUmVuZGVyZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIChjZWxsLCBkYXRhKSB7XG4gICAgICAgIHZhciBub2RlRWxlbWVudCA9IHRoaXMuZWxlbWVudC5jbG9uZU5vZGUoKTtcbiAgICAgICAgbm9kZUVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5wYXJlbnQuY3JlYXRlRWxlbWVudCgnZGl2Jywge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiAnZS1pY29ucyBlLXJvd2NlbGxkcmFnIGUtZHRkaWFnb25hbHJpZ2h0IGUtaWNvbi1yb3dkcmFnaWNvbicsXG4gICAgICAgICAgICBhdHRyczogeyAnYXJpYS1oaWRkZW4nOiAndHJ1ZScgfVxuICAgICAgICB9KSk7XG4gICAgICAgIGlmIChjZWxsLmlzU2VsZWN0ZWQpIHtcbiAgICAgICAgICAgIG5vZGVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Utc2VsZWN0aW9uYmFja2dyb3VuZCcpO1xuICAgICAgICAgICAgbm9kZUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZS1hY3RpdmUnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wYXJlbnQuZ2V0VmlzaWJsZUZyb3plblJpZ2h0Q291bnQoKSB8fCB0aGlzLnBhcmVudC5nZXRWaXNpYmxlRnJvemVuTGVmdENvdW50KCkpIHtcbiAgICAgICAgICAgIG5vZGVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2UtbGVmdGZyZWV6ZScpO1xuICAgICAgICAgICAgdmFyIHdpZHRoID0gdGhpcy5wYXJlbnQuZ2V0RnJvemVuTW9kZSgpID09PSAnUmlnaHQnID8gMCA6IHRoaXMucGFyZW50Lmdyb3VwU2V0dGluZ3MuY29sdW1ucy5sZW5ndGggKiAzMDtcbiAgICAgICAgICAgIGFwcGx5U3RpY2t5TGVmdFJpZ2h0UG9zaXRpb24obm9kZUVsZW1lbnQsIHdpZHRoLCB0aGlzLnBhcmVudC5lbmFibGVSdGwsIHRoaXMucGFyZW50LmdldEZyb3plbk1vZGUoKSA9PT0gJ1JpZ2h0JyA/ICdSaWdodCcgOiAnTGVmdCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub2RlRWxlbWVudDtcbiAgICB9O1xuICAgIHJldHVybiBSb3dEcmFnRHJvcFJlbmRlcmVyO1xufShDZWxsUmVuZGVyZXIpKTtcbmV4cG9ydCB7IFJvd0RyYWdEcm9wUmVuZGVyZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-drag-drop-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-drag-header-indent-render.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-drag-header-indent-render.js ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RowDragDropHeaderRenderer: () => (/* binding */ RowDragDropHeaderRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n/**\n * DetailHeaderIndentCellRenderer class which responsible for building detail header indent cell.\n *\n * @hidden\n */\nvar RowDragDropHeaderRenderer = /** @class */ (function (_super) {\n    __extends(RowDragDropHeaderRenderer, _super);\n    function RowDragDropHeaderRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TH', { className: 'e-rowdragheader' });\n        return _this;\n    }\n    /**\n     * Function to render the detail indent cell\n     *\n     * @param  {Cell} cell - specifies the cell\n     * @param  {Object} data - specifies the data\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    RowDragDropHeaderRenderer.prototype.render = function (cell, data) {\n        var node = this.element.cloneNode();\n        node.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-emptycell' }));\n        if (this.parent.getVisibleFrozenRightCount() || this.parent.getVisibleFrozenLeftCount()) {\n            node.classList.add('e-leftfreeze');\n            var width = this.parent.getFrozenMode() === 'Right' ? 0 : this.parent.groupSettings.columns.length * 30;\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.applyStickyLeftRightPosition)(node, width, this.parent.enableRtl, this.parent.getFrozenMode() === 'Right' ? 'Right' : 'Left');\n        }\n        return node;\n    };\n    return RowDragDropHeaderRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_2__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9yb3ctZHJhZy1oZWFkZXItaW5kZW50LXJlbmRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNvRDtBQUNOO0FBQ2E7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELDhCQUE4QjtBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE1BQU07QUFDdEIsZ0JBQWdCLFFBQVE7QUFDeEIsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsbUVBQWEsVUFBVSwwQkFBMEI7QUFDMUU7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3RUFBNEI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLENBQUMsd0RBQVk7QUFDdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haV90cmF2ZWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9yZW5kZXJlci9yb3ctZHJhZy1oZWFkZXItaW5kZW50LXJlbmRlci5qcz81NTBmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuaW1wb3J0IHsgY3JlYXRlRWxlbWVudCB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1iYXNlJztcbmltcG9ydCB7IENlbGxSZW5kZXJlciB9IGZyb20gJy4vY2VsbC1yZW5kZXJlcic7XG5pbXBvcnQgeyBhcHBseVN0aWNreUxlZnRSaWdodFBvc2l0aW9uIH0gZnJvbSAnLi4vYmFzZS91dGlsJztcbi8qKlxuICogRGV0YWlsSGVhZGVySW5kZW50Q2VsbFJlbmRlcmVyIGNsYXNzIHdoaWNoIHJlc3BvbnNpYmxlIGZvciBidWlsZGluZyBkZXRhaWwgaGVhZGVyIGluZGVudCBjZWxsLlxuICpcbiAqIEBoaWRkZW5cbiAqL1xudmFyIFJvd0RyYWdEcm9wSGVhZGVyUmVuZGVyZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFJvd0RyYWdEcm9wSGVhZGVyUmVuZGVyZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUm93RHJhZ0Ryb3BIZWFkZXJSZW5kZXJlcigpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmVsZW1lbnQgPSBfdGhpcy5wYXJlbnQuY3JlYXRlRWxlbWVudCgnVEgnLCB7IGNsYXNzTmFtZTogJ2Utcm93ZHJhZ2hlYWRlcicgfSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcmVuZGVyIHRoZSBkZXRhaWwgaW5kZW50IGNlbGxcbiAgICAgKlxuICAgICAqIEBwYXJhbSAge0NlbGx9IGNlbGwgLSBzcGVjaWZpZXMgdGhlIGNlbGxcbiAgICAgKiBAcGFyYW0gIHtPYmplY3R9IGRhdGEgLSBzcGVjaWZpZXMgdGhlIGRhdGFcbiAgICAgKiBAcmV0dXJucyB7RWxlbWVudH0gcmV0dXJucyB0aGUgZWxlbWVudFxuICAgICAqL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICBSb3dEcmFnRHJvcEhlYWRlclJlbmRlcmVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoY2VsbCwgZGF0YSkge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXMuZWxlbWVudC5jbG9uZU5vZGUoKTtcbiAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChjcmVhdGVFbGVtZW50KCdkaXYnLCB7IGNsYXNzTmFtZTogJ2UtZW1wdHljZWxsJyB9KSk7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudC5nZXRWaXNpYmxlRnJvemVuUmlnaHRDb3VudCgpIHx8IHRoaXMucGFyZW50LmdldFZpc2libGVGcm96ZW5MZWZ0Q291bnQoKSkge1xuICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCdlLWxlZnRmcmVlemUnKTtcbiAgICAgICAgICAgIHZhciB3aWR0aCA9IHRoaXMucGFyZW50LmdldEZyb3plbk1vZGUoKSA9PT0gJ1JpZ2h0JyA/IDAgOiB0aGlzLnBhcmVudC5ncm91cFNldHRpbmdzLmNvbHVtbnMubGVuZ3RoICogMzA7XG4gICAgICAgICAgICBhcHBseVN0aWNreUxlZnRSaWdodFBvc2l0aW9uKG5vZGUsIHdpZHRoLCB0aGlzLnBhcmVudC5lbmFibGVSdGwsIHRoaXMucGFyZW50LmdldEZyb3plbk1vZGUoKSA9PT0gJ1JpZ2h0JyA/ICdSaWdodCcgOiAnTGVmdCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub2RlO1xuICAgIH07XG4gICAgcmV0dXJuIFJvd0RyYWdEcm9wSGVhZGVyUmVuZGVyZXI7XG59KENlbGxSZW5kZXJlcikpO1xuZXhwb3J0IHsgUm93RHJhZ0Ryb3BIZWFkZXJSZW5kZXJlciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-drag-header-indent-render.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-renderer.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-renderer.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RowRenderer: () => (/* binding */ RowRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _cell_merge_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cell-merge-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-merge-renderer.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n\n/**\n * RowRenderer class which responsible for building row content.\n *\n * @hidden\n */\nvar RowRenderer = /** @class */ (function () {\n    function RowRenderer(serviceLocator, cellType, parent) {\n        this.isSpan = false;\n        this.cellType = cellType;\n        this.serviceLocator = serviceLocator;\n        this.parent = parent;\n        this.element = this.parent.createElement('tr', { attrs: { role: 'row' } });\n    }\n    /* eslint-disable */\n    /**\n     * Function to render the row content based on Column[] and data.\n     *\n     * @param {Row<T>} row - specifies the row\n     * @param {Column[]} columns - specifies the columns\n     * @param {Object} attributes - specifies the attributes\n     * @param {string} rowTemplate - specifies the rowTemplate\n     * @param {Element} cloneNode - specifies the cloneNode\n     * @returns {Element} returns the element\n     */\n    /* eslint-enable */\n    RowRenderer.prototype.render = function (row, columns, attributes, rowTemplate, cloneNode) {\n        return this.refreshRow(row, columns, attributes, rowTemplate, cloneNode);\n    };\n    /* eslint-disable */\n    /**\n     * Function to refresh the row content based on Column[] and data.\n     *\n     * @param {Row<T>} row - specifies the row\n     * @param {Column[]} columns - specifies the column\n     * @param {boolean} isChanged - specifies isChanged\n     * @param {Object} attributes - specifies the attributes\n     * @param {string} rowTemplate - specifies the rowTemplate\n     * @returns {void}\n     */\n    /* eslint-enable */\n    RowRenderer.prototype.refresh = function (row, columns, isChanged, attributes, rowTemplate) {\n        var _this = this;\n        if (isChanged) {\n            row.data = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.extendObjWithFn)({}, row.changes);\n            this.refreshMergeCells(row);\n        }\n        var node = this.parent.element.querySelector('[data-uid=' + row.uid + ']');\n        var tr = this.refreshRow(row, columns, attributes, rowTemplate, null, isChanged);\n        var cells = [].slice.call(tr.cells);\n        var tempCells = [].slice.call(node.querySelectorAll('.e-templatecell'));\n        if (this.parent.isReact && tempCells.length) {\n            var _loop_1 = function (col) {\n                if (col.template) {\n                    setTimeout(function () {\n                        _this.parent.refreshReactColumnTemplateByUid(col.uid, true);\n                    }, 0);\n                    return \"break\";\n                }\n            };\n            for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n                var col = columns_1[_i];\n                var state_1 = _loop_1(col);\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n        var attr = [].slice.call(tr.attributes);\n        attr.map(function (item) {\n            node.setAttribute(item['name'], item['value']);\n        });\n        node.innerHTML = '';\n        for (var _a = 0, cells_1 = cells; _a < cells_1.length; _a++) {\n            var cell = cells_1[_a];\n            node.appendChild(cell);\n        }\n    };\n    // tslint:disable-next-line:max-func-body-length\n    RowRenderer.prototype.refreshRow = function (row, columns, attributes, rowTemplate, cloneNode, isEdit) {\n        var tr = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cloneNode) ? cloneNode : this.element.cloneNode();\n        var rowArgs = { data: row.data };\n        var cellArgs = { data: row.data };\n        var chekBoxEnable = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox' && col.field; })[0];\n        var value = false;\n        var isFrozen = this.parent.isFrozenGrid();\n        var isFirstVisibleCell = true;\n        if (chekBoxEnable) {\n            value = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.getObject)(chekBoxEnable.field, rowArgs.data);\n        }\n        var selIndex = this.parent.getSelectedRowIndexes();\n        if (row.isDataRow) {\n            row.isSelected = selIndex.indexOf(row.index) > -1 || value;\n        }\n        if (row.isDataRow && this.parent.isCheckBoxSelection\n            && this.parent.checkAllRows === 'Check' && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n            row.isSelected = true;\n            if (selIndex.indexOf(row.index) === -1) {\n                selIndex.push(row.index);\n            }\n        }\n        this.buildAttributeFromRow(tr, row);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(tr, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, attributes, {}));\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.setStyleAndAttributes)(tr, row.attributes);\n        var cellRendererFact = this.serviceLocator.getService('cellRendererFactory');\n        var _loop_2 = function (i, len) {\n            var cell = row.cells[parseInt(i.toString(), 10)];\n            cell.isSelected = row.isSelected;\n            cell.isColumnSelected = cell.column.isSelected;\n            var cellRenderer = cellRendererFact.getCellRenderer(row.cells[parseInt(i.toString(), 10)].cellType\n                || _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Data);\n            var attrs = { 'index': !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.index) ? row.index.toString() : '' };\n            if (row.isExpand && row.cells[parseInt(i.toString(), 10)].cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.DetailExpand) {\n                attrs['class'] = this_1.parent.isPrinting ? 'e-detailrowcollapse' : 'e-detailrowexpand';\n            }\n            var isGroupFirstCell = !this_1.parent.enableRtl && this_1.parent.groupSettings && isFirstVisibleCell &&\n                this_1.parent.groupSettings.columns.length && (this_1.parent.gridLines === 'Vertical' || this_1.parent.gridLines === 'Both');\n            var td = cellRenderer.render(row.cells[parseInt(i.toString(), 10)], row.data, attrs, row.isExpand, isEdit);\n            if (row.cells[parseInt(i.toString(), 10)].cellType !== _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Filter) {\n                if (row.cells[parseInt(i.toString(), 10)].cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Data\n                    || row.cells[parseInt(i.toString(), 10)].cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.CommandColumn) {\n                    if (cell.visible && isGroupFirstCell) {\n                        td.classList.add('e-grid-group-first-cell');\n                        isFirstVisibleCell = false;\n                    }\n                    var isReactChild = this_1.parent.parentDetails && this_1.parent.parentDetails.parentInstObj &&\n                        this_1.parent.parentDetails.parentInstObj.isReact;\n                    var isReactPrintGrid = this_1.parent.printGridParent && this_1.parent.printGridParent.isReact;\n                    if (((this_1.parent.isReact && this_1.parent.requireTemplateRef) || (isReactChild &&\n                        this_1.parent.parentDetails.parentInstObj.requireTemplateRef) || (isReactPrintGrid\n                        && this_1.parent.printGridParent.requireTemplateRef)) && cell.isTemplate) {\n                        // eslint-disable-next-line @typescript-eslint/no-this-alias\n                        var thisRef_1 = this_1;\n                        thisRef_1.parent.renderTemplates(function () {\n                            if (typeof (cell.column.template) !== 'string') {\n                                var ariaAttr = td.getAttribute('aria-label');\n                                td.setAttribute('aria-label', td.innerText + ariaAttr);\n                            }\n                            thisRef_1.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.queryCellInfo, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(cellArgs, {\n                                cell: td, column: cell.column, colSpan: 1,\n                                rowSpan: 1, foreignKeyData: row.cells[parseInt(i.toString(), 10)].foreignKeyData,\n                                requestType: thisRef_1.parent.requestTypeAction\n                            }));\n                        });\n                    }\n                    else {\n                        this_1.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.queryCellInfo, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(cellArgs, {\n                            cell: td, column: cell.column, colSpan: 1,\n                            rowSpan: 1, foreignKeyData: row.cells[parseInt(i.toString(), 10)].foreignKeyData,\n                            requestType: this_1.parent.requestTypeAction\n                        }));\n                    }\n                    var isRowSpanned = false;\n                    if (row.index > 0 && (this_1.isSpan || (this_1.parent.isSpan && isEdit))) {\n                        var rowsObject = this_1.parent.getRowsObject();\n                        var prevRowCells = this_1.parent.groupSettings.columns.length > 0 &&\n                            !rowsObject[row.index - 1].isDataRow ? rowsObject[row.index].cells : rowsObject[row.index - 1].cells;\n                        var uid_1 = 'uid';\n                        var prevRowCell = prevRowCells.filter(function (cell) {\n                            return cell.column.uid === row.cells[parseInt(i.toString(), 10)].column[\"\" + uid_1];\n                        })[0];\n                        isRowSpanned = prevRowCell.isRowSpanned ? prevRowCell.isRowSpanned : prevRowCell.rowSpanRange > 1;\n                    }\n                    if ((cellArgs.rowSpan > 1 || cellArgs.colSpan > 1)) {\n                        this_1.resetrowSpanvalue(this_1.parent.frozenRows > row.index ? this_1.parent.frozenRows :\n                            this_1.parent.currentViewData.length, cellArgs, row.index);\n                        if (cellArgs.column.visible === false) {\n                            cellArgs.colSpan = 1;\n                        }\n                        else {\n                            if (isFrozen) {\n                                var columns_2 = this_1.parent.getColumns();\n                                var right = this_1.parent.getFrozenRightColumnsCount();\n                                var left = this_1.parent.getFrozenLeftCount();\n                                var movableCount = columns_2.length - right;\n                                var cellIdx = cellArgs.column.index;\n                                if (left > cellIdx && left < (cellIdx + cellArgs.colSpan)) {\n                                    var colSpan = (cellIdx + cellArgs.colSpan) - left;\n                                    cellArgs.colSpan = cellArgs.colSpan - colSpan;\n                                }\n                                else if (movableCount <= cellIdx && columns_2.length < (cellIdx + cellArgs.colSpan)) {\n                                    var colSpan = (cellIdx + cellArgs.colSpan) - columns_2.length;\n                                    cellArgs.colSpan = cellArgs.colSpan - colSpan;\n                                }\n                                else if (cellArgs.column.freeze === 'Fixed') {\n                                    var colSpan = 1;\n                                    var index = cellIdx;\n                                    for (var j = index + 1; j < index + cellArgs.colSpan; j++) {\n                                        if (columns_2[parseInt(j.toString(), 10)].freeze === 'Fixed') {\n                                            colSpan++;\n                                        }\n                                        else {\n                                            break;\n                                        }\n                                    }\n                                    cellArgs.colSpan = colSpan;\n                                }\n                                else if (movableCount > cellIdx && movableCount < (cellIdx + cellArgs.colSpan)) {\n                                    var colSpan = (cellIdx + cellArgs.colSpan) - movableCount;\n                                    cellArgs.colSpan = cellArgs.colSpan - colSpan;\n                                }\n                            }\n                        }\n                    }\n                    if (cellArgs.colSpan > 1 || row.cells[parseInt(i.toString(), 10)].cellSpan > 1 || cellArgs.rowSpan > 1\n                        || isRowSpanned) {\n                        this_1.parent.isSpan = true;\n                        this_1.isSpan = true;\n                        var cellMerge = new _cell_merge_renderer__WEBPACK_IMPORTED_MODULE_4__.CellMergeRender(this_1.serviceLocator, this_1.parent);\n                        td = cellMerge.render(cellArgs, row, i, td);\n                        if (isFrozen) {\n                            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.resetColandRowSpanStickyPosition)(this_1.parent, cellArgs.column, td, cellArgs.colSpan);\n                        }\n                    }\n                }\n                if ((cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Header || cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.StackedHeader) &&\n                    isGroupFirstCell && (cell.visible || cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.StackedHeader)) {\n                    var visibleColumns = this_1.parent.getVisibleColumns();\n                    var field = 'field';\n                    var type = 'type';\n                    if ((cell.column[\"\" + type] && cell.column[\"\" + type] === 'checkbox') ||\n                        (cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Header && cell.column[\"\" + field] && visibleColumns.length &&\n                            visibleColumns[0].field === cell.column[\"\" + field]) || cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.StackedHeader) {\n                        td.classList.add('e-grid-group-first-cell');\n                        isFirstVisibleCell = false;\n                    }\n                }\n                if (cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Header && (row.cells[parseInt(i.toString(), 10)].colSpan > 1 ||\n                    row.cells[parseInt(i.toString(), 10)].rowSpan > 1)) {\n                    var cellMerge = new _cell_merge_renderer__WEBPACK_IMPORTED_MODULE_4__.CellMergeRender(this_1.serviceLocator, this_1.parent);\n                    td = cellMerge.render(row.cells[parseInt(i.toString(), 10)], row, i, td);\n                }\n                if (this_1.isSpan) {\n                    var rowsObject = this_1.parent.getRowsObject();\n                    var isRtl = this_1.parent.enableRtl;\n                    if (rowsObject[row.index - 1]) {\n                        var prevRowCells = rowsObject[row.index - 1].cells;\n                        var prevRowCell = prevRowCells[i - 1];\n                        var currentRowCell = prevRowCells[parseInt(i.toString(), 10)];\n                        var nextRowCell = prevRowCells[i + 1];\n                        var direction = prevRowCells[parseInt(i.toString(), 10)].column.freeze;\n                        if (prevRowCell && (prevRowCell.isRowSpanned || prevRowCell.rowSpanRange > 1) && prevRowCell.visible) {\n                            if (!isRtl && (!currentRowCell.isRowSpanned || prevRowCell.rowSpanRange > currentRowCell.rowSpanRange)) {\n                                td.classList.add('e-rowcell-firstchild');\n                            }\n                            if (isFrozen) {\n                                if (prevRowCell.column.freeze === 'Fixed' && direction === 'Fixed') {\n                                    td.classList.add(isRtl ? 'e-removefreezerightborder' : 'e-removefreezeleftborder');\n                                }\n                                else if (!isRtl && i === 1 && direction === 'Left') {\n                                    td.classList.add('e-addfreezefirstchildborder');\n                                }\n                            }\n                        }\n                        if (nextRowCell && (nextRowCell.isRowSpanned || nextRowCell.rowSpanRange > 1) && nextRowCell.visible) {\n                            if (isRtl && (!currentRowCell.isRowSpanned || nextRowCell.rowSpanRange > currentRowCell.rowSpanRange)) {\n                                td.classList.add('e-rowcell-lastchild');\n                            }\n                            if (isFrozen && nextRowCell.column.freeze === 'Fixed' && direction === 'Fixed' && cellArgs.colSpan < 2) {\n                                td.classList.add(isRtl ? 'e-removefreezeleftborder' : 'e-removefreezerightborder');\n                            }\n                        }\n                    }\n                }\n                if (cellArgs.rowSpan > 1 && this_1.parent.currentViewData.length - row.index === cellArgs.rowSpan) {\n                    td.classList.add('e-row-span-lastrowcell');\n                }\n                if (!row.cells[parseInt(i.toString(), 10)].isSpanned) {\n                    tr.appendChild(td);\n                }\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, len = row.cells.length; i < len; i++) {\n            _loop_2(i, len);\n        }\n        var emptyColspan = 0;\n        if (this.parent.groupSettings.columns.length && this.parent.getFrozenLeftColumnsCount()) {\n            if (tr.classList.contains('e-groupcaptionrow')) {\n                var freezeCells = [].slice.call(tr.querySelectorAll('.e-leftfreeze,.e-unfreeze,.e-rightfreeze,.e-fixedfreeze,.e-freezerightborder,.e-freezeleftborder'));\n                if (freezeCells.length) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)(freezeCells, ['e-leftfreeze', 'e-unfreeze', 'e-rightfreeze', 'e-fixedfreeze', 'e-freezerightborder', 'e-freezeleftborder']);\n                }\n                if (tr.querySelector('.e-summarycell')) {\n                    (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.groupCaptionRowLeftRightPos)(tr, this.parent);\n                }\n                else {\n                    for (var j = 0; j < tr.childNodes.length; j++) {\n                        var td = tr.childNodes[parseInt(j.toString(), 10)];\n                        td.classList.add('e-leftfreeze');\n                        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.applyStickyLeftRightPosition)(td, j * 30, this.parent.enableRtl, 'Left');\n                        if (td.classList.contains('e-groupcaption')) {\n                            var oldColspan = parseInt(td.getAttribute('colspan'), 10);\n                            var colspan = (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.resetColspanGroupCaption)(this.parent, j);\n                            td.setAttribute('colspan', colspan.toString());\n                            emptyColspan = oldColspan - colspan;\n                        }\n                    }\n                    if (emptyColspan) {\n                        var td = this.parent.createElement('TD', {\n                            className: 'e-groupcaption',\n                            attrs: { colspan: emptyColspan.toString(), id: this.parent.element.id + 'captioncell', tabindex: '-1' }\n                        });\n                        tr.appendChild(td);\n                    }\n                }\n            }\n            if ((tr.querySelectorAll('.e-leftfreeze').length || tr.classList.contains('e-columnheader')) &&\n                (tr.querySelectorAll('.e-indentcell').length || tr.querySelectorAll('.e-grouptopleftcell').length)) {\n                var td = tr.querySelectorAll('.e-indentcell, .e-grouptopleftcell');\n                for (var i = 0; i < td.length; i++) {\n                    td[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                    (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.applyStickyLeftRightPosition)(td[parseInt(i.toString(), 10)], i * 30, this.parent.enableRtl, 'Left');\n                }\n            }\n        }\n        var args = { row: tr, rowHeight: this.parent.rowHeight };\n        if (row.isDataRow) {\n            var eventArg_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(rowArgs, args);\n            eventArg_1.isSelectable = true;\n            var isReactChild = this.parent.parentDetails && this.parent.parentDetails.parentInstObj &&\n                this.parent.parentDetails.parentInstObj.isReact;\n            var cellTemplate = eventArg_1.row.querySelectorAll('.e-templatecell');\n            if (((this.parent.isReact && this.parent.requireTemplateRef) || (isReactChild &&\n                this.parent.parentDetails.parentInstObj.requireTemplateRef)) && cellTemplate.length) {\n                // eslint-disable-next-line @typescript-eslint/no-this-alias\n                var thisRef_2 = this;\n                thisRef_2.parent.renderTemplates(function () {\n                    thisRef_2.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDataBound, eventArg_1);\n                    if (!eventArg_1.isSelectable) {\n                        row.isSelectable = eventArg_1.isSelectable;\n                        thisRef_2.disableRowSelection(thisRef_2, row, args, eventArg_1);\n                    }\n                });\n            }\n            else {\n                this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_3__.rowDataBound, eventArg_1);\n            }\n            row.isSelectable = eventArg_1.isSelectable;\n            var isDraggable = this.parent.isRowDragable();\n            if (this.parent.allowPaging && this.parent.selectionSettings.persistSelection) {\n                var primaryKey_1 = this.parent.getPrimaryKeyFieldNames()[0];\n                var pKey_1 = row.data ? row.data[\"\" + primaryKey_1] : null;\n                var SelectedRecords = eventArg_1.isSelectable ? this.parent.partialSelectedRecords :\n                    this.parent.disableSelectedRecords;\n                if (!SelectedRecords.some(function (data) { return data[\"\" + primaryKey_1] === pKey_1; })) {\n                    SelectedRecords.push(row.data);\n                }\n            }\n            if (!eventArg_1.isSelectable) {\n                this.disableRowSelection(this, row, args, eventArg_1);\n            }\n            if (this.parent.childGrid || isDraggable || this.parent.detailTemplate) {\n                var td = tr.querySelectorAll('.e-rowcell:not(.e-hide)')[0];\n                if (td) {\n                    td.classList.add('e-detailrowvisible');\n                }\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            rowArgs.rowHeight = this.parent.rowHeight;\n        }\n        if (rowArgs.rowHeight) {\n            tr.style.height = rowArgs.rowHeight + 'px';\n        }\n        else if (this.parent.rowHeight && (tr.querySelector('.e-headercell') || tr.querySelector('.e-groupcaption'))) {\n            tr.style.height = this.parent.rowHeight + 'px';\n        }\n        if (row.cssClass) {\n            tr.classList.add(row.cssClass);\n        }\n        if (row.lazyLoadCssClass) {\n            tr.classList.add(row.lazyLoadCssClass);\n        }\n        if (this.parent.rowRenderingMode === 'Vertical' && this.parent.allowTextWrap && (this.parent.textWrapSettings.wrapMode === 'Header'\n            || this.parent.textWrapSettings.wrapMode === 'Both')) {\n            tr.classList.add('e-verticalwrap');\n        }\n        var vFTable = this.parent.enableColumnVirtualization;\n        if (!vFTable && this.parent.aggregates.length && this.parent.element.scrollHeight > this.parent.height) {\n            for (var i = 0; i < this.parent.aggregates.length; i++) {\n                var property = 'properties';\n                var column = 'columns';\n                if (this.parent.aggregates[parseInt(i.toString(), 10)][\"\" + property][\"\" + column][0].footerTemplate) {\n                    var summarycell = [].slice.call(tr.getElementsByClassName('e-summarycell'));\n                    if (summarycell.length) {\n                        var lastSummaryCell = (summarycell[summarycell.length - 1]);\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([lastSummaryCell], ['e-lastsummarycell']);\n                        var firstSummaryCell = (summarycell[0]);\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([firstSummaryCell], ['e-firstsummarycell']);\n                    }\n                }\n            }\n        }\n        return tr;\n    };\n    RowRenderer.prototype.resetrowSpanvalue = function (rowCount, cellArgs, rowIndex) {\n        if (rowCount > rowIndex && rowCount < rowIndex + cellArgs.rowSpan) {\n            var rowSpan = (rowIndex + cellArgs.rowSpan) - rowCount;\n            cellArgs.rowSpan = cellArgs.rowSpan - rowSpan;\n        }\n    };\n    RowRenderer.prototype.disableRowSelection = function (thisRef, row, args, eventArg) {\n        var selIndex = this.parent.getSelectedRowIndexes();\n        this.parent.selectionModule.isPartialSelection = true;\n        row.isSelected = false;\n        var selRowIndex = selIndex.indexOf(row.index);\n        if (selRowIndex > -1) {\n            selIndex.splice(selRowIndex, 1);\n        }\n        var chkBox = args.row.querySelectorAll('.e-rowcell.e-gridchkbox');\n        var isDrag = eventArg.row.querySelector('.e-rowdragdrop');\n        var cellIdx = thisRef.parent.groupSettings.columns.length + (isDrag || thisRef.parent.isDetail() ? 1 : 0);\n        for (var i = 0; i < chkBox.length; i++) {\n            chkBox[parseInt(i.toString(), 10)].firstElementChild.classList.add('e-checkbox-disabled');\n            chkBox[parseInt(i.toString(), 10)].querySelector('.e-frame').classList.remove('e-check');\n        }\n        if (row.cells.length) {\n            for (var i = cellIdx; i < row.cells.length; i++) {\n                var cell = eventArg.row.querySelector('.e-rowcell[aria-colindex=\"' + (row.cells[parseInt(i.toString(), 10)].index + 1) + '\"]');\n                if (cell) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([cell], ['e-selectionbackground', 'e-active']);\n                }\n            }\n        }\n        if (isDrag) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([isDrag], ['e-selectionbackground', 'e-active']);\n        }\n    };\n    RowRenderer.prototype.refreshMergeCells = function (row) {\n        for (var _i = 0, _a = row.cells; _i < _a.length; _i++) {\n            var cell = _a[_i];\n            cell.isSpanned = false;\n        }\n        return row;\n    };\n    /* eslint-disable */\n    /**\n     * Function to check and add alternative row css class.\n     *\n     * @param {Element} tr - specifies the tr element\n     * @param {Row<T>} row - specifies the row\n     * @returns {void}\n     */\n    /* eslint-enable */\n    RowRenderer.prototype.buildAttributeFromRow = function (tr, row) {\n        var attr = {};\n        var prop = { 'dataUID': 'data-uid', 'ariaSelected': 'aria-selected' };\n        var classes = [];\n        if (row.isDataRow) {\n            classes.push(_base_string_literals__WEBPACK_IMPORTED_MODULE_5__.row);\n        }\n        if (row.isAltRow) {\n            classes.push('e-altrow');\n        }\n        if (row.isCaptionRow) {\n            classes.push('e-groupcaptionrow');\n        }\n        if (row.isAggregateRow && row.parentUid) {\n            classes.push('e-groupfooterrow');\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row.index)) {\n            attr[_base_string_literals__WEBPACK_IMPORTED_MODULE_5__.ariaRowIndex] = row.index + 1;\n        }\n        if (row.rowSpan) {\n            attr.rowSpan = row.rowSpan;\n        }\n        if (row.uid) {\n            attr[prop.dataUID] = row.uid;\n        }\n        if (row.isSelected) {\n            attr[prop.ariaSelected] = true;\n        }\n        if (row.visible === false) {\n            classes.push('e-hide');\n        }\n        attr.class = classes;\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.setStyleAndAttributes)(tr, attr);\n    };\n    return RowRenderer;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/row-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/stacked-cell-renderer.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/stacked-cell-renderer.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackedHeaderCellRenderer: () => (/* binding */ StackedHeaderCellRenderer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _cell_renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cell-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/cell-renderer.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n/**\n * StackedHeaderCellRenderer class which responsible for building stacked header cell content.\n *\n * @hidden\n */\nvar StackedHeaderCellRenderer = /** @class */ (function (_super) {\n    __extends(StackedHeaderCellRenderer, _super);\n    function StackedHeaderCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TH', {\n            className: 'e-headercell e-stackedheadercell', attrs: {\n                tabindex: '-1', role: 'columnheader'\n            }\n        });\n        return _this;\n    }\n    /**\n     * Function to render the cell content based on Column object.\n     *\n     * @param {Cell<Column>} cell - specifies the cell\n     * @param {Object} data - specifies the data\n     * @param {object} attributes - specifies the attributes\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    StackedHeaderCellRenderer.prototype.render = function (cell, data, attributes) {\n        var node = this.element.cloneNode();\n        var div = this.parent.createElement('div', {\n            className: 'e-stackedheadercelldiv',\n            attrs: { 'e-mappinguid': cell.column.uid }\n        });\n        var column = cell.column;\n        node.appendChild(div);\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.headerTemplate)) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.appendChildren)(div, column.getHeaderTemplate()(column, this.parent, 'headerTemplate', null, null, null, null, this.parent.root));\n        }\n        else {\n            this.appendHtml(div, this.parent.sanitize(column.headerText), column.getDomSetter());\n        }\n        if (cell.column.toolTip) {\n            node.setAttribute('title', cell.column.toolTip);\n        }\n        if (column.clipMode === 'Clip' || (!column.clipMode && this.parent.clipMode === 'Clip')) {\n            node.classList.add('e-gridclip');\n        }\n        else if (column.clipMode === 'EllipsisWithTooltip' || (!column.clipMode && this.parent.clipMode === 'EllipsisWithTooltip')) {\n            node.classList.add('e-ellipsistooltip');\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.column.textAlign)) {\n            var alignmentClassMap = { right: 'e-rightalign', left: 'e-leftalign', center: 'e-centeralign', justify: 'e-justifyalign' };\n            if (alignmentClassMap[cell.column.textAlign.toLowerCase()]) {\n                node.classList.add(alignmentClassMap[cell.column.textAlign.toLowerCase()]);\n            }\n        }\n        if (cell.column.customAttributes) {\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.setStyleAndAttributes)(node, cell.column.customAttributes);\n        }\n        node.setAttribute('colspan', cell.colSpan.toString());\n        node.setAttribute('aria-colspan', cell.colSpan.toString());\n        node.setAttribute('aria-rowspan', '1');\n        if (this.parent.allowResizing) {\n            var handler = this.parent.createElement('div');\n            handler.className = cell.column.allowResizing ? 'e-rhandler e-rcursor' : 'e-rsuppress';\n            node.appendChild(handler);\n        }\n        if (cell.className) {\n            node.classList.add(cell.className);\n        }\n        this.parent.trigger(_base_constant__WEBPACK_IMPORTED_MODULE_2__.headerCellInfo, { cell: cell, node: node });\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.frozenDirection)(column) === 'Left') {\n            node.classList.add('e-leftfreeze');\n            if (column.border === 'Left') {\n                node.classList.add('e-freezeleftborder');\n            }\n            if (column.index === 0) {\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.applyStickyLeftRightPosition)(node, (this.parent.getIndentCount() * 30), this.parent.enableRtl, 'Left');\n            }\n            else {\n                var cols = this.parent.getColumns();\n                var width = this.parent.getIndentCount() * 30;\n                for (var i = 0; i < cols.length; i++) {\n                    if (column.index < cols[parseInt(i.toString(), 10)].index) {\n                        break;\n                    }\n                    if (cols[parseInt(i.toString(), 10)].visible) {\n                        width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                    }\n                }\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.applyStickyLeftRightPosition)(node, width, this.parent.enableRtl, 'Left');\n            }\n        }\n        else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.frozenDirection)(column) === 'Right') {\n            node.classList.add('e-rightfreeze');\n            var cols = this.parent.getColumns();\n            var width = this.parent.getFrozenMode() === 'Right' && this.parent.isRowDragable() ? 30 : 0;\n            for (var i = cols.length - 1; i >= 0; i--) {\n                if ((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.isChildColumn)(column, cols[parseInt(i.toString(), 10)].uid) || column.index > cols[parseInt(i.toString(), 10)].index) {\n                    break;\n                }\n                if (cols[parseInt(i.toString(), 10)].visible) {\n                    width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                }\n            }\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.applyStickyLeftRightPosition)(node, width, this.parent.enableRtl, 'Right');\n            if (column.border === 'Right') {\n                node.classList.add('e-freezerightborder');\n            }\n        }\n        else if ((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.frozenDirection)(column) === 'Fixed') {\n            node.classList.add('e-fixedfreeze');\n            var cols = this.parent.getColumns();\n            var width = 0;\n            if (this.parent.getVisibleFrozenLeftCount()) {\n                width = this.parent.getIndentCount() * 30;\n            }\n            else if (this.parent.getFrozenMode() === 'Right') {\n                width = this.parent.groupSettings.columns.length * 30;\n            }\n            for (var i = 0; i < cols.length; i++) {\n                if (column.index > cols[parseInt(i.toString(), 10)].index) {\n                    if ((cols[parseInt(i.toString(), 10)].freeze === 'Left' || cols[parseInt(i.toString(), 10)].isFrozen) ||\n                        cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                        if (cols[parseInt(i.toString(), 10)].visible) {\n                            width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                        }\n                    }\n                }\n            }\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.applyStickyLeftRightPosition)(node, width - 1, this.parent.enableRtl, 'Left');\n            width = this.parent.getFrozenMode() === 'Right' && this.parent.isRowDragable() ? 30 : 0;\n            for (var i = cols.length - 1; i >= 0; i--) {\n                if (column.index < cols[parseInt(i.toString(), 10)].index) {\n                    if ((0,_base_util__WEBPACK_IMPORTED_MODULE_1__.isChildColumn)(column, cols[parseInt(i.toString(), 10)].uid) ||\n                        column.index > cols[parseInt(i.toString(), 10)].index) {\n                        break;\n                    }\n                    if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                        if (cols[parseInt(i.toString(), 10)].visible) {\n                            width += parseFloat(cols[parseInt(i.toString(), 10)].width.toString());\n                        }\n                    }\n                }\n            }\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_1__.applyStickyLeftRightPosition)(node, width - 1, this.parent.enableRtl, 'Right');\n        }\n        else {\n            node.classList.add('e-unfreeze');\n        }\n        return node;\n    };\n    return StackedHeaderCellRenderer;\n}(_cell_renderer__WEBPACK_IMPORTED_MODULE_3__.CellRenderer));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/stacked-cell-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/aria-service.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/aria-service.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AriaService: () => (/* binding */ AriaService)\n/* harmony export */ });\n/**\n * AriaService\n *\n * @hidden\n */\nvar AriaService = /** @class */ (function () {\n    function AriaService() {\n    }\n    AriaService.prototype.setOptions = function (target, options) {\n        var props = Object.keys(options);\n        for (var i = 0; i < props.length; i++) {\n            setStateAndProperties(target, config[props[parseInt(i.toString(), 10)]], options[props[parseInt(i.toString(), 10)]]);\n        }\n    };\n    AriaService.prototype.setExpand = function (target, expand) {\n        setStateAndProperties(target, config.expand, expand);\n    };\n    AriaService.prototype.setSort = function (target, direction) {\n        setStateAndProperties(target, config.sort, direction, typeof direction === 'boolean');\n    };\n    AriaService.prototype.setBusy = function (target, isBusy) {\n        setStateAndProperties(target, config.busy, isBusy);\n        setStateAndProperties(target, config.invalid, null, true);\n    };\n    AriaService.prototype.setGrabbed = function (target, isGrabbed, remove) {\n        setStateAndProperties(target, config.grabbed, isGrabbed, remove);\n    };\n    AriaService.prototype.setDropTarget = function (target, isTarget) {\n        setStateAndProperties(target, config.dropeffect, 'copy', !isTarget);\n    };\n    return AriaService;\n}());\n\n/**\n * @param {HTMLElement} target - specifies the target\n * @param {string} attribute - specifies the attribute\n * @param {ValueType} value - specifies the value\n * @param {boolean} remove - specifies the boolean for remove\n * @returns {void}\n * @hidden\n */\nfunction setStateAndProperties(target, attribute, value, remove) {\n    if (remove && target) {\n        target.removeAttribute(attribute);\n        return;\n    }\n    if (target) {\n        target.setAttribute(attribute, value);\n    }\n}\nvar config = {\n    expand: 'aria-expanded',\n    role: 'role',\n    datarole: 'data-role',\n    selected: 'aria-selected',\n    multiselectable: 'aria-multiselectable',\n    sort: 'aria-sort',\n    busy: 'aria-busy',\n    invalid: 'aria-invalid',\n    grabbed: 'aria-grabbed',\n    dropeffect: 'aria-dropeffect',\n    haspopup: 'aria-haspopup',\n    level: 'aria-level',\n    colcount: 'aria-colcount',\n    rowcount: 'aria-rowcount'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9zZXJ2aWNlcy9hcmlhLXNlcnZpY2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNzQjtBQUN2QjtBQUNBLFdBQVcsYUFBYTtBQUN4QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsU0FBUztBQUNwQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlfdHJhdmVsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzeW5jZnVzaW9uK2VqMi1ncmlkc0AyOS4xLjQwL25vZGVfbW9kdWxlcy9Ac3luY2Z1c2lvbi9lajItZ3JpZHMvc3JjL2dyaWQvc2VydmljZXMvYXJpYS1zZXJ2aWNlLmpzP2ZjMDciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBcmlhU2VydmljZVxuICpcbiAqIEBoaWRkZW5cbiAqL1xudmFyIEFyaWFTZXJ2aWNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEFyaWFTZXJ2aWNlKCkge1xuICAgIH1cbiAgICBBcmlhU2VydmljZS5wcm90b3R5cGUuc2V0T3B0aW9ucyA9IGZ1bmN0aW9uICh0YXJnZXQsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHByb3BzID0gT2JqZWN0LmtleXMob3B0aW9ucyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHNldFN0YXRlQW5kUHJvcGVydGllcyh0YXJnZXQsIGNvbmZpZ1twcm9wc1twYXJzZUludChpLnRvU3RyaW5nKCksIDEwKV1dLCBvcHRpb25zW3Byb3BzW3BhcnNlSW50KGkudG9TdHJpbmcoKSwgMTApXV0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBBcmlhU2VydmljZS5wcm90b3R5cGUuc2V0RXhwYW5kID0gZnVuY3Rpb24gKHRhcmdldCwgZXhwYW5kKSB7XG4gICAgICAgIHNldFN0YXRlQW5kUHJvcGVydGllcyh0YXJnZXQsIGNvbmZpZy5leHBhbmQsIGV4cGFuZCk7XG4gICAgfTtcbiAgICBBcmlhU2VydmljZS5wcm90b3R5cGUuc2V0U29ydCA9IGZ1bmN0aW9uICh0YXJnZXQsIGRpcmVjdGlvbikge1xuICAgICAgICBzZXRTdGF0ZUFuZFByb3BlcnRpZXModGFyZ2V0LCBjb25maWcuc29ydCwgZGlyZWN0aW9uLCB0eXBlb2YgZGlyZWN0aW9uID09PSAnYm9vbGVhbicpO1xuICAgIH07XG4gICAgQXJpYVNlcnZpY2UucHJvdG90eXBlLnNldEJ1c3kgPSBmdW5jdGlvbiAodGFyZ2V0LCBpc0J1c3kpIHtcbiAgICAgICAgc2V0U3RhdGVBbmRQcm9wZXJ0aWVzKHRhcmdldCwgY29uZmlnLmJ1c3ksIGlzQnVzeSk7XG4gICAgICAgIHNldFN0YXRlQW5kUHJvcGVydGllcyh0YXJnZXQsIGNvbmZpZy5pbnZhbGlkLCBudWxsLCB0cnVlKTtcbiAgICB9O1xuICAgIEFyaWFTZXJ2aWNlLnByb3RvdHlwZS5zZXRHcmFiYmVkID0gZnVuY3Rpb24gKHRhcmdldCwgaXNHcmFiYmVkLCByZW1vdmUpIHtcbiAgICAgICAgc2V0U3RhdGVBbmRQcm9wZXJ0aWVzKHRhcmdldCwgY29uZmlnLmdyYWJiZWQsIGlzR3JhYmJlZCwgcmVtb3ZlKTtcbiAgICB9O1xuICAgIEFyaWFTZXJ2aWNlLnByb3RvdHlwZS5zZXREcm9wVGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCwgaXNUYXJnZXQpIHtcbiAgICAgICAgc2V0U3RhdGVBbmRQcm9wZXJ0aWVzKHRhcmdldCwgY29uZmlnLmRyb3BlZmZlY3QsICdjb3B5JywgIWlzVGFyZ2V0KTtcbiAgICB9O1xuICAgIHJldHVybiBBcmlhU2VydmljZTtcbn0oKSk7XG5leHBvcnQgeyBBcmlhU2VydmljZSB9O1xuLyoqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSB0YXJnZXQgLSBzcGVjaWZpZXMgdGhlIHRhcmdldFxuICogQHBhcmFtIHtzdHJpbmd9IGF0dHJpYnV0ZSAtIHNwZWNpZmllcyB0aGUgYXR0cmlidXRlXG4gKiBAcGFyYW0ge1ZhbHVlVHlwZX0gdmFsdWUgLSBzcGVjaWZpZXMgdGhlIHZhbHVlXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHJlbW92ZSAtIHNwZWNpZmllcyB0aGUgYm9vbGVhbiBmb3IgcmVtb3ZlXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqIEBoaWRkZW5cbiAqL1xuZnVuY3Rpb24gc2V0U3RhdGVBbmRQcm9wZXJ0aWVzKHRhcmdldCwgYXR0cmlidXRlLCB2YWx1ZSwgcmVtb3ZlKSB7XG4gICAgaWYgKHJlbW92ZSAmJiB0YXJnZXQpIHtcbiAgICAgICAgdGFyZ2V0LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGUpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0YXJnZXQpIHtcbiAgICAgICAgdGFyZ2V0LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGUsIHZhbHVlKTtcbiAgICB9XG59XG52YXIgY29uZmlnID0ge1xuICAgIGV4cGFuZDogJ2FyaWEtZXhwYW5kZWQnLFxuICAgIHJvbGU6ICdyb2xlJyxcbiAgICBkYXRhcm9sZTogJ2RhdGEtcm9sZScsXG4gICAgc2VsZWN0ZWQ6ICdhcmlhLXNlbGVjdGVkJyxcbiAgICBtdWx0aXNlbGVjdGFibGU6ICdhcmlhLW11bHRpc2VsZWN0YWJsZScsXG4gICAgc29ydDogJ2FyaWEtc29ydCcsXG4gICAgYnVzeTogJ2FyaWEtYnVzeScsXG4gICAgaW52YWxpZDogJ2FyaWEtaW52YWxpZCcsXG4gICAgZ3JhYmJlZDogJ2FyaWEtZ3JhYmJlZCcsXG4gICAgZHJvcGVmZmVjdDogJ2FyaWEtZHJvcGVmZmVjdCcsXG4gICAgaGFzcG9wdXA6ICdhcmlhLWhhc3BvcHVwJyxcbiAgICBsZXZlbDogJ2FyaWEtbGV2ZWwnLFxuICAgIGNvbGNvdW50OiAnYXJpYS1jb2xjb3VudCcsXG4gICAgcm93Y291bnQ6ICdhcmlhLXJvd2NvdW50J1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/aria-service.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/cell-render-factory.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/cell-render-factory.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CellRendererFactory: () => (/* binding */ CellRendererFactory)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n\n\n/**\n * CellRendererFactory\n *\n * @hidden\n */\nvar CellRendererFactory = /** @class */ (function () {\n    function CellRendererFactory() {\n        this.cellRenderMap = {};\n    }\n    CellRendererFactory.prototype.addCellRenderer = function (name, type) {\n        name = typeof name === 'string' ? name : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType, name);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cellRenderMap[\"\" + name])) {\n            this.cellRenderMap[\"\" + name] = type;\n        }\n    };\n    CellRendererFactory.prototype.getCellRenderer = function (name) {\n        name = typeof name === 'string' ? name : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_1__.CellType, name);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.cellRenderMap[\"\" + name])) {\n            // eslint-disable-next-line no-throw-literal\n            throw \"The cellRenderer \" + name + \" is not found\";\n        }\n        else {\n            return this.cellRenderMap[\"\" + name];\n        }\n    };\n    return CellRendererFactory;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9zZXJ2aWNlcy9jZWxsLXJlbmRlci1mYWN0b3J5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RTtBQUMvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxrRUFBWSxDQUFDLGdEQUFRO0FBQ3RFLFlBQVksdUVBQWlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGtFQUFZLENBQUMsZ0RBQVE7QUFDdEUsWUFBWSx1RUFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDOEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haV90cmF2ZWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9zZXJ2aWNlcy9jZWxsLXJlbmRlci1mYWN0b3J5LmpzPzNiODQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOdWxsT3JVbmRlZmluZWQsIGdldEVudW1WYWx1ZSB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1iYXNlJztcbmltcG9ydCB7IENlbGxUeXBlIH0gZnJvbSAnLi4vYmFzZS9lbnVtJztcbi8qKlxuICogQ2VsbFJlbmRlcmVyRmFjdG9yeVxuICpcbiAqIEBoaWRkZW5cbiAqL1xudmFyIENlbGxSZW5kZXJlckZhY3RvcnkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ2VsbFJlbmRlcmVyRmFjdG9yeSgpIHtcbiAgICAgICAgdGhpcy5jZWxsUmVuZGVyTWFwID0ge307XG4gICAgfVxuICAgIENlbGxSZW5kZXJlckZhY3RvcnkucHJvdG90eXBlLmFkZENlbGxSZW5kZXJlciA9IGZ1bmN0aW9uIChuYW1lLCB0eXBlKSB7XG4gICAgICAgIG5hbWUgPSB0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycgPyBuYW1lIDogZ2V0RW51bVZhbHVlKENlbGxUeXBlLCBuYW1lKTtcbiAgICAgICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuY2VsbFJlbmRlck1hcFtcIlwiICsgbmFtZV0pKSB7XG4gICAgICAgICAgICB0aGlzLmNlbGxSZW5kZXJNYXBbXCJcIiArIG5hbWVdID0gdHlwZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2VsbFJlbmRlcmVyRmFjdG9yeS5wcm90b3R5cGUuZ2V0Q2VsbFJlbmRlcmVyID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgbmFtZSA9IHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJyA/IG5hbWUgOiBnZXRFbnVtVmFsdWUoQ2VsbFR5cGUsIG5hbWUpO1xuICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQodGhpcy5jZWxsUmVuZGVyTWFwW1wiXCIgKyBuYW1lXSkpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gICAgICAgICAgICB0aHJvdyBcIlRoZSBjZWxsUmVuZGVyZXIgXCIgKyBuYW1lICsgXCIgaXMgbm90IGZvdW5kXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jZWxsUmVuZGVyTWFwW1wiXCIgKyBuYW1lXTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIENlbGxSZW5kZXJlckZhY3Rvcnk7XG59KCkpO1xuZXhwb3J0IHsgQ2VsbFJlbmRlcmVyRmFjdG9yeSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/cell-render-factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/focus-strategy.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/focus-strategy.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContentFocus: () => (/* binding */ ContentFocus),\n/* harmony export */   FocusStrategy: () => (/* binding */ FocusStrategy),\n/* harmony export */   HeaderFocus: () => (/* binding */ HeaderFocus),\n/* harmony export */   Matrix: () => (/* binding */ Matrix),\n/* harmony export */   SearchBox: () => (/* binding */ SearchBox)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _models_row__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/row */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js\");\n/* harmony import */ var _row_model_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./row-model-generator */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/row-model-generator.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n/**\n * FocusStrategy class\n *\n * @hidden\n */\nvar FocusStrategy = /** @class */ (function () {\n    function FocusStrategy(parent) {\n        this.currentInfo = {};\n        this.oneTime = true;\n        this.swap = {};\n        /** @hidden */\n        this.isInfiniteScroll = false;\n        /** @hidden */\n        this.virtualSelectionInfo = {};\n        this.forget = false;\n        this.skipFocus = true;\n        this.focusByClick = false;\n        this.firstHeaderCellClick = false;\n        /** @hidden */\n        this.prevIndexes = {};\n        this.refMatrix = this.refreshMatrix(true);\n        this.actions = ['downArrow', 'upArrow'];\n        this.isVirtualScroll = false;\n        this.groupedFrozenRow = 0;\n        this.parent = parent;\n        this.rowModelGen = new _row_model_generator__WEBPACK_IMPORTED_MODULE_1__.RowModelGenerator(this.parent);\n        this.addEventListener();\n    }\n    FocusStrategy.prototype.focusCheck = function (e) {\n        var target = e.target;\n        this.focusByClick = true;\n        this.firstHeaderCellClick = true;\n        this.skipFocus = target.classList.contains('e-grid');\n    };\n    FocusStrategy.prototype.onFocus = function (e) {\n        if (this.parent.isDestroyed || _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice || this.parent.enableVirtualization\n            || this.parent.element.querySelector('.e-masked-table') || (!this.parent.isInitialLoad && e\n            && e.target === this.parent.element && this.parent.element.querySelector('.e-spin-show'))) {\n            return;\n        }\n        this.setActive(!this.parent.enableHeaderFocus && this.parent.frozenRows === 0);\n        if (!this.parent.enableHeaderFocus && !this.parent.getCurrentViewRecords().length && ((this.parent.editSettings.mode !== 'Batch')\n            || (this.parent.editSettings.mode === 'Batch' && this.parent.editModule && !this.parent.editModule.getBatchChanges()[_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.addedRecords].length))) {\n            this.getContent().matrix.\n                generate(this.rowModelGen.generateRows({ rows: [new _models_row__WEBPACK_IMPORTED_MODULE_3__.Row({ isDataRow: true })] }), this.getContent().selector, false);\n        }\n        var current = this.getContent().matrix.get(0, -1, [0, 1], null, this.getContent().validator(), this.active);\n        this.getContent().matrix.select(current[0], current[1]);\n        if (this.skipFocus && !(e && e.target === this.parent.element)) {\n            this.focus(e);\n            this.skipFocus = false;\n        }\n    };\n    FocusStrategy.prototype.passiveFocus = function (e) {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        var firstHeaderCell = this.parent.getHeaderContent().querySelector('.e-headercell:not(.e-hide)');\n        if (e.target === firstHeaderCell && e.relatedTarget && !(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.relatedTarget, 'e-grid')\n            && !this.firstHeaderCellClick) {\n            var firstHeaderCellIndex = [0, 0];\n            if (this.active.matrix.matrix[firstHeaderCellIndex[0]][firstHeaderCellIndex[1]] === 0) {\n                firstHeaderCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, firstHeaderCellIndex, true);\n            }\n            this.active.matrix.current = firstHeaderCellIndex;\n            this.currentInfo.element = e.target;\n            this.currentInfo.elementToFocus = e.target;\n            if (this.currentInfo.element.querySelector('.e-checkselectall')) {\n                this.removeFocus();\n                this.addFocus(this.getContent().getFocusInfo(), e);\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.currentInfo.element], ['e-focused', 'e-focus']);\n            }\n        }\n        this.firstHeaderCellClick = false;\n        if (e.target && e.target.classList.contains('e-detailcell')) {\n            this.currentInfo.skipAction = false;\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.currentInfo.element], ['e-focused', 'e-focus']);\n        }\n    };\n    FocusStrategy.prototype.onBlur = function (e) {\n        if (this.parent.allowPaging && this.parent.pagerModule.pagerObj.element.querySelector('.e-pagercontainer')) {\n            this.parent.pagerModule.pagerObj.element.querySelector('.e-pagercontainer').removeAttribute('aria-hidden');\n        }\n        // The below boolean condition for gantt team focus fix.\n        var isGantt = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-gantt') && e.target.classList.contains('e-rowcell')\n            && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.target.nextElementSibling)\n                && e.target.nextElementSibling.classList.contains('e-rowcell')) ? true : false;\n        if ((this.parent.isEdit || e && (!e.relatedTarget || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.relatedTarget, '.e-grid') || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.relatedTarget, '.e-grid-popup'))\n            && !(this.parent.element.classList.contains('e-childgrid') && !this.parent.element.matches(':focus-within')))\n            && !(!isGantt && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.relatedTarget) && parseInt(e.target.getAttribute('aria-colindex'), 10) - 1 === 0\n                && parseInt(e.target.getAttribute('index'), 10) === 0) && !(!isGantt && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.relatedTarget)\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.activeElement, '.e-grid') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e['sourceCapabilities']))) {\n            return;\n        }\n        this.removeFocus();\n        this.skipFocus = true;\n        this.currentInfo.skipAction = false;\n        this.setLastContentCellTabIndex();\n        this.setFirstFocusableTabIndex();\n        this.firstHeaderCellClick = false;\n    };\n    /**\n     * @returns {void}\n     * @hidden */\n    FocusStrategy.prototype.setFirstFocusableTabIndex = function () {\n        var gObj = this.parent;\n        gObj.element.tabIndex = -1;\n        if (gObj.allowGrouping && gObj.groupSettings.showDropArea) {\n            var groupModule = gObj.groupModule;\n            var focusableGroupedItems = groupModule.getFocusableGroupedItems();\n            if (focusableGroupedItems.length > 0) {\n                groupModule.element.tabIndex = -1;\n                focusableGroupedItems[0].tabIndex = 0;\n            }\n            else {\n                groupModule.element.tabIndex = 0;\n            }\n            return;\n        }\n        if (gObj.toolbar || gObj.toolbarTemplate) {\n            var toolbarElement = gObj.toolbarModule.element;\n            var focusableToolbarItems = this.parent.toolbarModule.getFocusableToolbarItems();\n            if (focusableToolbarItems.length > 0 && focusableToolbarItems[0].querySelector('.e-toolbar-item-focus,.e-btn,.e-input')) {\n                toolbarElement.tabIndex = -1;\n                focusableToolbarItems[0].querySelector('.e-toolbar-item-focus,.e-btn,.e-input').tabIndex = 0;\n            }\n            else {\n                toolbarElement.tabIndex = 0;\n            }\n            return;\n        }\n        if (gObj.getColumns().length) {\n            var firstHeaderCell = gObj.getHeaderContent().querySelector('.e-headercell:not(.e-hide)');\n            firstHeaderCell.tabIndex = 0;\n            this.setActive(false);\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.active) && ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.active.target) || !this.active.target.classList.contains('e-columnmenu'))) {\n                var firstHeaderCellIndex = [0, 0];\n                if (this.active.matrix.matrix[firstHeaderCellIndex[0]][firstHeaderCellIndex[1]] === 0) {\n                    firstHeaderCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, firstHeaderCellIndex, true);\n                }\n                this.active.matrix.current = firstHeaderCellIndex;\n            }\n            return;\n        }\n    };\n    FocusStrategy.prototype.setLastContentCellTabIndex = function () {\n        var contentTable = this.parent.getContentTable();\n        if (contentTable.rows[contentTable.rows.length - 1]) {\n            var lastCell = contentTable.rows[contentTable.rows.length - 1].lastElementChild;\n            lastCell.tabIndex = 0;\n        }\n    };\n    FocusStrategy.prototype.onClick = function (e, force, isFocusFirstCell) {\n        if ((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-filterbarcell') && ((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-multiselect') ||\n            e.target.classList.contains('e-input-group-icon'))) {\n            return;\n        }\n        var isContent = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridContent));\n        var isHeader = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridHeader));\n        isContent = isContent && isHeader ? !isContent : isContent;\n        if (!isContent && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridHeader)) ||\n            e.target.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.content) || e.target.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.headerContent) ||\n            (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-unboundcell')) && !force)) {\n            return;\n        }\n        this.setActive(isContent);\n        var beforeArgs = { cancel: false, byKey: false, byClick: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e.target), clickArgs: e };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_5__.beforeCellFocused, beforeArgs);\n        if (beforeArgs.cancel || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-inline-edit') && (!this.parent.editSettings.showAddNewRow &&\n            (this.parent.editSettings.showAddNewRow && !this.parent.element.querySelector('.e-editedrow'))))) {\n            return;\n        }\n        this.setActive(isContent);\n        if (this.getContent()) {\n            var returnVal = this.getContent().onClick(e, force);\n            if (returnVal === false) {\n                return;\n            }\n            this.focus();\n            if (this.currentInfo.element.classList.contains('e-rowcell') && e.type && e.type === 'click' && !isFocusFirstCell) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.currentInfo.element], ['e-focused', 'e-focus']);\n            }\n            if (isFocusFirstCell && e && e.target) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([e.target], ['e-focused', 'e-focus']);\n            }\n        }\n    };\n    FocusStrategy.prototype.handleFilterNavigation = function (e, inputSelector, buttonSelector) {\n        if (e.target === document.querySelector(inputSelector) && e.key === 'Tab' && e.shiftKey) {\n            e.preventDefault();\n            document.querySelector(buttonSelector).focus();\n        }\n        else if (e.target === document.querySelector(buttonSelector) && e.key === 'Tab' && !e.shiftKey &&\n            document.activeElement === document.querySelector(buttonSelector)) {\n            e.preventDefault();\n            document.querySelector(inputSelector).focus();\n        }\n    };\n    FocusStrategy.prototype.onKeyPress = function (e) {\n        if (this.content && this.content.target) {\n            this.content.target = null;\n        }\n        if (this.parent.allowPaging) {\n            var pagerElement = this.parent.pagerModule.pagerObj.element;\n            var focusablePagerElements = this.parent.pagerModule.pagerObj.getFocusablePagerElements(pagerElement, []);\n            if (this.parent.childGrid && !(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-gridpager') && this.allowToPaging(e) && focusablePagerElements.length) {\n                focusablePagerElements[0].tabIndex = 0;\n            }\n            if (this.parent.pagerModule.pagerObj.checkPagerHasFocus()) {\n                if (e.action === 'shiftTab' && focusablePagerElements.length && focusablePagerElements[0] === e.target) {\n                    this.setActive(true);\n                    var lastHeaderCellIndex = [this.active.matrix.matrix.length - 1,\n                        this.active.matrix.matrix[this.active.matrix.matrix.length - 1].length - 1];\n                    if (this.active.matrix.matrix[lastHeaderCellIndex[0]][lastHeaderCellIndex[1]] === 0) {\n                        lastHeaderCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, lastHeaderCellIndex, false);\n                    }\n                    this.active.matrix.current = this.parent.editSettings.mode === 'Batch' ?\n                        this.isValidBatchEditCell(lastHeaderCellIndex) ? lastHeaderCellIndex :\n                            this.findBatchEditCell(lastHeaderCellIndex, false) : lastHeaderCellIndex;\n                    e.preventDefault();\n                    this.focus(e);\n                    return;\n                }\n                if (!(e.action === 'tab' && this.parent.element.classList.contains('e-childgrid')\n                    && ((!this.parent.pageSettings.pageSizes && focusablePagerElements.length\n                        && focusablePagerElements[focusablePagerElements.length - 1] === e.target)\n                        || (this.parent.pagerModule.pagerObj.getDropDownPage() === e.target)))) {\n                    this.parent.pagerModule.pagerObj.changePagerFocus(e);\n                    return;\n                }\n                else {\n                    var parentCell = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(this.parent.element, 'e-detailcell');\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.parent.element], ['e-focus']);\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([parentCell], ['e-focused']);\n                    parentCell.tabIndex = -1;\n                }\n            }\n            if (this.parent.pagerModule.pagerObj.element.tabIndex === 0 && (e.keyCode === 38 || (e.shiftKey && e.keyCode === 9))) {\n                e.preventDefault();\n                this.focus(e);\n                return;\n            }\n            else if (this.parent.pagerModule.pagerObj.element.tabIndex === 0 && e.keyCode === 9) {\n                e.preventDefault();\n                this.parent.pagerModule.pagerObj.setPagerFocus();\n                return;\n            }\n            if (this.parent.pagerModule.pagerObj.checkFirstPagerFocus()) {\n                var lastRow = this.getContent().matrix.rows;\n                var lastColumn = this.getContent().matrix.columns;\n                this.getContent().matrix.current = [lastRow, lastColumn];\n            }\n        }\n        if (this.parent.filterSettings.type === 'Excel') {\n            this.handleFilterNavigation(e, '.e-excelfilter .e-menu-item:not(.e-disabled)', '.e-excelfilter .e-footer-content button:nth-child(2)');\n        }\n        if (this.parent.filterSettings.type === 'CheckBox') {\n            var focusedColumn = this.parent.getColumnByUid(this.focusedColumnUid);\n            var focusTarget = focusedColumn && focusedColumn.filter && focusedColumn.filter.hideSearchbox ? '.e-chk-hidden' : '.e-searchinput.e-input';\n            this.handleFilterNavigation(e, focusTarget, '.e-checkboxfilter .e-footer-content button:nth-child(2)');\n        }\n        if (this.parent.filterSettings.type === 'Menu') {\n            this.handleFilterNavigation(e, '.e-flmenu .e-input-group.e-popup-flmenu', '.e-flmenu .e-footer-content button:nth-child(2)');\n        }\n        if (this.parent.showColumnChooser) {\n            this.handleFilterNavigation(e, '.e-ccdlg .e-ccsearch.e-cc.e-input', '.e-ccdlg .e-footer-content button:nth-child(2)');\n        }\n        if (this.skipOn(e)) {\n            return;\n        }\n        if (e.target && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-gridcontent')) {\n            var rows = [].slice.call(this.parent.getContentTable().rows);\n            var lastCell = rows[rows.length - 1].lastElementChild;\n            if (e.target === lastCell) {\n                this.setActive(true);\n                this.setLastContentCellActive();\n            }\n        }\n        if (e.action === 'shiftTab' && e.target && (e.target === this.parent.element || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-toolbar')\n            || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-groupdroparea'))) {\n            if (e.target === this.parent.element) {\n                if (this.parent.element.classList.contains('e-childgrid')) {\n                    this.focusOutFromChildGrid(e);\n                }\n                return;\n            }\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-groupdroparea')) {\n                if (this.parent.element.classList.contains('e-childgrid')) {\n                    e.preventDefault();\n                    this.parent.element.focus();\n                }\n                return;\n            }\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-toolbar')) {\n                if (this.parent.allowGrouping && this.parent.groupSettings.showDropArea) {\n                    var groupModule = this.parent.groupModule;\n                    var focusableGroupedItems = groupModule.getFocusableGroupedItems();\n                    e.preventDefault();\n                    if (focusableGroupedItems.length > 0) {\n                        focusableGroupedItems[focusableGroupedItems.length - 1].focus();\n                    }\n                    else {\n                        groupModule.element.focus();\n                    }\n                }\n                else if (this.parent.element.classList.contains('e-childgrid')) {\n                    e.preventDefault();\n                    this.parent.element.focus();\n                }\n                return;\n            }\n        }\n        var focusFirstHeaderCell = false;\n        if (e.action === 'tab' && e.target && (e.target === this.parent.element || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-toolbar')\n            || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-groupdroparea'))) {\n            if (this.parent.allowGrouping && this.parent.groupSettings.showDropArea\n                && (e.target === this.parent.element || e.target.classList.contains('e-groupdroparea'))) {\n                var groupModule = this.parent.groupModule;\n                var focusableGroupedItems = groupModule.getFocusableGroupedItems();\n                if (focusableGroupedItems.length > 0) {\n                    e.preventDefault();\n                    focusableGroupedItems[0].focus();\n                    return;\n                }\n                if (!e.target.classList.contains('e-groupdroparea')) {\n                    e.preventDefault();\n                    groupModule.element.focus();\n                    return;\n                }\n            }\n            if ((this.parent.toolbar || this.parent.toolbarTemplate) && (e.target === this.parent.element\n                || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-groupdroparea')\n                || e.target.classList.contains('e-toolbar'))) {\n                var toolbarElement = this.parent.toolbarModule.element;\n                var focusableToolbarItems = this.parent.toolbarModule.getFocusableToolbarItems();\n                if (focusableToolbarItems.length > 0) {\n                    e.preventDefault();\n                    focusableToolbarItems[0].querySelector('.e-toolbar-item-focus,.e-btn,.e-input').focus();\n                    return;\n                }\n                if (!e.target.classList.contains('e-toolbar')) {\n                    e.preventDefault();\n                    toolbarElement.focus();\n                    return;\n                }\n            }\n            if (e.target === this.parent.element || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-toolbar')\n                || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-groupdroparea')) {\n                focusFirstHeaderCell = true;\n            }\n        }\n        if (focusFirstHeaderCell) {\n            if (this.parent.allowGrouping && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.groupSettings.columns)\n                && this.parent.groupSettings.columns.length === this.parent.columns.length) {\n                this.setActive(true);\n            }\n            else {\n                this.setActive(false);\n            }\n            this.active.matrix.current = [0, -1];\n        }\n        this.activeKey = e.action;\n        var beforeArgs = { cancel: false, byKey: true, byClick: false, keyArgs: e };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_5__.beforeCellFocused, beforeArgs);\n        if (beforeArgs.cancel) {\n            return;\n        }\n        var bValue = this.getContent().matrix.current;\n        var prevBatchValue = this.active && this.active.matrix.current ?\n            [this.active.matrix.current[0], this.active.matrix.current[1]] : undefined;\n        this.currentInfo.outline = true;\n        var swapInfo = this.getContent().jump(e.action, bValue);\n        this.swap = swapInfo;\n        if (swapInfo.swap && !(this.parent.editSettings.mode === 'Batch'\n            && (e.action === 'tab' || e.action === 'shiftTab'))) {\n            this.setActive(!swapInfo.toHeader);\n            this.getContent().matrix.current = this.getContent().getNextCurrent(bValue, swapInfo, this.active, e.action);\n            this.prevIndexes = {};\n        }\n        this.setActiveByKey(e.action, this.getContent());\n        var returnVal = this.content.lastIdxCell ? false : this.getContent().onKeyPress(e);\n        if (e.target && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-gridheader')) {\n            if (e.action === 'tab' && bValue.toString() === this.active.matrix.current.toString()) {\n                var nextHeaderCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, this.active.matrix.current, true);\n                var lastHeaderCellIndex = [this.active.matrix.matrix.length - 1,\n                    this.active.matrix.matrix[this.active.matrix.matrix.length - 1].length - 1];\n                if (this.active.matrix.matrix[lastHeaderCellIndex[0]][lastHeaderCellIndex[1]] === 0) {\n                    lastHeaderCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, lastHeaderCellIndex, false);\n                }\n                var nextCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(nextHeaderCellIndex[0] + \".cells.\" + nextHeaderCellIndex[1], this.active.matrix.getRowsFromIndex(nextHeaderCellIndex[0], this.active));\n                if (nextCell && nextCell.getBoundingClientRect().width === 0\n                    && this.active.matrix.matrix.length - 1 === nextHeaderCellIndex[0]) {\n                    lastHeaderCellIndex = this.active.matrix.nextVisibleCellFocus(nextHeaderCellIndex[0], nextHeaderCellIndex[1], e.action, this.active.keyActions[e.action], this.active, this.active.matrix.current[1]);\n                }\n                if (this.active.matrix.current.toString() === lastHeaderCellIndex.toString() && this.content.matrix.matrix.length) {\n                    returnVal = true;\n                    this.setActive(true);\n                    var firstContentCellIndex = [0, 0];\n                    if (this.parent.allowPaging && this.parent.pagerModule.pagerObj.element.querySelector('.e-pagercontainer')) {\n                        this.parent.pagerModule.pagerObj.element.querySelector('.e-pagercontainer').setAttribute('aria-hidden', 'true');\n                    }\n                    if (this.active.matrix.matrix[firstContentCellIndex[0]][firstContentCellIndex[1]] === 0) {\n                        firstContentCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, [0, 0], true);\n                    }\n                    var firstCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(firstContentCellIndex[0] + \".cells.\" + firstContentCellIndex[1], this.active.matrix.getRowsFromIndex(firstContentCellIndex[0], this.active));\n                    if (firstCell && firstCell.getBoundingClientRect().width === 0) {\n                        firstContentCellIndex = this.active.matrix.nextVisibleCellFocus(firstContentCellIndex[0], firstContentCellIndex[1], e.action, this.active.keyActions[e.action], this.active, this.active.matrix.current[1]);\n                    }\n                    this.active.matrix.current = this.parent.editSettings.mode === 'Batch' ?\n                        this.isValidBatchEditCell(firstContentCellIndex) ? firstContentCellIndex :\n                            this.findBatchEditCell(firstContentCellIndex, true) : firstContentCellIndex;\n                    if (this.parent.enableVirtualization && !this.parent.enableColumnVirtualization\n                        && this.parent.contentModule.prevInfo.blockIndexes[0] !== 1) {\n                        e.preventDefault();\n                        this.removeFocus();\n                        var virtual = this.parent.contentModule;\n                        virtual.firstCellFocus = true;\n                        virtual.content.scrollTop = 0;\n                        return;\n                    }\n                }\n                else if (this.active.matrix.current.toString() !== nextHeaderCellIndex.toString()) {\n                    this.active.matrix.current = nextHeaderCellIndex;\n                }\n            }\n            if (e.action === 'shiftTab' && bValue.toString() === this.active.matrix.current.toString()) {\n                var previousCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, this.active.matrix.current, false);\n                var prevCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(previousCellIndex[0] + \".cells.\" + previousCellIndex[1], this.active.matrix.getRowsFromIndex(previousCellIndex[0], this.active));\n                if (prevCell && prevCell.getBoundingClientRect().width === 0 && previousCellIndex[0] === 0) {\n                    previousCellIndex = this.active.matrix.nextVisibleCellFocus(previousCellIndex[0], previousCellIndex[1], e.action, this.active.keyActions[e.action], this.active, this.active.matrix.current[1]);\n                }\n                if (previousCellIndex.toString() === this.active.matrix.current.toString()) {\n                    this.focusOutFromHeader(e);\n                    return;\n                }\n                if (this.active.matrix.current.toString() !== previousCellIndex.toString() && !returnVal) {\n                    returnVal = true;\n                    var prevCell_1 = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(previousCellIndex[0] + \".cells.\" + previousCellIndex[1], this.active.matrix.getRowsFromIndex(previousCellIndex[0], this.active));\n                    if (prevCell_1 && prevCell_1.getBoundingClientRect().width === 0 && previousCellIndex[0] === 0) {\n                        previousCellIndex = this.active.matrix.nextVisibleCellFocus(previousCellIndex[0], previousCellIndex[1], e.action, this.active.keyActions[e.action], this.active, this.active.matrix.current[1]);\n                    }\n                    this.active.matrix.current = previousCellIndex;\n                }\n            }\n        }\n        if (e.target && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-gridcontent')) {\n            if (this.parent.allowPaging && this.parent.pagerModule.pagerObj.element.querySelector('.e-pagercontainer')) {\n                this.parent.pagerModule.pagerObj.element.querySelector('.e-pagercontainer').removeAttribute('aria-hidden');\n            }\n            if (this.parent.editSettings.mode === 'Batch' && (e.action === 'tab' || e.action === 'shiftTab')) {\n                this.active.matrix.current = this.findBatchEditCell(prevBatchValue, e.action === 'tab' ? true : false);\n                if (e.action === 'tab' && prevBatchValue.toString() === this.active.matrix.current.toString()) {\n                    this.parent.editModule.editModule.addBatchRow = true;\n                }\n            }\n            if (e.action === 'shiftTab' && bValue.toString() === this.active.matrix.current.toString()) {\n                if (this.parent.allowGrouping && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.groupSettings.columns)\n                    && this.parent.groupSettings.columns.length === this.parent.columns.length) {\n                    this.focusOutFromHeader(e);\n                    return;\n                }\n                var firstContentCellIndex = [0, 0];\n                if (this.active.matrix.matrix[firstContentCellIndex[0]][firstContentCellIndex[1]] === 0) {\n                    firstContentCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, [0, 0], true);\n                }\n                var firstCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(firstContentCellIndex[0] + \".cells.\" + firstContentCellIndex[1], this.active.matrix.getRowsFromIndex(firstContentCellIndex[0], this.active));\n                if (firstCell && firstCell.getBoundingClientRect().width === 0) {\n                    firstContentCellIndex = this.active.matrix.nextVisibleCellFocus(firstContentCellIndex[0], firstContentCellIndex[1], e.action, this.active.keyActions[e.action], this.active, this.active.matrix.current[1]);\n                }\n                if (!returnVal && (firstContentCellIndex.toString() === this.active.matrix.current.toString()\n                    || (this.parent.editSettings.mode === 'Batch'\n                        && prevBatchValue.toString() === this.active.matrix.current.toString()))) {\n                    returnVal = true;\n                    this.setActive(false);\n                    this.setLastContentCellActive();\n                }\n            }\n        }\n        if (returnVal === false) {\n            this.clearIndicator();\n            if (e.action === 'shiftTab' && bValue.toString() === [0, 0].toString()) {\n                this.parent.element.tabIndex = -1;\n            }\n            if (this.parent.allowPaging && !this.parent.pagerModule.pagerObj.checkPagerHasFocus() && this.allowToPaging(e)\n                && bValue.toString() !== [0, 0].toString()) {\n                e.preventDefault();\n                if (e.keyCode === 40) {\n                    this.parent.pagerModule.pagerObj.setPagerContainerFocus();\n                    return;\n                }\n                else if (e.keyCode === 9) {\n                    this.parent.pagerModule.pagerObj.setPagerFocus();\n                    return;\n                }\n            }\n            if (this.parent.element.classList.contains('e-childgrid')) {\n                this.focusOutFromChildGrid(e);\n            }\n            return;\n        }\n        this.header.action = e.action;\n        this.header.currentTarget = null;\n        this.header.focusType = 'key';\n        if (e.target && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-fltrtemp') && (e.action === 'tab' || e.action === 'shiftTab')) {\n            var target = e.target;\n            var focusElement = [].slice.call((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, 'th').querySelectorAll('.e-fltrtemp-focus'));\n            if (focusElement.length) {\n                var elementIndex = focusElement.indexOf(target);\n                var resetActive = ((e.action === 'tab' && elementIndex < focusElement.length - 1)\n                    || (e.action === 'shiftTab' && elementIndex > 0)) ? true : false;\n                if (resetActive) {\n                    this.setActive(false);\n                    this.active.matrix.current = bValue;\n                    this.active.currentTarget = target;\n                }\n            }\n        }\n        if (focusFirstHeaderCell && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(this.active.getTable(), 'e-gridheader')\n            && e.target && e.target.id === this.parent.element.id + '_searchbar') {\n            this.parent.searchModule.headerFocus = true;\n        }\n        e.preventDefault();\n        this.focus(e);\n    };\n    FocusStrategy.prototype.isValidBatchEditCell = function (cellIndex) {\n        var cell = this.active.getTable().rows[cellIndex[0]].cells[cellIndex[1]];\n        var tr = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(cell, 'tr');\n        var cellColIndex = parseInt(cell.getAttribute('aria-colindex'), 10) - 1;\n        var cellCol = this.parent.getColumns()[parseInt(cellColIndex.toString(), 10)];\n        if (this.active.matrix.matrix[cellIndex[0]][cellIndex[1]] === 1\n            && (!tr.classList.contains('e-row') || (tr.classList.contains('e-insertedrow') || !cellCol.isPrimaryKey) && cellCol.allowEditing)) {\n            return true;\n        }\n        return false;\n    };\n    FocusStrategy.prototype.findBatchEditCell = function (currentCellIndex, next, limitRow) {\n        var cellIndex = currentCellIndex;\n        var tempCellIndex = currentCellIndex;\n        var cellIndexObtain = false;\n        while (!cellIndexObtain) {\n            var prevTempCellIndex = tempCellIndex;\n            tempCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, tempCellIndex, next);\n            var tempCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(tempCellIndex[0] + \".cells.\" + tempCellIndex[1], this.active.getTable().rows);\n            if (tempCell && tempCell.getBoundingClientRect().width === 0) {\n                tempCellIndex = this.active.matrix.nextVisibleCellFocus(tempCellIndex[0], tempCellIndex[1], this.activeKey, this.active.keyActions[this.activeKey], this.active, this.active.matrix.current[1]);\n            }\n            if ((prevTempCellIndex.toString() === tempCellIndex.toString())\n                || (limitRow && prevTempCellIndex[0] !== tempCellIndex[0])) {\n                cellIndexObtain = true;\n                continue;\n            }\n            if (this.isValidBatchEditCell(tempCellIndex)) {\n                cellIndex = tempCellIndex;\n                cellIndexObtain = true;\n            }\n        }\n        return cellIndex;\n    };\n    FocusStrategy.prototype.setLastContentCellActive = function () {\n        var lastContentCellIndex = [this.active.matrix.matrix.length - 1,\n            this.active.matrix.matrix[this.active.matrix.matrix.length - 1].length - 1];\n        if (this.active.matrix.matrix[lastContentCellIndex[0]][lastContentCellIndex[1]] === 0) {\n            lastContentCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.active.matrix.matrix, lastContentCellIndex, false);\n        }\n        var lastCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(lastContentCellIndex[0] + \".cells.\" + lastContentCellIndex[1], this.active.matrix.getRowsFromIndex(lastContentCellIndex[0], this.active));\n        if (lastCell && lastCell.getBoundingClientRect().width === 0) {\n            lastContentCellIndex = this.active.matrix.nextVisibleCellFocus(lastContentCellIndex[0], lastContentCellIndex[1], this.activeKey, this.active.keyActions[this.activeKey], this.active, this.active.matrix.current[1]);\n        }\n        this.active.matrix.current = lastContentCellIndex;\n    };\n    FocusStrategy.prototype.focusOutFromChildGrid = function (e) {\n        var parentTable = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(this.parent.element, 'e-table');\n        var parentGrid = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(parentTable, 'e-grid').ej2_instances[0];\n        var parentCell = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(this.parent.element, 'e-detailcell');\n        var uid = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(this.parent.element, 'e-detailrow').getAttribute('data-uid');\n        var parentRows = [].slice.call(parentGrid.getContentTable().rows);\n        var parentRowIndex = parentRows.map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n        if (e.action === 'tab' && parentRowIndex >= parentRows.length - 1) {\n            return;\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.parent.element], ['e-focus']);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([parentCell], ['e-focused']);\n        parentCell.tabIndex = -1;\n        e.preventDefault();\n        var nextFocusCell;\n        parentGrid.focusModule.removeFocus();\n        if (e.action === 'shiftTab') {\n            var previousRow = parentRows[parentRowIndex - 1];\n            var rowCells = previousRow.cells;\n            for (var i = rowCells.length - 1; i >= 0; i--) {\n                nextFocusCell = rowCells[parseInt(i.toString(), 10)];\n                if (!nextFocusCell.classList.contains('e-hide')) {\n                    parentGrid.focusModule.active.matrix.current = [parentRowIndex - 1, i];\n                    break;\n                }\n            }\n        }\n        else {\n            nextFocusCell = parentRows[parentRowIndex + 1].cells[0];\n            parentGrid.focusModule.active.matrix.current = [parentRowIndex + 1, 0];\n        }\n        parentGrid.focusModule.currentInfo.element = nextFocusCell;\n        parentGrid.focusModule.currentInfo.elementToFocus = nextFocusCell;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([nextFocusCell], ['e-focused', 'e-focus']);\n        nextFocusCell.tabIndex = 0;\n        nextFocusCell.focus();\n    };\n    FocusStrategy.prototype.focusOutFromHeader = function (e) {\n        this.removeFocus();\n        if (this.parent.toolbar || this.parent.toolbarTemplate) {\n            var toolbarElement = this.parent.toolbarModule.element;\n            var focusableToolbarItems = this.parent.toolbarModule.getFocusableToolbarItems();\n            e.preventDefault();\n            if (focusableToolbarItems.length > 0) {\n                focusableToolbarItems[focusableToolbarItems.length - 1].querySelector('.e-toolbar-item-focus,.e-btn,.e-input').focus();\n            }\n            else {\n                toolbarElement.focus();\n            }\n            return;\n        }\n        if (this.parent.allowGrouping && this.parent.groupSettings.showDropArea) {\n            var groupModule = this.parent.groupModule;\n            var focusableGroupedItems = groupModule.getFocusableGroupedItems();\n            e.preventDefault();\n            if (focusableGroupedItems.length > 0) {\n                focusableGroupedItems[focusableGroupedItems.length - 1].focus();\n            }\n            else {\n                groupModule.element.focus();\n            }\n            return;\n        }\n        if (this.parent.element.classList.contains('e-childgrid')) {\n            e.preventDefault();\n            this.parent.element.focus();\n        }\n    };\n    FocusStrategy.prototype.allowToPaging = function (e) {\n        if (this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.allowAdding && e.keyCode !== 40) {\n            return false;\n        }\n        return true;\n    };\n    FocusStrategy.prototype.skipOn = function (e) {\n        var target = e.target;\n        if (!target) {\n            return false;\n        }\n        if (!this.parent.isEdit && target && target.closest('.e-unboundcell') && this.currentInfo.skipAction && ((e.action === 'shiftTab' &&\n            this.commandColumnFocusElement(target.closest('.e-unboundcell'), false) === target) ||\n            (e.action === 'tab' &&\n                this.commandColumnFocusElement(target.closest('.e-unboundcell'), true) === target))) {\n            return this.currentInfo.skipAction = false;\n        }\n        if (this.currentInfo.skipAction) {\n            this.clearIndicator();\n            return true;\n        }\n        if (['pageUp', 'pageDown', 'altDownArrow'].indexOf(e.action) > -1) {\n            this.clearIndicator();\n            return true;\n        }\n        if (this.parent.allowGrouping) {\n            var focusableGroupedItems = this.parent.groupModule.getFocusableGroupedItems();\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-groupheadercell')\n                && !((e.target === focusableGroupedItems[0] && e.action === 'shiftTab')\n                    || (e.target === focusableGroupedItems[focusableGroupedItems.length - 1] && e.action === 'tab'))) {\n                return true;\n            }\n        }\n        if (this.parent.toolbar || this.parent.toolbarTemplate) {\n            var toolbarElement = this.parent.toolbarModule.element;\n            var focusableToolbarItems = toolbarElement\n                .querySelectorAll('.e-toolbar-item:not(.e-overlay):not(.e-hidden)');\n            if ((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-toolbar-item')\n                && !(focusableToolbarItems.length > 0 && (((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-toolbar-item') === focusableToolbarItems[0] && e.action === 'shiftTab')\n                    || ((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-toolbar-item') === focusableToolbarItems[focusableToolbarItems.length - 1] && e.action === 'tab')))) {\n                return true;\n            }\n        }\n        var th = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, 'th') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, 'th').tabIndex;\n        if (e.target.classList.contains('e-filterbaroperator') && (e.keyCode === 13 || e.keyCode === 27)) {\n            var inputTarget = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-filterbarcell');\n            inputTarget.querySelector('input').focus();\n        }\n        var addNewRow = this.parent.editSettings.showAddNewRow && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.activeElement, '.e-addedrow') !== null;\n        if ((th && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.activeElement, '.e-filterbarcell') !== null) || addNewRow) {\n            this.removeFocus();\n        }\n        var filterCell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.activeElement, '.e-filterbarcell') !== null;\n        if (this.parent.enableHeaderFocus && filterCell) {\n            var matrix = this.active.matrix;\n            var current = matrix.current;\n            filterCell = matrix.matrix[current[0]].lastIndexOf(1) !== current[1];\n        }\n        if (this.parent.isEdit && (e.action === 'tab' || e.action === 'shiftTab') && this.parent.editSettings.mode === 'Normal'\n            && !this.parent.editSettings.showAddNewRow && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(target, 'e-addedrow'))) {\n            var inputElements = this.parent.editModule.formObj.element.querySelectorAll('input:not([type=\"hidden\"],.e-numeric-hidden,.e-disabled), select:not([aria-hidden=\"true\"]), button:not(.e-hide), textarea:not(.e-hide,.e-disabled,[disabled])');\n            var inputTarget = target.classList.contains('e-ddl') ? target.querySelector('input') : target;\n            var firstEditCell = e.action === 'tab' && inputTarget === inputElements[inputElements.length - 1];\n            var lastEditCell = e.action === 'shiftTab' && inputTarget === inputElements[0];\n            if (firstEditCell || lastEditCell) {\n                e.preventDefault();\n                var focusElement = inputElements[firstEditCell ? 0 : inputElements.length - 1];\n                focusElement = focusElement.parentElement.classList.contains('e-ddl') ? focusElement.parentElement : focusElement;\n                focusElement.focus();\n            }\n        }\n        return (e.action === 'delete'\n            || (this.parent.editSettings.mode !== 'Batch' && ((this.parent.isEdit && (!this.parent.editSettings.showAddNewRow ||\n                (this.parent.editSettings.showAddNewRow && ((!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.element.querySelector('.e-editedrow')) ||\n                    (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(target, 'e-addedrow')) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'input')) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(document.querySelector('.e-popup-open'))) ||\n                    (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(target, 'e-addedrow')) && (target && !target.querySelector('.e-cancel-icon')) &&\n                        !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(target, 'e-unboundcell')))))))) || ['insert', 'f2'].indexOf(e.action) > -1))\n            || ((filterCell && this.parent.enableHeaderFocus) || ((filterCell || addNewRow) && e.action !== 'tab' && e.action !== 'shiftTab') ||\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(document.activeElement, '#' + this.parent.element.id + '_searchbar') !== null\n                    && ['enter', 'leftArrow', 'rightArrow',\n                        'shiftLeft', 'shiftRight', 'ctrlPlusA'].indexOf(e.action) > -1)\n            || ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridContent) === null && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridHeader) === null\n                && !(e.target === this.parent.element || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-toolbar')\n                    || (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-groupdroparea')))\n            || (e.action === 'space' && (!target.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridChkBox) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.' + _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.gridChkBox) === null\n                && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-headerchkcelldiv') === null))) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, '.e-filter-popup') !== null;\n    };\n    FocusStrategy.prototype.focusVirtualElement = function (e) {\n        var _this = this;\n        if (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) {\n            var data = { virtualData: {}, isAdd: false, isCancel: false };\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_5__.getVirtualData, data);\n            var isKeyFocus = this.actions.some(function (value) { return value === _this.activeKey; });\n            var isSelected = this.parent.contentModule ?\n                this.parent.contentModule.selectedRowIndex > -1 : false;\n            if (data.isAdd || Object.keys(data.virtualData).length || isKeyFocus || data.isCancel || isSelected) {\n                this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_5__.resetVirtualFocus, { isCancel: false });\n                data.isCancel = false;\n                if (((this.parent.enableVirtualization && !this.parent.selectVirtualRowOnAdd) && (!e || (e && e.action !== 'ctrlHome' && e.action !== 'ctrlEnd'))) ||\n                    !this.parent.enableVirtualization) {\n                    this.parent.contentModule.selectedRowIndex = -1;\n                }\n                this.parent.selectVirtualRowOnAdd = false;\n                if (isKeyFocus) {\n                    this.activeKey = this.empty;\n                    this.parent.notify('virtaul-key-handler', e);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this.currentInfo.elementToFocus.focus({ preventScroll: true });\n            }\n            else {\n                if (this.isVirtualScroll || this.isInfiniteScroll) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.currentInfo.elementToFocus.focus({ preventScroll: true });\n                }\n                else {\n                    this.currentInfo.elementToFocus.focus();\n                }\n            }\n        }\n        this.isVirtualScroll = this.isInfiniteScroll = false;\n    };\n    FocusStrategy.prototype.getFocusedElement = function () {\n        return this.currentInfo.elementToFocus;\n    };\n    FocusStrategy.prototype.getContent = function () {\n        return this.active || this.content;\n    };\n    FocusStrategy.prototype.setActive = function (content) {\n        this.active = content ? this.content : this.header;\n    };\n    FocusStrategy.prototype.setFocusedElement = function (element, e) {\n        var _this = this;\n        this.currentInfo.elementToFocus = element;\n        setTimeout(function () {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.currentInfo.elementToFocus)) {\n                var filterMenuElement = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.parent.element.querySelector('.e-flmenu')) ?\n                    document.querySelector('.e-grid-popup .e-flmenu') : _this.parent.element.querySelector('.e-flmenu');\n                if ((_this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filterMenuElement)) {\n                    _this.focusVirtualElement(e);\n                }\n                else if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(filterMenuElement) ||\n                    (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(document.activeElement, 'e-flmenu-valuediv') !== filterMenuElement.querySelector('.e-flmenu-valuediv')) {\n                    _this.currentInfo.elementToFocus.focus();\n                }\n            }\n        }, 0);\n    };\n    FocusStrategy.prototype.focus = function (e) {\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_5__.virtaulCellFocus, e);\n        this.removeFocus();\n        this.addFocus(this.getContent().getFocusInfo(), e);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    FocusStrategy.prototype.removeFocus = function (e) {\n        if (!this.currentInfo.element) {\n            return;\n        }\n        if (this.parent.isReact && !this.parent.isEdit && this.currentInfo.element.classList.contains('e-rowcell')\n            && !this.currentInfo.element.parentElement && !(this.parent.allowGrouping\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.groupSettings.columns) && this.parent.groupSettings.columns.length) &&\n            this.parent.getRowByIndex(this.prevIndexes.rowIndex)) {\n            var cellElem = this.parent.getCellFromIndex(this.prevIndexes.rowIndex, this.prevIndexes\n                .cellIndex);\n            this.currentInfo.element = cellElem ? cellElem : this.currentInfo.element;\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.currentInfo.element, this.currentInfo.elementToFocus], ['e-focused', 'e-focus']);\n        this.currentInfo.element.tabIndex = -1;\n    };\n    /**\n     * @returns {void}\n     * @hidden */\n    FocusStrategy.prototype.addOutline = function () {\n        var info = this.getContent().getFocusInfo();\n        if (info.element) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([info.element], ['e-focused']);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([info.elementToFocus], ['e-focus']);\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden */\n    FocusStrategy.prototype.focusHeader = function () {\n        this.setActive(false);\n        this.resetFocus();\n    };\n    /**\n     * @returns {void}\n     * @hidden */\n    FocusStrategy.prototype.focusContent = function () {\n        this.setActive(true);\n        this.resetFocus();\n    };\n    FocusStrategy.prototype.resetFocus = function () {\n        var current = this.getContent().matrix.get(0, -1, [0, 1], null, this.getContent().validator());\n        this.getContent().matrix.select(current[0], current[1]);\n        this.focus();\n    };\n    FocusStrategy.prototype.addFocus = function (info, e) {\n        this.currentInfo = info;\n        this.currentInfo.outline = info.outline && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e) || this.isVirtualScroll);\n        if (this.isInfiniteScroll) {\n            this.currentInfo.outline = true;\n        }\n        if (!info.element) {\n            return;\n        }\n        var isFocused = info.elementToFocus.classList.contains('e-focus');\n        if (isFocused) {\n            return;\n        }\n        if (this.currentInfo.outline) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([info.element], ['e-focused']);\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([info.elementToFocus], ['e-focus']);\n        info.element.tabIndex = 0;\n        if (!isFocused) {\n            this.setFocusedElement(info.elementToFocus, e);\n        }\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_5__.cellFocused, {\n            element: info.elementToFocus,\n            parent: info.element,\n            indexes: this.getContent().matrix.current,\n            byKey: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e),\n            byClick: (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e),\n            keyArgs: e,\n            isJump: this.swap.swap,\n            container: this.getContent().getInfo(e),\n            outline: !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(e),\n            swapInfo: this.swap\n        });\n        var _a = this.getContent().matrix.current, rowIndex = _a[0], cellIndex = _a[1];\n        this.prevIndexes = { rowIndex: rowIndex, cellIndex: cellIndex };\n        this.focusedColumnUid = this.parent.getColumnByIndex(cellIndex).uid;\n        this.focusByClick = false;\n    };\n    FocusStrategy.prototype.refreshMatrix = function (content) {\n        var _this = this;\n        return function (e) {\n            if (content && !_this.content) {\n                _this.content = new ContentFocus(_this.parent);\n            }\n            if (!content && !_this.header) {\n                _this.header = new HeaderFocus(_this.parent);\n            }\n            var cFocus = content ? _this.content : _this.header;\n            var frozenRow = _this.parent.frozenRows;\n            var batchLen = 0;\n            if (frozenRow && _this.parent.editSettings.mode === 'Batch') {\n                batchLen = _this.parent.getHeaderContent().querySelectorAll('.e-insertedrow').length +\n                    _this.parent.getHeaderContent().querySelectorAll('.e-hiddenrow').length;\n            }\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.parent.groupSettings.columns) && _this.parent.groupSettings.columns.length && frozenRow && content) {\n                frozenRow = 0;\n                for (var i = 0; i < e.rows.length; i++) {\n                    frozenRow++;\n                    if (e.rows[parseInt(i.toString(), 10)].index + 1 === _this.parent.frozenRows) {\n                        break;\n                    }\n                }\n                _this.groupedFrozenRow = frozenRow;\n            }\n            var rows = content ? e.rows.slice(frozenRow + batchLen) : e.rows;\n            var updateRow = content ? e.rows.slice(0, frozenRow + batchLen) : e.rows;\n            if (_this.parent.isCollapseStateEnabled() && content) {\n                rows = rows.filter(function (x) { return x.visible !== false; });\n            }\n            var isRowTemplate = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(_this.parent.rowTemplate);\n            if (frozenRow && ((_this.parent.editSettings.mode === 'Batch' && content && (e.name === 'batchDelete' || e.name === 'batchAdd' ||\n                e.name === 'batchCancel' || (e.args && (e.args.requestType === 'batchsave')))) ||\n                (e.args && (e.args.requestType === 'delete' || e.args.requestType === 'save')))) {\n                var matrixcs = _this.header.matrix.matrix;\n                var hdrLen = _this.parent.headerModule.rows.length;\n                matrixcs.splice(hdrLen, matrixcs.length - hdrLen);\n            }\n            var matrix = cFocus.matrix.generate(updateRow, cFocus.selector, isRowTemplate);\n            cFocus.matrix.generate(rows, cFocus.selector, isRowTemplate);\n            var isScroll = _this.parent.enableVirtualization || _this.parent.enableInfiniteScrolling;\n            if ((_this.parent.editSettings.showAddNewRow && content && _this.header && _this.header.matrix) &&\n                (!isScroll || (isScroll && _this.parent.isAddNewRow))) {\n                var tempMatrix = _this.header.matrix.matrix;\n                var lastRowHeaderIdx = _this.parent.allowFiltering && _this.parent.filterSettings.type === 'FilterBar' ? 2 : 1;\n                cFocus.matrix.rows = _this.parent.frozenRows && _this.parent.editSettings.newRowPosition === 'Top' ?\n                    cFocus.matrix.rows : ++cFocus.matrix.rows;\n                if (_this.parent.editSettings.newRowPosition === 'Top') {\n                    (_this.parent.frozenRows || isScroll ?\n                        matrix : cFocus.matrix.matrix).unshift(_this.refreshAddNewRowMatrix(tempMatrix[tempMatrix.length -\n                        lastRowHeaderIdx]));\n                }\n                else {\n                    cFocus.matrix.matrix.push(_this.refreshAddNewRowMatrix(tempMatrix[tempMatrix.length - lastRowHeaderIdx]));\n                }\n                _this.parent.isAddNewRow = false;\n            }\n            if (!(_this.parent.isFrozenGrid() && (e.args && (e.args.requestType === 'sorting'\n                || e.args.requestType === 'batchsave' || e.args.requestType === 'paging'))) ||\n                (frozenRow && _this.parent.editSettings.mode === 'Batch' && content && (e.name === 'batchDelete' || e.name === 'batchAdd' ||\n                    e.name === 'batchCancel' || e.args.requestType === 'batchsave'))) {\n                cFocus.generateRows(updateRow, {\n                    matrix: matrix, handlerInstance: _this.header\n                });\n            }\n            if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice && e && e.args) {\n                if (!_this.focusByClick && e.args.requestType === 'paging' && !_this.parent.pagerModule.pagerObj.checkPagerHasFocus()) {\n                    _this.skipFocus = false;\n                    _this.parent.element.focus();\n                }\n                if (e.args.requestType === 'grouping') {\n                    _this.skipFocus = true;\n                }\n            }\n            if (e && e.args && e.args.requestType === 'virtualscroll') {\n                if (_this.currentInfo.uid) {\n                    var index_1;\n                    var bool = e.rows.some(function (row, i) {\n                        index_1 = i;\n                        return row.uid === _this.currentInfo.uid;\n                    });\n                    if (bool) {\n                        _this.content.matrix.current[0] = index_1;\n                        _this.content.matrix.current[1] = _this.parent.getColumnIndexByUid(_this.focusedColumnUid) || 0;\n                        var frzLeftCount = _this.parent.getVisibleFrozenLeftCount();\n                        var frzRightCount = _this.parent.getVisibleFrozenRightCount();\n                        if (_this.parent.enableColumnVirtualization && !(frzLeftCount && frzRightCount) && _this.parent.isFrozenGrid() &&\n                            e.args.virtualInfo.direction === 'right') {\n                            _this.content.matrix.current[1] = _this.content.matrix.current[1] - (frzLeftCount + (frzRightCount ? frzRightCount + 1 : 0));\n                        }\n                        var isGroup = _this.parent.allowGrouping && _this.parent.groupSettings.columns.length ? true : false;\n                        if (isGroup) {\n                            _this.content.matrix.current[1] = _this.prevIndexes.cellIndex;\n                            if (_this.virtualSelectionInfo.isPending) {\n                                _this.content.matrix.current[0] = _this.virtualSelectionInfo.direction === 'downArrow' ? _this.content.matrix.current[0] + 1\n                                    : _this.content.matrix.current[0] - 1;\n                            }\n                        }\n                        var focusElement = _this.getContent().getFocusInfo().elementToFocus;\n                        if (focusElement) {\n                            var cellPosition = focusElement.getBoundingClientRect();\n                            var gridPosition = _this.parent.element.getBoundingClientRect();\n                            var freezeLeftColWidth = 0;\n                            var freezeRightColWidth = 0;\n                            if (_this.parent.enableColumnVirtualization && !(frzLeftCount && frzRightCount) && _this.parent.isFrozenGrid() &&\n                                e.args.virtualInfo.direction === 'right') {\n                                if (frzLeftCount) {\n                                    freezeLeftColWidth = _this.parent.leftrightColumnWidth('left');\n                                }\n                                else {\n                                    freezeRightColWidth = _this.parent.leftrightColumnWidth('right');\n                                }\n                            }\n                            if ((cellPosition.top >= 0 && cellPosition.left >= 0 &&\n                                (cellPosition.right - freezeLeftColWidth - freezeRightColWidth) <= (Math.min(gridPosition.right, window.innerWidth || document.documentElement.clientWidth) + freezeRightColWidth)\n                                && cellPosition.bottom <= Math.min(gridPosition.bottom, window.innerHeight ||\n                                    document.documentElement.clientHeight)) || isGroup) {\n                                _this.isVirtualScroll = true;\n                                _this.focus(isGroup && _this.virtualSelectionInfo.isPending ?\n                                    _this.virtualSelectionInfo.event : undefined);\n                            }\n                        }\n                    }\n                }\n                else if (e.args.focusElement && e.args.focusElement.classList.contains('e-filtertext')) {\n                    var focusElement = _this.parent.element.querySelector('#' + e.args.focusElement.id);\n                    if (focusElement) {\n                        focusElement.focus();\n                    }\n                }\n                _this.virtualSelectionInfo = {};\n            }\n            if (e && e.args && e.args.requestType === 'infiniteScroll') {\n                _this.isInfiniteScroll = true;\n            }\n        };\n    };\n    FocusStrategy.prototype.refreshAddNewRowMatrix = function (matrix) {\n        var cols = this.parent.getColumns();\n        var indent = this.parent.getIndentCount();\n        for (var i = indent; i < matrix.length - 1; i++) {\n            if (cols[i - indent] && cols[i - indent].visible && cols[i - indent].allowEditing) {\n                matrix[parseInt(i.toString(), 10)] = 1;\n            }\n            else {\n                matrix[parseInt(i.toString(), 10)] = 0;\n            }\n        }\n        return matrix;\n    };\n    FocusStrategy.prototype.addEventListener = function () {\n        var _this = this;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'mousedown', this.focusCheck, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'touchstart', this.focusCheck, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'focus', this.onFocus, this);\n        this.parent.element.addEventListener('focus', this.passiveHandler = function (e) { return _this.passiveFocus(e); }, true);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.parent.element, 'focusout', this.onBlur, this);\n        this.evtHandlers = [{ event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.keyPressed, handler: this.onKeyPress },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.click, handler: this.onClick },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.contentReady, handler: this.refMatrix },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.partialRefresh, handler: this.refMatrix },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.refreshExpandandCollapse, handler: this.refMatrix },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.showAddNewRowFocus, handler: this.showAddNewRowFocus },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.headerRefreshed, handler: this.refreshMatrix() },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.closeEdit, handler: this.restoreFocus },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.restoreFocus, handler: this.restoreFocus },\n            { event: 'start-edit', handler: this.clearIndicator },\n            { event: 'start-add', handler: this.clearIndicator },\n            { event: 'sorting-complete', handler: this.restoreFocus },\n            { event: 'filtering-complete', handler: this.filterfocus },\n            { event: 'custom-filter-close', handler: this.filterfocus },\n            { event: 'grouping-complete', handler: this.restoreFocusWithAction },\n            { event: 'ungrouping-complete', handler: this.restoreFocusWithAction },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.batchAdd, handler: this.refMatrix },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.batchCancel, handler: this.refMatrix },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.batchDelete, handler: this.refMatrix },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.detailDataBound, handler: this.refMatrix },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.onEmpty, handler: this.refMatrix },\n            { event: _base_constant__WEBPACK_IMPORTED_MODULE_5__.cellFocused, handler: this.internalCellFocus }];\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.addRemoveEventListener)(this.parent, this.evtHandlers, true, this);\n    };\n    FocusStrategy.prototype.showAddNewRowFocus = function () {\n        if (this.parent.editSettings.showAddNewRow) {\n            var startIdx = this.parent.editSettings.newRowPosition === 'Top' ? 0 : this.content.matrix.matrix.length - 1;\n            var startCellIdx = this.parent.getIndentCount();\n            if (this.parent.editSettings.newRowPosition === 'Top' && (this.parent.frozenRows ||\n                this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                var headrIdx = this.header.matrix.matrix.length - (this.groupedFrozenRow ?\n                    this.groupedFrozenRow : this.parent.frozenRows);\n                startCellIdx = this.findNextCellFocus(this.header.matrix.matrix[headrIdx - 1], startCellIdx);\n                this.header.matrix.current = [headrIdx - 1, startCellIdx];\n                this.active = this.header;\n            }\n            else {\n                startCellIdx = this.findNextCellFocus(this.content.matrix.matrix[parseInt(startIdx.toString(), 10)], startCellIdx);\n                this.content.matrix.current = [startIdx, startCellIdx];\n                this.active = this.content;\n            }\n            var addedrow = this.parent.element.querySelector('.e-addedrow');\n            if (addedrow && addedrow.querySelectorAll('tr') &&\n                addedrow.querySelector('tr').cells[parseInt(startCellIdx.toString(), 10)].querySelector('input')) {\n                addedrow.querySelector('tr').cells[parseInt(startCellIdx.toString(), 10)].querySelector('input').select();\n            }\n        }\n    };\n    FocusStrategy.prototype.findNextCellFocus = function (matrix, cellIndex) {\n        for (var i = cellIndex; i < matrix.length; i++) {\n            if (matrix[parseInt(i.toString(), 10)] === 1) {\n                return i;\n            }\n        }\n        return cellIndex;\n    };\n    FocusStrategy.prototype.filterfocus = function () {\n        if (this.parent.filterSettings.type !== 'FilterBar') {\n            this.removeFocus();\n            this.restoreFocus();\n        }\n    };\n    FocusStrategy.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'mousedown', this.focusCheck);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'touchstart', this.focusCheck);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'focus', this.onFocus);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.parent.element, 'focusout', this.onBlur);\n        this.parent.element.removeEventListener('focus', this.passiveHandler, true);\n        (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.addRemoveEventListener)(this.parent, this.evtHandlers, false);\n    };\n    FocusStrategy.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    FocusStrategy.prototype.restoreFocus = function (arg) {\n        if (arg && arg.requestType === 'sorting' && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(arg.target)) {\n            return;\n        }\n        var groupModule = this.parent.groupModule;\n        if (this.parent.allowGrouping && groupModule && (groupModule.groupSortFocus || groupModule.groupTextFocus)) {\n            groupModule.groupSortFocus = false;\n            groupModule.groupTextFocus = false;\n            return;\n        }\n        this.firstHeaderCellClick = true;\n        this.addFocus(this.getContent().getFocusInfo());\n        var requestTypes = ['add', 'save', 'delete', 'cancel', 'batchsave', 'batchDelete', 'batchCancel'];\n        var focusInfo = this.getContent().getFocusInfo();\n        if (arg && requestTypes.indexOf(arg.requestType) > -1 && focusInfo && focusInfo.elementToFocus && focusInfo.elementToFocus.matches('.e-rowcell.e-focus')) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([focusInfo.elementToFocus], ['e-focused', 'e-focus']);\n        }\n    };\n    FocusStrategy.prototype.restoreFocusWithAction = function (e) {\n        if (!this.parent.enableInfiniteScrolling &&\n            !(this.parent.groupModule && this.parent.groupModule.preventFocusOnGroup)) {\n            var matrix = this.getContent().matrix;\n            var current = matrix.current;\n            switch (e.requestType) {\n                case 'grouping':\n                case 'ungrouping':\n                    current[1] = current.length &&\n                        !this.parent.groupSettings.showGroupedColumn && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(matrix.matrix[current[0]]) ?\n                        matrix.matrix[current[0]].indexOf(1) : e.requestType === 'grouping' ? current[1] + 1 : current[1] - 1;\n                    break;\n            }\n            this.getContent().matrix.current = current;\n            this.prevIndexes = { rowIndex: current[0], cellIndex: current[1] };\n            var groupModule = this.parent.groupModule;\n            if (this.parent.allowGrouping && groupModule && groupModule.groupCancelFocus) {\n                var focusableGroupedItems = groupModule.getFocusableGroupedItems();\n                if (focusableGroupedItems.length) {\n                    if (focusableGroupedItems[0].parentElement.getAttribute('ej-mappingname') === e.columnName) {\n                        focusableGroupedItems[3].focus();\n                    }\n                    else {\n                        focusableGroupedItems[0].focus();\n                    }\n                }\n                else {\n                    groupModule.element.focus();\n                }\n                groupModule.groupCancelFocus = false;\n                return;\n            }\n            this.addFocus(this.getContent().getFocusInfo());\n        }\n    };\n    FocusStrategy.prototype.clearIndicator = function () {\n        if (!this.currentInfo.element || !this.currentInfo.elementToFocus) {\n            return;\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([this.currentInfo.element, this.currentInfo.elementToFocus], ['e-focus', 'e-focused']);\n    };\n    FocusStrategy.prototype.getPrevIndexes = function () {\n        var forget = this.forget;\n        this.forget = false;\n        return forget || !Object.keys(this.prevIndexes).length ? { rowIndex: null, cellIndex: null } : this.prevIndexes;\n    };\n    FocusStrategy.prototype.forgetPrevious = function () {\n        this.forget = true;\n    };\n    FocusStrategy.prototype.setActiveByKey = function (action, active) {\n        if (this.parent.frozenRows === 0) {\n            return;\n        }\n        // eslint-disable-next-line prefer-const\n        var info;\n        var actions = {\n            'home': function () { return ({ toHeader: !info.isContent, toFrozen: true }); },\n            'end': function () { return ({ toHeader: !info.isContent, toFrozen: false }); },\n            'ctrlHome': function () { return ({ toHeader: true, toFrozen: false }); },\n            'ctrlEnd': function () { return ({ toHeader: false, toFrozen: false }); }\n        };\n        if (!(action in actions)) {\n            return;\n        }\n        info = active.getInfo();\n        var swap = actions[\"\" + action]();\n        this.setActive(!swap.toHeader);\n        this.getContent().matrix.current = active.matrix.current;\n    };\n    FocusStrategy.prototype.internalCellFocus = function (e) {\n        if (!(e.byKey && e.container.isContent && ((e.keyArgs.action === 'enter' && e.parent.classList.contains('e-detailcell')) ||\n            ((e.keyArgs.action === 'tab' || e.keyArgs.action === 'shiftTab') && e.parent.classList.contains('e-unboundcell'))))) {\n            return;\n        }\n        this.clearIndicator();\n        var focusEle;\n        if (e.parent && e.parent.closest('.e-unboundcell') && e.keyArgs.action === 'shiftTab') {\n            focusEle = this.commandColumnFocusElement(e.parent, true);\n        }\n        else {\n            focusEle = this.getContent().getFocusable(this.getFocusedElement());\n        }\n        this.setFocusedElement(focusEle);\n        this.currentInfo.skipAction = true;\n    };\n    FocusStrategy.prototype.commandColumnFocusElement = function (cell, isLast) {\n        var commandButtons = cell.querySelectorAll('button:not(.e-hide)');\n        return isLast ? commandButtons[commandButtons.length - 1] : commandButtons[0];\n    };\n    return FocusStrategy;\n}());\n\n/**\n * Create matrix from row collection which act as mental model for cell navigation\n *\n * @hidden\n */\nvar Matrix = /** @class */ (function () {\n    function Matrix() {\n        this.matrix = [];\n        this.current = [];\n    }\n    Matrix.prototype.set = function (rowIndex, columnIndex, allow) {\n        rowIndex = Math.max(0, Math.min(rowIndex, this.rows));\n        columnIndex = Math.max(0, Math.min(columnIndex, this.columns));\n        this.matrix[parseInt(rowIndex.toString(), 10)] = this.matrix[parseInt(rowIndex.toString(), 10)] || [];\n        this.matrix[parseInt(rowIndex.toString(), 10)][parseInt(columnIndex.toString(), 10)] = allow ? 1 : 0;\n    };\n    Matrix.prototype.get = function (rowIndex, columnIndex, navigator, action, validator, active) {\n        var tmp = columnIndex;\n        if (rowIndex + navigator[0] < 0) {\n            return [rowIndex, columnIndex];\n        }\n        rowIndex = Math.max(0, Math.min(rowIndex + navigator[0], this.rows));\n        var emptyTable = true;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.matrix[parseInt(rowIndex.toString(), 10)])) {\n            return null;\n        }\n        columnIndex = Math.max(0, Math.min(columnIndex + navigator[1], this.matrix[parseInt(rowIndex.toString(), 10)].length - 1));\n        if (tmp + navigator[1] > this.matrix[parseInt(rowIndex.toString(), 10)].length - 1\n            && validator(rowIndex, columnIndex, action)) {\n            return [rowIndex, tmp];\n        }\n        var first = this.first(this.matrix[parseInt(rowIndex.toString(), 10)], columnIndex, navigator, true, action);\n        columnIndex = first === null ? tmp : first;\n        var val = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rowIndex + \".\" + columnIndex, this.matrix);\n        if (rowIndex === this.rows && (action === 'downArrow' || action === 'enter')) {\n            navigator[0] = -1;\n        }\n        var cell;\n        if (active) {\n            var rows = this.getRowsFromIndex(rowIndex, active);\n            cell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rowIndex + \".cells.\" + columnIndex, rows);\n        }\n        if (cell && cell.getBoundingClientRect().width === 0) {\n            var current = this.nextVisibleCellFocus(rowIndex, columnIndex, action, navigator, active, tmp);\n            rowIndex = current[0];\n            columnIndex = current[1];\n        }\n        if (first === null) {\n            for (var i = 0; i < this.rows; i++) {\n                if (this.matrix[parseInt(i.toString(), 10)].some(function (v) { return v === 1; })) {\n                    emptyTable = false;\n                    break;\n                }\n            }\n            if (emptyTable) {\n                rowIndex = this.current.length ? this.current[0] : 0;\n                return [rowIndex, columnIndex];\n            }\n        }\n        return this.inValid(val) || !validator(rowIndex, columnIndex, action) ?\n            this.get(rowIndex, tmp, navigator, action, validator) : [rowIndex, columnIndex];\n    };\n    Matrix.prototype.getRowsFromIndex = function (rowIndex, active) {\n        return active.getTable().rows[parseInt(rowIndex.toString(), 10)].classList.contains('e-addedrow') ?\n            active.getTable().rows[parseInt(rowIndex.toString(), 10)].querySelector('table').rows : active.getTable().rows;\n    };\n    Matrix.prototype.nextVisibleCellFocus = function (rowIndex, columnIndex, action, navigator, active, tmp) {\n        var rows = this.getRowsFromIndex(rowIndex, active);\n        var cell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rowIndex + \".cells.\" + columnIndex, rows);\n        var rowMatrix = active.matrix.matrix;\n        var maxRow = rowMatrix.length - 1;\n        var isTab = action === 'tab';\n        var isShiftTab = action === 'shiftTab';\n        var skipAction = action === 'enter' || action === 'shiftEnter' || action === 'downArrow' || action === 'upArrow';\n        if (skipAction) {\n            return [rowIndex, columnIndex];\n        }\n        while (cell && cell.getBoundingClientRect().width === 0) {\n            if ((isTab && rowIndex === maxRow && columnIndex === rowMatrix[parseInt(rowIndex.toString(), 10)].lastIndexOf(1)) ||\n                (isShiftTab && rowIndex === 0 && columnIndex === rowMatrix[parseInt(rowIndex.toString(), 10)].indexOf(1))) {\n                columnIndex = tmp;\n                return [rowIndex, columnIndex];\n            }\n            if (isTab) {\n                if (columnIndex === rowMatrix[parseInt(rowIndex.toString(), 10)].lastIndexOf(1)) {\n                    rowIndex++;\n                    columnIndex = rowMatrix[parseInt(rowIndex.toString(), 10)].indexOf(1);\n                    columnIndex = this.first(this.matrix[parseInt(rowIndex.toString(), 10)], columnIndex, navigator, true, action);\n                    rows = this.getRowsFromIndex(rowIndex, active);\n                }\n                else {\n                    columnIndex++;\n                    columnIndex = this.first(this.matrix[parseInt(rowIndex.toString(), 10)], columnIndex, navigator, true, action);\n                }\n            }\n            else if (isShiftTab) {\n                if (columnIndex === rowMatrix[parseInt(rowIndex.toString(), 10)].indexOf(1)) {\n                    rowIndex--;\n                    columnIndex = rowMatrix[parseInt(rowIndex.toString(), 10)].lastIndexOf(1);\n                    columnIndex = this.first(this.matrix[parseInt(rowIndex.toString(), 10)], columnIndex, navigator, true, action);\n                    rows = this.getRowsFromIndex(rowIndex, active);\n                }\n                else {\n                    columnIndex--;\n                    columnIndex = this.first(this.matrix[parseInt(rowIndex.toString(), 10)], columnIndex, navigator, true, action);\n                }\n            }\n            else if ((action === 'rightArrow' || action === 'shiftRight')) {\n                if (columnIndex === rowMatrix[parseInt(rowIndex.toString(), 10)].lastIndexOf(1)) {\n                    columnIndex = tmp;\n                }\n                else {\n                    columnIndex++;\n                    columnIndex = this.first(this.matrix[parseInt(rowIndex.toString(), 10)], columnIndex, navigator, true, action);\n                }\n            }\n            else if ((action === 'leftArrow' || action === 'shiftLeft')) {\n                if (columnIndex === rowMatrix[parseInt(rowIndex.toString(), 10)].indexOf(1)) {\n                    columnIndex = tmp;\n                }\n                else {\n                    columnIndex--;\n                    columnIndex = this.first(this.matrix[parseInt(rowIndex.toString(), 10)], columnIndex, navigator, true, action);\n                }\n            }\n            else if (action === null) {\n                columnIndex++;\n                columnIndex = this.first(this.matrix[parseInt(rowIndex.toString(), 10)], columnIndex, navigator, true, action);\n            }\n            cell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rowIndex + \".cells.\" + columnIndex, rows);\n        }\n        return [rowIndex, columnIndex];\n    };\n    Matrix.prototype.first = function (vector, index, navigator, moveTo, action) {\n        if (((index < 0 || index === vector.length) && this.inValid(vector[parseInt(index.toString(), 10)])\n            && (action !== 'upArrow' && action !== 'downArrow')) || !vector.some(function (v) { return v === 1; })) {\n            return null;\n        }\n        return !this.inValid(vector[parseInt(index.toString(), 10)]) ? index :\n            this.first(vector, (['upArrow', 'downArrow', 'shiftUp', 'shiftDown', 'enter', 'shiftEnter'].indexOf(action) !== -1) ? moveTo ? 0 : ++index :\n                index + navigator[1], navigator, false, action);\n    };\n    Matrix.prototype.select = function (rowIndex, columnIndex) {\n        rowIndex = Math.max(0, Math.min(rowIndex, this.rows));\n        columnIndex = Math.max(0, Math.min(columnIndex, this.matrix[parseInt(rowIndex.toString(), 10)].length - 1));\n        this.current = [rowIndex, columnIndex];\n    };\n    Matrix.prototype.generate = function (rows, selector, isRowTemplate) {\n        this.rows = rows.length - 1;\n        this.matrix = [];\n        for (var i = 0; i < rows.length; i++) {\n            var cells = rows[parseInt(i.toString(), 10)].cells.filter(function (c) { return c.isSpanned !== true; });\n            this.columns = Math.max(cells.length - 1, this.columns | 0);\n            var incrementNumber = 0;\n            for (var j = 0; j < cells.length; j++) {\n                if (cells[parseInt(j.toString(), 10)].column && cells[parseInt(j.toString(), 10)].column.columns) {\n                    incrementNumber = this.columnsCount(cells[parseInt(j.toString(), 10)].column.columns, incrementNumber);\n                }\n                else {\n                    incrementNumber++;\n                }\n                this.set(i, j, rows[parseInt(i.toString(), 10)].visible === false ?\n                    false : selector(rows[parseInt(i.toString(), 10)], cells[parseInt(j.toString(), 10)], isRowTemplate));\n            }\n            this.columns = Math.max(incrementNumber - 1, this.columns | 0);\n        }\n        return this.matrix;\n    };\n    Matrix.prototype.columnsCount = function (rowColumns, currentColumnCount) {\n        var columns = rowColumns;\n        var incrementNumber = currentColumnCount;\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                incrementNumber = this.columnsCount(columns[parseInt(i.toString(), 10)].columns, incrementNumber);\n            }\n            else {\n                incrementNumber++;\n            }\n        }\n        return incrementNumber;\n    };\n    Matrix.prototype.inValid = function (value) {\n        return value === 0 || value === undefined;\n    };\n    return Matrix;\n}());\n\n/**\n * @hidden\n */\nvar ContentFocus = /** @class */ (function () {\n    function ContentFocus(parent) {\n        var _this = this;\n        this.matrix = new Matrix();\n        this.lastIdxCell = false;\n        this.parent = parent;\n        this.keyActions = {\n            'rightArrow': [0, 1],\n            'tab': [0, 1],\n            'leftArrow': [0, -1],\n            'shiftTab': [0, -1],\n            'upArrow': [-1, 0],\n            'downArrow': [1, 0],\n            'shiftUp': [-1, 0],\n            'shiftDown': [1, 0],\n            'shiftRight': [0, 1],\n            'shiftLeft': [0, -1],\n            'enter': [1, 0],\n            'shiftEnter': [-1, 0]\n        };\n        this.indexesByKey = function (action) {\n            var opt = {\n                'home': [_this.matrix.current[0], -1, 0, 1],\n                'end': [_this.matrix.current[0], _this.matrix.columns + 1, 0, -1],\n                'ctrlHome': [0, -1, 0, 1],\n                'ctrlEnd': [_this.matrix.rows, _this.matrix.columns + 1, 0, -1]\n            };\n            return opt[\"\" + action] || null;\n        };\n    }\n    ContentFocus.prototype.getTable = function () {\n        return (this.parent.getContentTable());\n    };\n    ContentFocus.prototype.onKeyPress = function (e) {\n        var isMacLike = /(Mac)/i.test(navigator.platform);\n        if (isMacLike && e.metaKey) {\n            if (e.action === 'home') {\n                e.action = 'ctrlHome';\n            }\n            else if (e.action === 'end') {\n                e.action = 'ctrlEnd';\n            }\n            else if (['downArrow', 'upArrow', 'leftArrow', 'rightArrow'].indexOf(e.action) !== -1) {\n                return;\n            }\n        }\n        var navigators = this.keyActions[e.action];\n        var current = this.getCurrentFromAction(e.action, navigators, e.action in this.keyActions, e);\n        if (!current) {\n            return;\n        }\n        if (((['tab', 'shiftTab'].indexOf(e.action) > -1 && this.matrix.current || []).toString() === current.toString())\n            || (this.parent.allowPaging && !this.parent.pagerModule.pagerObj.checkPagerHasFocus()\n                && this.matrix.current[0] === this.matrix.rows && ((this.parent.editSettings.mode === 'Batch'\n                && this.parent.editSettings.allowAdding && e.keyCode === 40) || (e.keyCode === 40)))) {\n            if (current.toString() === [this.matrix.rows, this.matrix.columns].toString() ||\n                current.toString() === [0, 0].toString() || (this.matrix.current[0] === this.matrix.rows &&\n                this.matrix.current.toString() === current.toString()) || (this.parent.allowGrouping &&\n                this.parent.infiniteScrollSettings.enableCache && current.toString() === [0, 1].toString())) {\n                return false;\n            }\n            else {\n                current = this.editNextRow(current[0], current[1], e.action);\n            }\n        }\n        this.matrix.select(current[0], current[1]);\n    };\n    ContentFocus.prototype.editNextRow = function (rowIndex, cellIndex, action) {\n        var gObj = this.parent;\n        var editNextRow = gObj.editSettings.allowNextRowEdit && (gObj.isEdit || gObj.isLastCellPrimaryKey);\n        var visibleIndex = gObj.getColumnIndexByField(gObj.getVisibleColumns()[0].field);\n        var row = this.getTable().rows[parseInt(rowIndex.toString(), 10)];\n        var cell = gObj.editSettings.showAddNewRow && row.classList.contains('e-addedrow') ?\n            (row.querySelectorAll('td:not(.e-editcell)'))[parseInt(cellIndex.toString(), 10)]\n            : row.cells[parseInt(cellIndex.toString(), 10)];\n        if (action === 'tab' && editNextRow) {\n            rowIndex++;\n            var index = (this.getTable().rows[parseInt(rowIndex.toString(), 10)].getElementsByClassName('e-indentcell').length +\n                this.getTable().rows[parseInt(rowIndex.toString(), 10)].getElementsByClassName('e-detailrowcollapse').length);\n            cellIndex = visibleIndex + index;\n        }\n        if (action === 'shiftTab' && editNextRow) {\n            rowIndex--;\n            cellIndex = gObj.getColumnIndexByField(gObj.getVisibleColumns()[gObj.getVisibleColumns().length - 1].field);\n        }\n        return !cell.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell) && !cell.classList.contains('e-headercell') &&\n            !cell.classList.contains('e-groupcaption') && !cell.classList.contains('e-filterbarcell') ?\n            this.editNextRow(rowIndex, cellIndex, action) : [rowIndex, cellIndex];\n    };\n    ContentFocus.prototype.getCurrentFromAction = function (action, navigator, isPresent, e) {\n        if (navigator === void 0) { navigator = [0, 0]; }\n        if (!isPresent && !this.indexesByKey(action) || (this.matrix.current.length === 0)) {\n            return null;\n        }\n        if (!this.shouldFocusChange(e)) {\n            return this.matrix.current;\n        }\n        // eslint-disable-next-line\n        var _a = this.indexesByKey(action) || this.matrix.current.concat(navigator), rowIndex = _a[0], cellIndex = _a[1], rN = _a[2], cN = _a[3];\n        if (this.parent.allowGrouping && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.groupSettings.columns) && this.parent.groupSettings.columns.length && this.parent.aggregates.length && action === 'enter') {\n            for (var i = rowIndex; i < this.matrix.matrix.length; i++) {\n                var row = this.getTable().rows[i + 1];\n                if (row && row.cells[parseInt(cellIndex.toString(), 10)] && row.cells[parseInt(cellIndex.toString(), 10)].classList.contains('e-rowcell')) {\n                    return [i + 1, cellIndex];\n                }\n                if (i === this.matrix.matrix.length - 1) {\n                    return [rowIndex, cellIndex];\n                }\n            }\n        }\n        if (action === 'ctrlEnd' || action === 'end') {\n            var lastContentCellIndex = [this.matrix.matrix.length - 1,\n                this.matrix.matrix[this.matrix.matrix.length - 1].length - 1];\n            if (action === 'end') {\n                lastContentCellIndex = [rowIndex, this.matrix.matrix[parseInt(rowIndex.toString(), 10)].length - 1];\n            }\n            if (this.matrix.matrix[lastContentCellIndex[0]][lastContentCellIndex[1]] === 0) {\n                lastContentCellIndex = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.findCellIndex)(this.matrix.matrix, lastContentCellIndex, false);\n            }\n            rowIndex = lastContentCellIndex[0];\n            cellIndex = lastContentCellIndex[1] + 1;\n        }\n        var current = this.matrix.get(rowIndex, cellIndex, [rN, cN], action, this.validator(), this);\n        return current;\n    };\n    ContentFocus.prototype.checkRowCellFocus = function (target) {\n        return target.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell) ? target.classList.contains('e-focused') : true;\n    };\n    ContentFocus.prototype.onClick = function (e, force) {\n        var target = e.target;\n        this.target = target;\n        target = (target.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell) ? target : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, 'td'));\n        target = target ? target : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'td.e-detailrowcollapse')\n            || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'td.e-detailrowexpand');\n        target = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'td.e-detailcell') ?\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, '.e-grid'), 'td.e-detailcell')) ? null : target : target;\n        target = target && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, 'table').classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.table) ? target : null;\n        if (!target) {\n            return false;\n        }\n        var rowIdx = target.parentElement.rowIndex;\n        if (this.parent.editSettings.showAddNewRow && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(target, 'e-addedrow')) {\n            rowIdx = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(target, 'e-addedrow').rowIndex;\n        }\n        var _a = [rowIdx, target.cellIndex], rowIndex = _a[0], cellIndex = _a[1];\n        var _b = this.matrix.current, oRowIndex = _b[0], oCellIndex = _b[1];\n        var val = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rowIndex + \".\" + cellIndex, this.matrix.matrix);\n        if (this.matrix.inValid(val) || (!force && oRowIndex === rowIndex && oCellIndex === cellIndex && this.checkRowCellFocus(target)) ||\n            (!(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, _base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell) && !(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-groupcaption')\n                && !(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-recordpluscollapse') && !(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-recordplusexpand')\n                && !(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-detailrowcollapse') && !(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-detailrowexpand')\n                && !(0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(e.target, 'e-templatecell'))) {\n            return false;\n        }\n        this.matrix.select(rowIndex, cellIndex);\n    };\n    ContentFocus.prototype.getFocusInfo = function () {\n        var info = {};\n        var _a = this.matrix.current, _b = _a[0], rowIndex = _b === void 0 ? 0 : _b, _c = _a[1], cellIndex = _c === void 0 ? 0 : _c;\n        this.matrix.current = [rowIndex, cellIndex];\n        var row = this.getTable().rows[parseInt(rowIndex.toString(), 10)];\n        info.element = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row) ? this.parent.editSettings.showAddNewRow && row.classList.contains('e-addedrow') ?\n            (row.querySelectorAll('td:not(.e-editcell)'))[parseInt(cellIndex.toString(), 10)]\n            : row.cells[parseInt(cellIndex.toString(), 10)] : null;\n        if (!info.element) {\n            return info;\n        }\n        info.elementToFocus = (!info.element.classList.contains('e-unboundcell') || (this.parent.editSettings.showAddNewRow &&\n            info.element.classList.contains('e-unboundcell') && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(info.element, 'e-addedrow'))) &&\n            !info.element.classList.contains('e-detailcell') ? this.getFocusable(info.element) : info.element;\n        info.elementToFocus = info.element.classList.contains('e-detailcell') && info.element.querySelector('.e-childgrid')\n            ? info.element.querySelector('.e-childgrid') : info.elementToFocus;\n        if (this.parent.editSettings.mode === 'Batch' && this.parent.isEdit && info.elementToFocus.tagName.toLowerCase() === 'input'\n            && info.elementToFocus.classList.contains('e-dropdownlist')) {\n            info.elementToFocus = info.elementToFocus.parentElement;\n        }\n        info.outline = true;\n        info.uid = info.element.parentElement.getAttribute('data-uid');\n        return info;\n    };\n    ContentFocus.prototype.getFocusable = function (element) {\n        var query = 'button, [href], input:not([type=\"hidden\"]), select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n        var isTemplate = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(element, '.e-templatecell'));\n        if (this.parent.isEdit) {\n            var commandCellQuery = this.parent.editSettings.showAddNewRow && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(element, 'e-addedrow') ?\n                ', button:not(.e-hide)' : '';\n            query = 'input:not([type=\"hidden\"]), select:not([aria-hidden=\"true\"]), textarea' + commandCellQuery;\n        }\n        var child = [].slice.call(element.querySelectorAll(query));\n        if (element.classList.contains('e-fltrtemp')) {\n            var focusElement = [].slice.call(element.querySelectorAll('.e-fltrtemp-focus'));\n            if (this.focusType === 'click' && this.target && this.target.classList.contains('e-fltrtemp-focus')) {\n                return this.target;\n            }\n            else if (this.focusType === 'key' && focusElement.length && (this.action === 'tab' || this.action === 'shiftTab')) {\n                var elementIndex = focusElement.indexOf(this.currentTarget);\n                return elementIndex === -1 ? focusElement[this.action === 'tab' ? 0 : focusElement.length - 1]\n                    : focusElement[this.action === 'tab' ? elementIndex + 1 : elementIndex - 1];\n            }\n        }\n        /* Select the first focusable child element\n         * if no child found then select the cell itself.\n         * if Grid is in editable state, check for editable control inside child.\n         */\n        return child.length ? isTemplate && child.length > 1 && !(this.parent.editSettings.mode === 'Batch'\n            && this.parent.isEdit && this.target) ? this.target ? this.target : element : child[0] : element;\n    };\n    ContentFocus.prototype.selector = function (row, cell, isRowTemplate) {\n        var types = [_base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.Expand, _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.GroupCaption, _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.CaptionSummary, _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.GroupSummary];\n        return ((row.isDataRow && cell.visible && (cell.isDataCell || cell.isTemplate))\n            || (row.isDataRow && cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.DetailExpand && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.visible))\n            || (!row.isDataRow && types.indexOf(cell.cellType) > -1\n                && !((cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.GroupSummary || cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.CaptionSummary)\n                    && !(cell.isDataCell && cell.visible)))\n            || (cell.column && cell.visible && cell.column.type === 'checkbox')\n            || (cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.CommandColumn)\n            || (row.isDataRow && isRowTemplate))\n            && !(row.edit === 'delete' && row.isDirty);\n    };\n    ContentFocus.prototype.nextRowFocusValidate = function (index) {\n        var lastIndex = index;\n        for (var i = index, len = this.matrix.rows; i <= len; i++) {\n            if (this.matrix.matrix[parseInt(index.toString(), 10)].indexOf(1) === -1) {\n                index = index + 1;\n            }\n            else {\n                return index;\n            }\n        }\n        this.lastIdxCell = true;\n        return lastIndex;\n    };\n    ContentFocus.prototype.previousRowFocusValidate = function (index) {\n        var firstIndex = index;\n        for (var i = index, len = 0; i >= len; i--) {\n            if (this.matrix.matrix[parseInt(index.toString(), 10)].indexOf(1) === -1) {\n                index = index - 1;\n                if (index < 0) {\n                    this.lastIdxCell = true;\n                    return firstIndex;\n                }\n            }\n            else {\n                return index;\n            }\n        }\n        return firstIndex;\n    };\n    ContentFocus.prototype.jump = function (action, current) {\n        this.lastIdxCell = false;\n        var enterFrozen = this.parent.frozenRows !== 0 && action === 'shiftEnter';\n        var headerSwap = (action === 'upArrow' || enterFrozen) && current[0] === 0;\n        if (this.matrix.matrix[current[0]]) {\n            if (action === 'tab' && this.matrix.matrix.length &&\n                current[1] === this.matrix.matrix[current[0]].lastIndexOf(1) && this.matrix.matrix.length - 1 !== current[0]) {\n                this.matrix.current[0] = this.nextRowFocusValidate(this.matrix.current[0] + 1);\n                this.matrix.current[1] = -1;\n            }\n        }\n        if (action === 'shiftTab' &&\n            current[0] !== 0 && this.matrix.matrix[current[0]].indexOf(1) === current[1]) {\n            this.matrix.current[0] = this.previousRowFocusValidate(this.matrix.current[0] - 1);\n            this.matrix.current[1] = this.matrix.matrix[current[0]].length;\n        }\n        var isHeaderFocus = false;\n        var row = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(document.activeElement, 'e-addedrow') && this.parent.editSettings.showAddNewRow ?\n            (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(document.activeElement, 'e-addedrow') : document.activeElement.parentElement;\n        if ((this.parent.enableVirtualization || this.parent.infiniteScrollSettings.enableCache)\n            && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row) && row.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.row)) {\n            var rowIndex = parseInt(row.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.ariaRowIndex), 10) - 1;\n            isHeaderFocus = rowIndex > 0;\n        }\n        var info = {\n            swap: !isHeaderFocus ? ((action === 'upArrow' || enterFrozen) && current[0] === 0) : false,\n            toHeader: headerSwap\n        };\n        return info;\n    };\n    ContentFocus.prototype.getNextCurrent = function (previous, swap, active, action) {\n        if (previous === void 0) { previous = []; }\n        var current = [];\n        if (action === 'rightArrow' || action === 'tab') {\n            current[0] = previous[0];\n            current[1] = -1;\n        }\n        if (action === 'downArrow' || action === 'enter') {\n            current[0] = -1;\n            current[1] = previous[1];\n        }\n        return current;\n    };\n    ContentFocus.prototype.generateRows = function (rows, optionals) {\n        var _a;\n        var matrix = optionals.matrix, handlerInstance = optionals.handlerInstance;\n        var len = handlerInstance.matrix.matrix.length;\n        var defaultLen = this.parent.allowFiltering && this.parent.filterSettings.type === 'FilterBar' ? len + 1 : len;\n        handlerInstance.matrix.matrix = handlerInstance.matrix.matrix.slice(0, defaultLen); //Header matrix update.\n        handlerInstance.matrix.rows = defaultLen;\n        (_a = handlerInstance.matrix.matrix).push.apply(_a, matrix);\n        handlerInstance.matrix.rows += matrix.length;\n    };\n    ContentFocus.prototype.getInfo = function (e) {\n        var info = this.getFocusInfo();\n        var _a = this.matrix.current, rIndex = _a[0], cIndex = _a[1];\n        var isData = info.element.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell);\n        var isSelectable = isData || (e && e.action !== 'enter' && (info.element.classList.contains('e-detailrowcollapse')\n            || info.element.classList.contains('e-detailrowexpand')));\n        // eslint-disable-next-line\n        var _b = [Math.min(parseInt(info.element.parentElement.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.ariaRowIndex), 10) - 1, rIndex),\n            Math.min(parseInt(info.element.getAttribute(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.ariaColIndex), 10) - 1, cIndex)], rowIndex = _b[0], cellIndex = _b[1];\n        if (this.parent.allowGrouping && this.parent.groupSettings.enableLazyLoading && isData) {\n            rowIndex = this.parent.getDataRows().indexOf(info.element.parentElement);\n        }\n        if (this.parent.enableVirtualization && this.parent.groupSettings.columns.length) {\n            rowIndex = rIndex;\n            cellIndex = cIndex;\n        }\n        if (this.parent.editSettings.showAddNewRow && this.parent.editSettings.newRowPosition === 'Top' &&\n            !this.parent.enableVirtualization && !this.parent.enableInfiniteScrolling && e && e.action === 'downArrow') {\n            rowIndex++;\n        }\n        return { isContent: true, isDataCell: isData, indexes: [rowIndex, cellIndex], isSelectable: isSelectable };\n    };\n    ContentFocus.prototype.validator = function () {\n        var table = this.getTable();\n        return function (rowIndex, cellIndex, action) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(table.rows[parseInt(rowIndex.toString(), 10)])) {\n                var cell = void 0;\n                cellIndex = table.querySelector('.e-emptyrow') ? 0 : cellIndex;\n                if (table.rows[parseInt(rowIndex.toString(), 10)].cells[0].classList.contains('e-editcell')) {\n                    cell = table.rows[parseInt(rowIndex.toString(), 10)].cells[0].querySelectorAll('td')[parseInt(cellIndex.toString(), 10)];\n                }\n                else {\n                    cell = table.rows[parseInt(rowIndex.toString(), 10)].cells[parseInt(cellIndex.toString(), 10)];\n                }\n                var isCellWidth = cell.getBoundingClientRect().width !== 0;\n                if (action === 'enter' || action === 'shiftEnter') {\n                    return isCellWidth && cell.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell);\n                }\n                if ((action === 'shiftUp' || action === 'shiftDown') && cell.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell)) {\n                    return isCellWidth;\n                }\n                else if (action !== 'shiftUp' && action !== 'shiftDown') {\n                    return isCellWidth;\n                }\n            }\n            return false;\n        };\n    };\n    ContentFocus.prototype.shouldFocusChange = function (e) {\n        var _a = this.matrix.current, _b = _a[0], rIndex = _b === void 0 ? -1 : _b, _c = _a[1], cIndex = _c === void 0 ? -1 : _c;\n        if (rIndex < 0 || cIndex < 0) {\n            return true;\n        }\n        var cell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rIndex + \".cells.\" + cIndex, this.getTable().rows);\n        if (!cell) {\n            return true;\n        }\n        return e.action === 'enter' || e.action === 'shiftEnter' ?\n            cell.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell) && !cell.classList.contains('e-unboundcell')\n                || cell.classList.contains('e-editedbatchcell') && !cell.classList.contains('e-detailcell') : true;\n    };\n    ContentFocus.prototype.getGridSeletion = function () {\n        return this.parent.allowSelection && this.parent.selectionSettings.allowColumnSelection;\n    };\n    return ContentFocus;\n}());\n\n/**\n * @hidden\n */\nvar HeaderFocus = /** @class */ (function (_super) {\n    __extends(HeaderFocus, _super);\n    function HeaderFocus(parent) {\n        return _super.call(this, parent) || this;\n    }\n    HeaderFocus.prototype.getTable = function () {\n        return (this.parent.getHeaderTable());\n    };\n    HeaderFocus.prototype.onClick = function (e) {\n        this.focusType = 'click';\n        var target = e.target;\n        this.target = target;\n        target = (target.classList.contains('e-headercell') ? target : (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(target, 'th'));\n        if (!target && (this.parent.frozenRows !== 0 || ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) &&\n            this.parent.editSettings.showAddNewRow))) {\n            target = (e.target.classList.contains(_base_string_literals__WEBPACK_IMPORTED_MODULE_2__.rowCell) ? e.target :\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.closest)(e.target, 'td'));\n        }\n        if (e.target.classList.contains('e-columnheader') ||\n            e.target.querySelector('.e-stackedheadercell')) {\n            return false;\n        }\n        if (!target) {\n            return;\n        }\n        var rowIdx = target.parentElement.rowIndex;\n        if (this.parent.editSettings.showAddNewRow && (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(target, 'e-addedrow')) {\n            rowIdx = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(target, 'e-addedrow').rowIndex;\n        }\n        var _a = [rowIdx, target.cellIndex], rowIndex = _a[0], cellIndex = _a[1];\n        var val = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rowIndex + \".\" + cellIndex, this.matrix.matrix);\n        if (this.matrix.inValid(val)) {\n            return false;\n        }\n        this.matrix.select(rowIdx, target.cellIndex);\n    };\n    HeaderFocus.prototype.getFocusInfo = function () {\n        var info = {};\n        var _a = this.matrix.current, _b = _a[0], rowIndex = _b === void 0 ? 0 : _b, _c = _a[1], cellIndex = _c === void 0 ? 0 : _c;\n        var row = this.getTable().rows[parseInt(rowIndex.toString(), 10)];\n        info.element = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(row) ? this.parent.editSettings.showAddNewRow && row.classList.contains('e-addedrow') ?\n            (row.querySelectorAll('td:not(.e-editcell)'))[parseInt(cellIndex.toString(), 10)]\n            : row.cells[parseInt(cellIndex.toString(), 10)] : null;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(info.element)) {\n            info.elementToFocus = this.getFocusable(info.element);\n            info.outline = !info.element.classList.contains('e-filterbarcell');\n        }\n        return info;\n    };\n    HeaderFocus.prototype.selector = function (row, cell) {\n        return (cell.visible && (cell.column.field !== undefined || cell.isTemplate || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.column.template)\n            || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cell.column.commands) || cell.column.type === 'checkbox')) || cell.cellType === _base_enum__WEBPACK_IMPORTED_MODULE_6__.CellType.StackedHeader;\n    };\n    HeaderFocus.prototype.jump = function (action, current) {\n        var enterFrozen = this.parent.frozenRows !== 0 && action === 'enter';\n        var isLastCell;\n        var lastRow;\n        if (this.parent.enableHeaderFocus && action === 'tab') {\n            lastRow = this.matrix.matrix.length - 1 === current[0];\n            isLastCell = current[1] === this.matrix.matrix[current[0]].lastIndexOf(1);\n            if (isLastCell) {\n                if (!lastRow) {\n                    this.matrix.current[0] = this.matrix.current[0] + 1;\n                }\n                else {\n                    this.matrix.current[0] = 0;\n                }\n                this.matrix.current[1] = -1;\n            }\n        }\n        return {\n            swap: ((action === 'downArrow' || enterFrozen) && current[0] === this.matrix.matrix.length - 1) ||\n                (action === 'tab' && lastRow && isLastCell)\n        };\n    };\n    HeaderFocus.prototype.getNextCurrent = function (previous, swap, active, action) {\n        if (previous === void 0) { previous = []; }\n        var current1 = [];\n        if (action === 'rightArrow' || (action === 'shiftRight' && this.getGridSeletion()) || action === 'tab') {\n            current1[0] = previous[0];\n            current1[1] = -1;\n        }\n        if (action === 'upArrow' || action === 'shiftEnter') {\n            current1[0] = this.matrix.matrix.length;\n            current1[1] = previous[1];\n        }\n        return current1;\n    };\n    HeaderFocus.prototype.generateRows = function (rows) {\n        var length = this.matrix.matrix.length;\n        if (this.parent.allowFiltering && this.parent.filterSettings.type === 'FilterBar') {\n            this.matrix.rows = ++this.matrix.rows;\n            var cells = rows[0].cells;\n            var incrementNumber = 0;\n            for (var i = 0; i < cells.length; i++) {\n                if (cells[parseInt(i.toString(), 10)].column && cells[parseInt(i.toString(), 10)].column.columns) {\n                    incrementNumber = this.checkFilterColumn(cells[parseInt(i.toString(), 10)].column.columns, length, incrementNumber);\n                }\n                else {\n                    this.matrix.set(length, incrementNumber, cells[parseInt(i.toString(), 10)].visible && cells[parseInt(i.toString(), 10)].column.allowFiltering !== false);\n                    incrementNumber++;\n                }\n            }\n        }\n    };\n    HeaderFocus.prototype.checkFilterColumn = function (rowColumns, rowIndex, columnIndex) {\n        var columns = rowColumns;\n        var incrementNumber = columnIndex;\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                incrementNumber = this.checkFilterColumn(columns[parseInt(i.toString(), 10)].columns, rowIndex, incrementNumber);\n            }\n            else {\n                this.matrix.set(rowIndex, incrementNumber, columns[parseInt(i.toString(), 10)].visible && columns[parseInt(i.toString(), 10)].allowFiltering !== false);\n                incrementNumber++;\n            }\n        }\n        return incrementNumber;\n    };\n    HeaderFocus.prototype.getInfo = function (e) {\n        return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(_super.prototype.getInfo.call(this, e), { isContent: false, isHeader: true });\n    };\n    HeaderFocus.prototype.validator = function () {\n        return function () { return true; };\n    };\n    HeaderFocus.prototype.shouldFocusChange = function (e) {\n        var _a = this.matrix.current, rowIndex = _a[0], columnIndex = _a[1];\n        if (rowIndex < 0 || columnIndex < 0) {\n            return true;\n        }\n        var cell = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(rowIndex + \".cells.\" + columnIndex, this.getTable().rows);\n        if (!cell) {\n            return true;\n        }\n        return e.action === 'enter' || e.action === 'altDownArrow' ? !cell.classList.contains('e-headercell') : true;\n    };\n    HeaderFocus.prototype.getHeaderType = function () {\n        return 'HeaderFocus';\n    };\n    return HeaderFocus;\n}(ContentFocus));\n\n/** @hidden */\nvar SearchBox = /** @class */ (function () {\n    function SearchBox(searchBox, serviceLocator) {\n        this.searchBox = searchBox;\n        this.serviceLocator = serviceLocator;\n        this.l10n = this.serviceLocator.getService('localization');\n    }\n    SearchBox.prototype.searchFocus = function (args) {\n        args.target.parentElement.classList.add('e-input-focus');\n        if (args.target.classList.contains('e-input') && args.target.classList.contains('e-search') && args.target.value) {\n            var sIcon = args.target.parentElement.querySelector('.e-sicon');\n            sIcon.classList.add('e-clear-icon');\n            sIcon.setAttribute('title', this.l10n.getConstant('Clear'));\n            (sIcon).style.cursor = 'pointer';\n        }\n    };\n    SearchBox.prototype.searchBlur = function (args) {\n        var relatedTarget = args.relatedTarget ? args.relatedTarget : null;\n        if (relatedTarget && relatedTarget.classList.contains('e-sicon')) {\n            if (relatedTarget.classList.contains('e-clear-icon')) {\n                args.target.parentElement.classList.remove('e-input-focus');\n            }\n        }\n        else {\n            args.target.parentElement.classList.remove('e-input-focus');\n        }\n        if (args.target.classList.contains('e-search') && ((relatedTarget && !(relatedTarget.classList.contains('e-sicon e-clear-icon'))\n            && !(relatedTarget.classList.contains('e-sicon'))) || (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(relatedTarget))) {\n            var sIcon = args.target.parentElement.querySelector('.e-sicon');\n            sIcon.classList.remove('e-clear-icon');\n            sIcon.removeAttribute('title');\n            sIcon.style.cursor = 'default';\n        }\n    };\n    SearchBox.prototype.wireEvent = function () {\n        if (this.searchBox) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.searchBox, 'focus', this.searchFocus, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.searchBox, 'blur', this.searchBlur, this);\n        }\n    };\n    SearchBox.prototype.unWireEvent = function () {\n        if (this.searchBox) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.searchBox, 'focus', this.searchFocus);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.searchBox, 'blur', this.searchBlur);\n        }\n    };\n    return SearchBox;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/focus-strategy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/group-model-generator.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/group-model-generator.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupModelGenerator: () => (/* binding */ GroupModelGenerator)\n/* harmony export */ });\n/* harmony import */ var _models_row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/row */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _services_row_model_generator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/row-model-generator */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/row-model-generator.js\");\n/* harmony import */ var _services_summary_model_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/summary-model-generator */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/summary-model-generator.js\");\n/* harmony import */ var _grid_base_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../grid/base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n/**\n * GroupModelGenerator is used to generate group caption rows and data rows.\n *\n * @hidden\n */\nvar GroupModelGenerator = /** @class */ (function (_super) {\n    __extends(GroupModelGenerator, _super);\n    function GroupModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.rows = [];\n        /** @hidden */\n        _this.index = 0;\n        _this.infiniteChildCount = 0;\n        _this.renderInfiniteAgg = true;\n        _this.parent = parent;\n        _this.summaryModelGen = new _services_summary_model_generator__WEBPACK_IMPORTED_MODULE_1__.GroupSummaryModelGenerator(parent);\n        _this.captionModelGen = new _services_summary_model_generator__WEBPACK_IMPORTED_MODULE_1__.CaptionSummaryModelGenerator(parent);\n        return _this;\n    }\n    GroupModelGenerator.prototype.generateRows = function (data, args) {\n        if (this.parent.groupSettings.columns.length === 0) {\n            return _super.prototype.generateRows.call(this, data, args);\n        }\n        this.isInfiniteScroll = (args.requestType === 'infiniteScroll');\n        this.rows = [];\n        this.index = this.parent.enableVirtualization || this.isInfiniteScroll ? args.startIndex : 0;\n        for (var i = 0, len = data.length; i < len; i++) {\n            this.infiniteChildCount = 0;\n            this.renderInfiniteAgg = true;\n            this.getGroupedRecords(0, data[parseInt(i.toString(), 10)], data.level, i, undefined, this.rows.length);\n        }\n        this.index = 0;\n        if (this.parent.isCollapseStateEnabled()) {\n            this.ensureRowVisibility();\n        }\n        return this.rows;\n    };\n    GroupModelGenerator.prototype.getGroupedRecords = function (index, data, raw, parentid, childId, tIndex, parentUid) {\n        var _a;\n        var level = raw;\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data.items)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data.GroupGuid)) {\n                this.rows = this.rows.concat(this.generateDataRows(data, index, parentid, this.rows.length, parentUid));\n            }\n            else {\n                for (var j = 0, len = data.length; j < len; j++) {\n                    this.getGroupedRecords(index, data[parseInt(j.toString(), 10)], data.level, parentid, index, this.rows.length, parentUid);\n                }\n            }\n        }\n        else {\n            var preCaption = void 0;\n            var captionRow = this.generateCaptionRow(data, index, parentid, childId, tIndex, parentUid);\n            if (this.isInfiniteScroll) {\n                preCaption = this.getPreCaption(index, captionRow.data.key);\n            }\n            if (!preCaption) {\n                this.rows = this.rows.concat(captionRow);\n            }\n            else {\n                captionRow.uid = preCaption.uid;\n            }\n            if (data.items && data.items.length) {\n                this.getGroupedRecords(index + 1, data.items, data.items.level, parentid, index + 1, this.rows.length, captionRow.uid);\n            }\n            if (this.parent.aggregates.length && this.isRenderAggregate(captionRow)) {\n                var rowCnt = this.rows.length;\n                (_a = this.rows).push.apply(_a, this.summaryModelGen.generateRows(data, { level: level, parentUid: captionRow.uid }));\n                for (var i = rowCnt - 1; i >= 0; i--) {\n                    if (this.rows[parseInt(i.toString(), 10)].isCaptionRow) {\n                        this.rows[parseInt(i.toString(), 10)].aggregatesCount = this.rows.length - rowCnt;\n                    }\n                    else if (!this.rows[parseInt(i.toString(), 10)].isCaptionRow && !this.rows[parseInt(i.toString(), 10)].isDataRow) {\n                        break;\n                    }\n                }\n            }\n            if (preCaption) {\n                this.setInfiniteRowVisibility(preCaption);\n            }\n        }\n    };\n    GroupModelGenerator.prototype.isRenderAggregate = function (data) {\n        if (this.parent.enableInfiniteScrolling) {\n            if (!this.renderInfiniteAgg) {\n                return false;\n            }\n            this.getPreCaption(data.indent, data.data.key);\n            this.renderInfiniteAgg = data.data.count === this.infiniteChildCount;\n            return this.renderInfiniteAgg;\n        }\n        return !this.parent.enableInfiniteScrolling;\n    };\n    GroupModelGenerator.prototype.getPreCaption = function (indent, key) {\n        var rowObj = this.parent.getRowsObject().concat(this.rows);\n        var preCap;\n        this.infiniteChildCount = 0;\n        var i = rowObj.length;\n        while (i--) {\n            if (rowObj[parseInt(i.toString(), 10)].isCaptionRow && rowObj[parseInt(i.toString(), 10)].indent === indent) {\n                var groupKey = rowObj[parseInt(i.toString(), 10)].data.key;\n                if ((groupKey && groupKey.toString() === key.toString() && groupKey instanceof Date) || groupKey === key) {\n                    preCap = rowObj[parseInt(i.toString(), 10)];\n                }\n            }\n            if (rowObj[parseInt(i.toString(), 10)].indent === indent || rowObj[parseInt(i.toString(), 10)].indent < indent) {\n                break;\n            }\n            if (rowObj[parseInt(i.toString(), 10)].indent === indent + 1) {\n                this.infiniteChildCount++;\n            }\n        }\n        return preCap;\n    };\n    GroupModelGenerator.prototype.getCaptionRowCells = function (field, indent, data) {\n        var cells = [];\n        var visibles = [];\n        var column = this.parent.getColumnByField(field);\n        var indexes = this.parent.getColumnIndexesInView();\n        if (this.parent.enableColumnVirtualization) {\n            column = this.parent.columns.filter(function (c) { return c.field === field; })[0];\n        }\n        var groupedLen = this.parent.groupSettings.columns.length;\n        var gObj = this.parent;\n        if (!this.parent.enableColumnVirtualization || indexes.indexOf(indent) !== -1) {\n            for (var i = 0; i < indent; i++) {\n                cells.push(this.generateIndentCell());\n            }\n            cells.push(this.generateCell({}, null, _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Expand));\n        }\n        indent = this.parent.enableColumnVirtualization ? 1 :\n            (this.parent.getVisibleColumns().length + groupedLen + (gObj.detailTemplate || gObj.childGrid ? 1 : 0) -\n                indent + (this.parent.getVisibleColumns().length ? -1 : 0));\n        //Captionsummary cells will be added here.\n        if (this.parent.aggregates.length && !this.captionModelGen.isEmpty()) {\n            var captionCells = this.captionModelGen.generateRows(data)[0];\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(data, captionCells.data);\n            var cIndex_1 = 0;\n            captionCells.cells.some(function (cell, index) { cIndex_1 = index; return cell.visible && cell.isDataCell; });\n            visibles = captionCells.cells.slice(cIndex_1).filter(function (cell) { return cell.visible; });\n            if (captionCells.visible && visibles[0].column.field === this.parent.getVisibleColumns()[0].field) {\n                visibles = visibles.slice(1);\n            }\n            if (this.parent.getVisibleColumns().length === 1) {\n                visibles = [];\n            }\n            indent = indent - visibles.length;\n        }\n        var cols = (!this.parent.enableColumnVirtualization ? [column] : this.parent.getColumns());\n        var wFlag = true;\n        for (var j = 0; j < cols.length; j++) {\n            var tmpFlag = wFlag && indexes.indexOf(indent) !== -1;\n            if (tmpFlag) {\n                wFlag = false;\n            }\n            var cellType = !this.parent.enableColumnVirtualization || tmpFlag ?\n                _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.GroupCaption : _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.GroupCaptionEmpty;\n            indent = this.parent.enableColumnVirtualization && cellType === _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.GroupCaption ? indent + groupedLen : indent;\n            if (gObj.isRowDragable()) {\n                indent++;\n            }\n            cells.push(this.generateCell(column, null, cellType, indent));\n        }\n        cells.push.apply(cells, visibles);\n        return cells;\n    };\n    /**\n     * @param {GroupedData} data - specifies the data\n     * @param {number} indent - specifies the indent\n     * @param {number} parentID - specifies the parentID\n     * @param {number} childID - specifies the childID\n     * @param {number} tIndex - specifies the TIndex\n     * @param {string} parentUid - specifies the ParentUid\n     * @returns {Row<Column>} returns the Row object\n     * @hidden\n     */\n    GroupModelGenerator.prototype.generateCaptionRow = function (data, indent, parentID, childID, tIndex, parentUid) {\n        var options = {};\n        var records = 'records';\n        var col = this.parent.getColumnByField(data.field);\n        options.data = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)({}, data);\n        if (col) {\n            options.data.field = data.field;\n        }\n        options.isDataRow = false;\n        options.isExpand = !this.parent.groupSettings.enableLazyLoading && !this.parent.isCollapseStateEnabled();\n        options.parentGid = parentID;\n        options.childGid = childID;\n        options.tIndex = tIndex;\n        options.isCaptionRow = true;\n        options.parentUid = parentUid;\n        options.gSummary = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data.items[\"\" + records]) ? data.items[\"\" + records].length : data.items.length;\n        options.uid = (0,_grid_base_util__WEBPACK_IMPORTED_MODULE_3__.getUid)('grid-row');\n        var row = new _models_row__WEBPACK_IMPORTED_MODULE_4__.Row(options);\n        row.indent = indent;\n        this.getForeignKeyData(row);\n        row.cells = this.getCaptionRowCells(data.field, indent, row.data);\n        return row;\n    };\n    GroupModelGenerator.prototype.getForeignKeyData = function (row) {\n        var data = row.data;\n        var col = this.parent.getColumnByField(data.field);\n        if (col && col.isForeignColumn && col.isForeignColumn()) {\n            var fkValue = ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(data.key) ? '' : col.valueAccessor(col.foreignKeyValue, (0,_grid_base_util__WEBPACK_IMPORTED_MODULE_3__.getForeignData)(col, {}, data.key)[0], col));\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)('foreignKey', fkValue, row.data);\n        }\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {number} indent - specifies the indent\n     * @param {number} childID - specifies the childID\n     * @param {number} tIndex - specifies the tIndex\n     * @param {string} parentUid - specifies the ParentUid\n     * @returns {Row<Column>[]} returns the row object\n     * @hidden\n     */\n    GroupModelGenerator.prototype.generateDataRows = function (data, indent, childID, tIndex, parentUid) {\n        var rows = [];\n        var indexes = this.parent.getColumnIndexesInView();\n        for (var i = 0, len = data.length; i < len; i++, tIndex++) {\n            rows[parseInt(i.toString(), 10)] = this.generateRow(data[parseInt(i.toString(), 10)], this.index, i ? undefined : 'e-firstchildrow', indent, childID, tIndex, parentUid);\n            for (var j = 0; j < indent; j++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(indent) === -1) {\n                    continue;\n                }\n                rows[parseInt(i.toString(), 10)].cells.unshift(this.generateIndentCell());\n            }\n            this.index++;\n        }\n        return rows;\n    };\n    GroupModelGenerator.prototype.generateIndentCell = function () {\n        return this.generateCell({}, null, _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Indent);\n    };\n    GroupModelGenerator.prototype.refreshRows = function (input) {\n        var indexes = this.parent.getColumnIndexesInView();\n        for (var i = 0; i < input.length; i++) {\n            if (input[parseInt(i.toString(), 10)].isDataRow) {\n                input[parseInt(i.toString(), 10)].cells = this.generateCells(input[parseInt(i.toString(), 10)]);\n                for (var j = 0; j < input[parseInt(i.toString(), 10)].indent; j++) {\n                    if (this.parent.enableColumnVirtualization\n                        && indexes.indexOf(input[parseInt(i.toString(), 10)].indent) === -1) {\n                        continue;\n                    }\n                    input[parseInt(i.toString(), 10)].cells.unshift(this.generateIndentCell());\n                }\n            }\n            else {\n                var cRow = this.generateCaptionRow(input[parseInt(i.toString(), 10)].data, input[parseInt(i.toString(), 10)].indent);\n                input[parseInt(i.toString(), 10)].cells = cRow.cells;\n            }\n        }\n        return input;\n    };\n    GroupModelGenerator.prototype.setInfiniteRowVisibility = function (caption) {\n        if (!caption.isExpand || caption.visible === false) {\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                if (row.parentUid === caption.uid) {\n                    row.visible = false;\n                    if (row.isCaptionRow) {\n                        this.setInfiniteRowVisibility(row);\n                    }\n                }\n            }\n        }\n    };\n    GroupModelGenerator.prototype.ensureRowVisibility = function () {\n        for (var i = 0; i < this.rows.length; i++) {\n            var row = this.rows[parseInt(i.toString(), 10)];\n            if (!row.isCaptionRow) {\n                continue;\n            }\n            for (var j = i + 1; j < this.rows.length; j++) {\n                var childRow = this.rows[parseInt(j.toString(), 10)];\n                if (row.uid === childRow.parentUid) {\n                    this.rows[parseInt(j.toString(), 10)].visible = row.isExpand;\n                }\n            }\n        }\n    };\n    return GroupModelGenerator;\n}(_services_row_model_generator__WEBPACK_IMPORTED_MODULE_5__.RowModelGenerator));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/group-model-generator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/renderer-factory.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/renderer-factory.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RendererFactory: () => (/* binding */ RendererFactory)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n\n\n/**\n * RendererFactory\n *\n * @hidden\n */\nvar RendererFactory = /** @class */ (function () {\n    function RendererFactory() {\n        this.rendererMap = {};\n    }\n    RendererFactory.prototype.addRenderer = function (name, type) {\n        var rName = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_1__.RenderType, name);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rendererMap[\"\" + rName])) {\n            this.rendererMap[\"\" + rName] = type;\n        }\n    };\n    RendererFactory.prototype.getRenderer = function (name) {\n        var rName = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getEnumValue)(_base_enum__WEBPACK_IMPORTED_MODULE_1__.RenderType, name);\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.rendererMap[\"\" + rName])) {\n            // eslint-disable-next-line no-throw-literal\n            throw \"The renderer \" + rName + \" is not found\";\n        }\n        else {\n            return this.rendererMap[\"\" + rName];\n        }\n    };\n    return RendererFactory;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9zZXJ2aWNlcy9yZW5kZXJlci1mYWN0b3J5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RTtBQUM3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrRUFBWSxDQUFDLGtEQUFVO0FBQzNDLFlBQVksdUVBQWlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtFQUFZLENBQUMsa0RBQVU7QUFDM0MsWUFBWSx1RUFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haV90cmF2ZWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9zZXJ2aWNlcy9yZW5kZXJlci1mYWN0b3J5LmpzP2IxYTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOdWxsT3JVbmRlZmluZWQsIGdldEVudW1WYWx1ZSB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1iYXNlJztcbmltcG9ydCB7IFJlbmRlclR5cGUgfSBmcm9tICcuLi9iYXNlL2VudW0nO1xuLyoqXG4gKiBSZW5kZXJlckZhY3RvcnlcbiAqXG4gKiBAaGlkZGVuXG4gKi9cbnZhciBSZW5kZXJlckZhY3RvcnkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVuZGVyZXJGYWN0b3J5KCkge1xuICAgICAgICB0aGlzLnJlbmRlcmVyTWFwID0ge307XG4gICAgfVxuICAgIFJlbmRlcmVyRmFjdG9yeS5wcm90b3R5cGUuYWRkUmVuZGVyZXIgPSBmdW5jdGlvbiAobmFtZSwgdHlwZSkge1xuICAgICAgICB2YXIgck5hbWUgPSBnZXRFbnVtVmFsdWUoUmVuZGVyVHlwZSwgbmFtZSk7XG4gICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZCh0aGlzLnJlbmRlcmVyTWFwW1wiXCIgKyByTmFtZV0pKSB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyTWFwW1wiXCIgKyByTmFtZV0gPSB0eXBlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSZW5kZXJlckZhY3RvcnkucHJvdG90eXBlLmdldFJlbmRlcmVyID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgdmFyIHJOYW1lID0gZ2V0RW51bVZhbHVlKFJlbmRlclR5cGUsIG5hbWUpO1xuICAgICAgICBpZiAoaXNOdWxsT3JVbmRlZmluZWQodGhpcy5yZW5kZXJlck1hcFtcIlwiICsgck5hbWVdKSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgICAgICAgICAgIHRocm93IFwiVGhlIHJlbmRlcmVyIFwiICsgck5hbWUgKyBcIiBpcyBub3QgZm91bmRcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJlbmRlcmVyTWFwW1wiXCIgKyByTmFtZV07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBSZW5kZXJlckZhY3Rvcnk7XG59KCkpO1xuZXhwb3J0IHsgUmVuZGVyZXJGYWN0b3J5IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/renderer-factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/row-model-generator.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/row-model-generator.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RowModelGenerator: () => (/* binding */ RowModelGenerator)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _models_row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/row */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _models_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/cell */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/cell.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../grid/base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n\n\n\n\n\n\n\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar RowModelGenerator = /** @class */ (function () {\n    /**\n     * Constructor for header renderer module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     */\n    function RowModelGenerator(parent) {\n        this.parent = parent;\n    }\n    RowModelGenerator.prototype.generateRows = function (data, args) {\n        var rows = [];\n        var startIndex = this.parent.enableVirtualization && args ? args.startIndex : 0;\n        startIndex = this.parent.enableInfiniteScrolling && args ? this.getInfiniteIndex(args) : startIndex;\n        if (this.parent.enableImmutableMode && args && args.startIndex) {\n            startIndex = args.startIndex;\n        }\n        for (var i = 0, len = Object.keys(data).length; i < len; i++, startIndex++) {\n            rows[parseInt(i.toString(), 10)] = this.generateRow(data[parseInt(i.toString(), 10)], startIndex);\n        }\n        return rows;\n    };\n    RowModelGenerator.prototype.ensureColumns = function () {\n        //TODO: generate dummy column for group, detail here;\n        var cols = [];\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            var args = {};\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_1__.detailIndentCellInfo, args);\n            cols.push(this.generateCell(args, null, _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.DetailExpand));\n        }\n        if (this.parent.isRowDragable()) {\n            cols.push(this.generateCell({}, null, _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.RowDragIcon));\n        }\n        return cols;\n    };\n    RowModelGenerator.prototype.generateRow = function (data, index, cssClass, indent, pid, tIndex, parentUid) {\n        var options = {};\n        options.foreignKeyData = {};\n        options.uid = (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.getUid)('grid-row');\n        options.data = data;\n        options.index = index;\n        options.indent = indent;\n        options.tIndex = tIndex;\n        options.isDataRow = true;\n        options.parentGid = pid;\n        options.parentUid = parentUid;\n        if (this.parent.isPrinting) {\n            if (this.parent.hierarchyPrintMode === 'All') {\n                options.isExpand = true;\n            }\n            else if (this.parent.hierarchyPrintMode === 'Expanded' && this.parent.expandedRows && this.parent.expandedRows[parseInt(index.toString(), 10)]) {\n                options.isExpand = this.parent.expandedRows[parseInt(index.toString(), 10)].isExpand;\n            }\n        }\n        options.cssClass = cssClass;\n        options.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n        options.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n        options.isSelected = this.parent.getSelectedRowIndexes().indexOf(index) > -1;\n        this.refreshForeignKeyRow(options);\n        var cells = this.ensureColumns();\n        var row = new _models_row__WEBPACK_IMPORTED_MODULE_4__.Row(options, this.parent);\n        row.cells = this.parent.getFrozenMode() === 'Right' ? this.generateCells(options).concat(cells)\n            : cells.concat(this.generateCells(options));\n        return row;\n    };\n    RowModelGenerator.prototype.refreshForeignKeyRow = function (options) {\n        var foreignKeyColumns = this.parent.getForeignKeyColumns();\n        for (var i = 0; i < foreignKeyColumns.length; i++) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setValue)(foreignKeyColumns[parseInt(i.toString(), 10)].field, (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.getForeignData)(foreignKeyColumns[parseInt(i.toString(), 10)], options.data), options.foreignKeyData);\n        }\n    };\n    RowModelGenerator.prototype.generateCells = function (options) {\n        var dummies = this.parent.getColumns();\n        var tmp = [];\n        for (var i = 0; i < dummies.length; i++) {\n            tmp.push(this.generateCell(dummies[parseInt(i.toString(), 10)], options.uid, (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dummies[parseInt(i.toString(), 10)].commands) ? undefined : _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.CommandColumn, null, i, options.foreignKeyData));\n        }\n        return tmp;\n    };\n    /**\n     *\n     * @param {Column} column - Defines column details\n     * @param {string} rowId - Defines row id\n     * @param {CellType} cellType  - Defines cell type\n     * @param {number} colSpan - Defines colSpan\n     * @param {number} oIndex - Defines index\n     * @param {Object} foreignKeyData - Defines foreign key data\n     * @returns {Cell<Column>} returns cell model\n     * @hidden\n     */\n    RowModelGenerator.prototype.generateCell = function (column, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': column.visible,\n            'isDataCell': !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.field || column.template),\n            'isTemplate': !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.template),\n            'rowID': rowId,\n            'column': column,\n            'cellType': !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cellType) ? cellType : _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Data,\n            'colSpan': colSpan,\n            'commands': column.commands,\n            'isForeignKey': column.isForeignColumn && column.isForeignColumn(),\n            'foreignKeyData': column.isForeignColumn && column.isForeignColumn() && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.getValue)(column.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new _models_cell__WEBPACK_IMPORTED_MODULE_5__.Cell(opt);\n    };\n    RowModelGenerator.prototype.refreshRows = function (input) {\n        for (var i = 0; i < input.length; i++) {\n            this.refreshForeignKeyRow(input[parseInt(i.toString(), 10)]);\n            input[parseInt(i.toString(), 10)].cells = this.generateCells(input[parseInt(i.toString(), 10)]);\n        }\n        return input;\n    };\n    RowModelGenerator.prototype.getInfiniteIndex = function (args) {\n        return args.requestType === 'infiniteScroll' || args.requestType === 'delete' || args.action === 'add'\n            ? ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(args.startIndex) ? args['index'] : args.startIndex) : 0;\n    };\n    return RowModelGenerator;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/row-model-generator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/service-locator.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/service-locator.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceLocator: () => (/* binding */ ServiceLocator)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _renderer_responsive_dialog_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../renderer/responsive-dialog-renderer */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/renderer/responsive-dialog-renderer.js\");\n\n\n/**\n * ServiceLocator\n *\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.services[\"\" + name])) {\n            this.services[\"\" + name] = type;\n        }\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.services[\"\" + name])) {\n            // eslint-disable-next-line no-throw-literal\n            throw \"The service \" + name + \" is not registered\";\n        }\n        return this.services[\"\" + name];\n    };\n    ServiceLocator.prototype.registerAdaptiveService = function (type, isAdaptiveUI, action) {\n        if (isAdaptiveUI) {\n            type.responsiveDialogRenderer = new _renderer_responsive_dialog_renderer__WEBPACK_IMPORTED_MODULE_1__.ResponsiveDialogRenderer(type.parent, type.serviceLocator);\n            type.responsiveDialogRenderer.action = action;\n        }\n        else {\n            if (type.responsiveDialogRenderer) {\n                type.responsiveDialogRenderer.removeEventListener();\n                type.responsiveDialogRenderer = undefined;\n            }\n        }\n    };\n    return ServiceLocator;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9zZXJ2aWNlcy9zZXJ2aWNlLWxvY2F0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlEO0FBQ3lCO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx1RUFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVFQUFpQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCwwRkFBd0I7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ3lCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlfdHJhdmVsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzeW5jZnVzaW9uK2VqMi1ncmlkc0AyOS4xLjQwL25vZGVfbW9kdWxlcy9Ac3luY2Z1c2lvbi9lajItZ3JpZHMvc3JjL2dyaWQvc2VydmljZXMvc2VydmljZS1sb2NhdG9yLmpzPzMwZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOdWxsT3JVbmRlZmluZWQgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYmFzZSc7XG5pbXBvcnQgeyBSZXNwb25zaXZlRGlhbG9nUmVuZGVyZXIgfSBmcm9tICcuLi9yZW5kZXJlci9yZXNwb25zaXZlLWRpYWxvZy1yZW5kZXJlcic7XG4vKipcbiAqIFNlcnZpY2VMb2NhdG9yXG4gKlxuICogQGhpZGRlblxuICovXG52YXIgU2VydmljZUxvY2F0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2VydmljZUxvY2F0b3IoKSB7XG4gICAgICAgIHRoaXMuc2VydmljZXMgPSB7fTtcbiAgICB9XG4gICAgU2VydmljZUxvY2F0b3IucHJvdG90eXBlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKG5hbWUsIHR5cGUpIHtcbiAgICAgICAgaWYgKGlzTnVsbE9yVW5kZWZpbmVkKHRoaXMuc2VydmljZXNbXCJcIiArIG5hbWVdKSkge1xuICAgICAgICAgICAgdGhpcy5zZXJ2aWNlc1tcIlwiICsgbmFtZV0gPSB0eXBlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTZXJ2aWNlTG9jYXRvci5wcm90b3R5cGUuZ2V0U2VydmljZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIGlmIChpc051bGxPclVuZGVmaW5lZCh0aGlzLnNlcnZpY2VzW1wiXCIgKyBuYW1lXSkpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gICAgICAgICAgICB0aHJvdyBcIlRoZSBzZXJ2aWNlIFwiICsgbmFtZSArIFwiIGlzIG5vdCByZWdpc3RlcmVkXCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZXNbXCJcIiArIG5hbWVdO1xuICAgIH07XG4gICAgU2VydmljZUxvY2F0b3IucHJvdG90eXBlLnJlZ2lzdGVyQWRhcHRpdmVTZXJ2aWNlID0gZnVuY3Rpb24gKHR5cGUsIGlzQWRhcHRpdmVVSSwgYWN0aW9uKSB7XG4gICAgICAgIGlmIChpc0FkYXB0aXZlVUkpIHtcbiAgICAgICAgICAgIHR5cGUucmVzcG9uc2l2ZURpYWxvZ1JlbmRlcmVyID0gbmV3IFJlc3BvbnNpdmVEaWFsb2dSZW5kZXJlcih0eXBlLnBhcmVudCwgdHlwZS5zZXJ2aWNlTG9jYXRvcik7XG4gICAgICAgICAgICB0eXBlLnJlc3BvbnNpdmVEaWFsb2dSZW5kZXJlci5hY3Rpb24gPSBhY3Rpb247XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAodHlwZS5yZXNwb25zaXZlRGlhbG9nUmVuZGVyZXIpIHtcbiAgICAgICAgICAgICAgICB0eXBlLnJlc3BvbnNpdmVEaWFsb2dSZW5kZXJlci5yZW1vdmVFdmVudExpc3RlbmVyKCk7XG4gICAgICAgICAgICAgICAgdHlwZS5yZXNwb25zaXZlRGlhbG9nUmVuZGVyZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBTZXJ2aWNlTG9jYXRvcjtcbn0oKSk7XG5leHBvcnQgeyBTZXJ2aWNlTG9jYXRvciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/service-locator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/summary-model-generator.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/summary-model-generator.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CaptionSummaryModelGenerator: () => (/* binding */ CaptionSummaryModelGenerator),\n/* harmony export */   GroupSummaryModelGenerator: () => (/* binding */ GroupSummaryModelGenerator),\n/* harmony export */   SummaryModelGenerator: () => (/* binding */ SummaryModelGenerator)\n/* harmony export */ });\n/* harmony import */ var _models_row__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/row */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/row.js\");\n/* harmony import */ var _models_column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/column */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column.js\");\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/enum */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/enum.js\");\n/* harmony import */ var _models_cell__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/cell */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/cell.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n/**\n * Summary row model generator\n *\n * @hidden\n */\nvar SummaryModelGenerator = /** @class */ (function () {\n    /**\n     * Constructor for Summary row model generator\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     */\n    function SummaryModelGenerator(parent) {\n        this.parent = parent;\n    }\n    SummaryModelGenerator.prototype.getData = function () {\n        var _this = this;\n        var rows = [];\n        var row = this.parent.aggregates.slice();\n        for (var i = 0; i < row.length; i++) {\n            var columns = row[parseInt(i.toString(), 10)].columns.filter(function (column) {\n                return !(column.footerTemplate || column.groupFooterTemplate || column.groupCaptionTemplate)\n                    || _this.columnSelector(column);\n            });\n            if (columns.length) {\n                rows.push({ columns: columns });\n            }\n        }\n        return rows;\n    };\n    SummaryModelGenerator.prototype.columnSelector = function (column) {\n        return column.footerTemplate !== undefined;\n    };\n    SummaryModelGenerator.prototype.getColumns = function (start) {\n        var columns = [];\n        if (this.parent.detailTemplate || !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.childGrid)) {\n            columns.push(new _models_column__WEBPACK_IMPORTED_MODULE_1__.Column({}));\n        }\n        if (this.parent.allowGrouping) {\n            for (var i = 0; i < this.parent.groupSettings.columns.length; i++) {\n                columns.push(new _models_column__WEBPACK_IMPORTED_MODULE_1__.Column({}));\n            }\n        }\n        if (this.parent.isRowDragable() && !start) {\n            columns.push(new _models_column__WEBPACK_IMPORTED_MODULE_1__.Column({}));\n        }\n        columns.push.apply(columns, this.parent.getColumns());\n        return columns;\n    };\n    SummaryModelGenerator.prototype.generateRows = function (input, args, start, end, columns) {\n        if (input.length === 0) {\n            if (args === undefined || !(args.count || args.loadSummaryOnEmpty)) {\n                return [];\n            }\n        }\n        var data = this.buildSummaryData(input, args);\n        var rows = [];\n        var row = this.getData();\n        for (var i = 0; i < row.length; i++) {\n            rows.push(this.getGeneratedRow(row[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)], args ? args.level : undefined, start, end, args ? args.parentUid : undefined, columns));\n        }\n        return rows;\n    };\n    SummaryModelGenerator.prototype.getGeneratedRow = function (summaryRow, data, raw, start, end, parentUid, columns) {\n        var tmp = [];\n        var indents = this.getIndentByLevel();\n        var isDetailGridAlone = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.childGrid);\n        var indentLength = this.parent.getIndentCount();\n        if (this.parent.groupSettings.columns.length && this.parent.allowRowDragAndDrop) {\n            indents.push('e-indentcelltop');\n        }\n        else if (this.parent.isRowDragable() && !start) {\n            indents = ['e-indentcelltop'];\n        }\n        var values = columns ? columns : this.getColumns(start);\n        for (var i = 0; i < values.length; i++) {\n            tmp.push(this.getGeneratedCell(values[parseInt(i.toString(), 10)], summaryRow, i >= indentLength ? this.getCellType() :\n                i === 0 && this.parent.childGrid ? _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.DetailFooterIntent : _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Indent, indents[parseInt(i.toString(), 10)], isDetailGridAlone));\n        }\n        var row = new _models_row__WEBPACK_IMPORTED_MODULE_3__.Row({ data: data, attributes: { class: 'e-summaryrow' } });\n        row.cells = tmp;\n        row.uid = (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.getUid)('grid-row');\n        row.parentUid = parentUid;\n        row.isAggregateRow = true;\n        row.visible = tmp.some(function (cell) { return cell.isDataCell && cell.visible; });\n        return row;\n    };\n    SummaryModelGenerator.prototype.getGeneratedCell = function (column, summaryRow, cellType, indent, isDetailGridAlone) {\n        //Get the summary column by display\n        var sColumn = summaryRow.columns.filter(function (scolumn) { return scolumn.columnName === column.field; })[0];\n        var attrs = {\n            'e-mappinguid': column.uid, index: column.index\n        };\n        if (column.textAlign) {\n            var alignmentClassMap = { right: 'e-rightalign', left: 'e-leftalign', center: 'e-centeralign', justify: 'e-justifyalign' };\n            if (alignmentClassMap[column.textAlign.toLowerCase()]) {\n                attrs.class = alignmentClassMap[column.textAlign.toLowerCase()];\n            }\n        }\n        if (indent) {\n            attrs.class = indent;\n        }\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(indent) && isDetailGridAlone) {\n            attrs.class = 'e-detailindentcelltop';\n        }\n        var opt = {\n            'visible': column.visible,\n            'isDataCell': !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sColumn),\n            'isTemplate': sColumn && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(sColumn.footerTemplate\n                || sColumn.groupFooterTemplate || sColumn.groupCaptionTemplate),\n            'column': sColumn || {},\n            'attributes': attrs,\n            'cellType': cellType\n        };\n        opt.column.headerText = column.headerText;\n        return new _models_cell__WEBPACK_IMPORTED_MODULE_5__.Cell(opt);\n    };\n    SummaryModelGenerator.prototype.buildSummaryData = function (data, args) {\n        var dummy = [];\n        var summaryRows = this.getData();\n        var single = {};\n        for (var i = 0; i < summaryRows.length; i++) {\n            single = {};\n            var column = summaryRows[parseInt(i.toString(), 10)].columns;\n            for (var j = 0; j < column.length; j++) {\n                single = this.setTemplate(column[parseInt(j.toString(), 10)], (args && args.aggregates) ? args : data, single);\n            }\n            dummy.push(single);\n        }\n        return dummy;\n    };\n    SummaryModelGenerator.prototype.getIndentByLevel = function () {\n        return this.parent.groupSettings.columns.map(function () { return 'e-indentcelltop'; });\n    };\n    SummaryModelGenerator.prototype.setTemplate = function (column, data, single) {\n        var types = column.type;\n        var helper = {};\n        var formatFn = column.getFormatter() || (function () { return function (a) { return a; }; })();\n        var group = data;\n        if (!(types instanceof Array)) {\n            types = [column.type];\n        }\n        for (var i = 0; i < types.length; i++) {\n            var key = column.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var disp = column.columnName;\n            var disablePageWiseAggregatesGroup = this.parent.groupSettings.disablePageWiseAggregates\n                && this.parent.groupSettings.columns.length && group.items ? true : false;\n            var val = (types[parseInt(i.toString(), 10)] !== 'Custom' || disablePageWiseAggregatesGroup) && group.aggregates\n                && key in group.aggregates ? group.aggregates[\"\" + key] :\n                (0,_base_util__WEBPACK_IMPORTED_MODULE_4__.calculateAggregate)(types[parseInt(i.toString(), 10)], group.aggregates ? group : data, column, this.parent);\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = val;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(val) ? formatFn(val) : ' ';\n            if (group.field) {\n                single[\"\" + disp].field = group.field;\n                single[\"\" + disp].key = group.key;\n            }\n        }\n        helper.format = column.getFormatter();\n        column.setTemplate(helper);\n        return single;\n    };\n    SummaryModelGenerator.prototype.getCellType = function () {\n        return _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.Summary;\n    };\n    return SummaryModelGenerator;\n}());\n\nvar GroupSummaryModelGenerator = /** @class */ (function (_super) {\n    __extends(GroupSummaryModelGenerator, _super);\n    function GroupSummaryModelGenerator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GroupSummaryModelGenerator.prototype.columnSelector = function (column) {\n        return column.groupFooterTemplate !== undefined;\n    };\n    GroupSummaryModelGenerator.prototype.getIndentByLevel = function (level) {\n        if (level === void 0) { level = this.parent.groupSettings.columns.length; }\n        if (this.parent.allowRowDragAndDrop && this.parent.groupSettings.columns.length) {\n            level -= 1;\n        }\n        return this.parent.groupSettings.columns.map(function (v, indx) { return indx <= level - 1 ? '' : 'e-indentcelltop'; });\n    };\n    GroupSummaryModelGenerator.prototype.getCellType = function () {\n        return _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.GroupSummary;\n    };\n    return GroupSummaryModelGenerator;\n}(SummaryModelGenerator));\n\nvar CaptionSummaryModelGenerator = /** @class */ (function (_super) {\n    __extends(CaptionSummaryModelGenerator, _super);\n    function CaptionSummaryModelGenerator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CaptionSummaryModelGenerator.prototype.columnSelector = function (column) {\n        return column.groupCaptionTemplate !== undefined;\n    };\n    CaptionSummaryModelGenerator.prototype.getData = function () {\n        var initVal = { columns: [] };\n        return [_super.prototype.getData.call(this).reduce(function (prev, cur) {\n                prev.columns = prev.columns.concat(cur.columns);\n                return prev;\n            }, initVal)];\n    };\n    CaptionSummaryModelGenerator.prototype.isEmpty = function () {\n        return (this.getData()[0].columns || []).length === 0;\n    };\n    CaptionSummaryModelGenerator.prototype.getCellType = function () {\n        return _base_enum__WEBPACK_IMPORTED_MODULE_2__.CellType.CaptionSummary;\n    };\n    return CaptionSummaryModelGenerator;\n}(SummaryModelGenerator));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/summary-model-generator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValueFormatter: () => (/* binding */ ValueFormatter)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n\n\n/**\n * ValueFormatter class to globalize the value.\n *\n * @hidden\n */\nvar ValueFormatter = /** @class */ (function () {\n    function ValueFormatter(cultureName) {\n        this.intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Internationalization();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cultureName)) {\n            this.intl.culture = cultureName;\n        }\n    }\n    ValueFormatter.prototype.getFormatFunction = function (format) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format) && (format.type === 'dateTime' || format.type === 'datetime' || format.type === 'date' || format.type === 'time')) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    ValueFormatter.prototype.getParserFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateParser(format);\n        }\n        else {\n            return this.intl.getNumberParser(format);\n        }\n    };\n    ValueFormatter.prototype.fromView = function (value, format, type) {\n        if ((type === 'date' || type === 'datetime' || type === 'number') && (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format))) {\n            return format(value);\n        }\n        else {\n            return value;\n        }\n    };\n    ValueFormatter.prototype.toView = function (value, format) {\n        var result = value;\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(format) && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(value)) {\n            result = format(value);\n        }\n        return result;\n    };\n    ValueFormatter.prototype.setCulture = function (cultureName) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cultureName)) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.setCulture)(cultureName);\n        }\n    };\n    return ValueFormatter;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvZ3JpZC9zZXJ2aWNlcy92YWx1ZS1mb3JtYXR0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUQ7QUFDZTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixzRUFBb0I7QUFDNUMsYUFBYSx1RUFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHVFQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0UsdUVBQWlCO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHVFQUFpQixhQUFhLHVFQUFpQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1RUFBaUI7QUFDOUIsWUFBWSxnRUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ3lCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlfdHJhdmVsLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzeW5jZnVzaW9uK2VqMi1ncmlkc0AyOS4xLjQwL25vZGVfbW9kdWxlcy9Ac3luY2Z1c2lvbi9lajItZ3JpZHMvc3JjL2dyaWQvc2VydmljZXMvdmFsdWUtZm9ybWF0dGVyLmpzPzVlMDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOdWxsT3JVbmRlZmluZWQgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYmFzZSc7XG5pbXBvcnQgeyBJbnRlcm5hdGlvbmFsaXphdGlvbiwgc2V0Q3VsdHVyZSB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1iYXNlJztcbi8qKlxuICogVmFsdWVGb3JtYXR0ZXIgY2xhc3MgdG8gZ2xvYmFsaXplIHRoZSB2YWx1ZS5cbiAqXG4gKiBAaGlkZGVuXG4gKi9cbnZhciBWYWx1ZUZvcm1hdHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBWYWx1ZUZvcm1hdHRlcihjdWx0dXJlTmFtZSkge1xuICAgICAgICB0aGlzLmludGwgPSBuZXcgSW50ZXJuYXRpb25hbGl6YXRpb24oKTtcbiAgICAgICAgaWYgKCFpc051bGxPclVuZGVmaW5lZChjdWx0dXJlTmFtZSkpIHtcbiAgICAgICAgICAgIHRoaXMuaW50bC5jdWx0dXJlID0gY3VsdHVyZU5hbWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgVmFsdWVGb3JtYXR0ZXIucHJvdG90eXBlLmdldEZvcm1hdEZ1bmN0aW9uID0gZnVuY3Rpb24gKGZvcm1hdCkge1xuICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKGZvcm1hdCkgJiYgKGZvcm1hdC50eXBlID09PSAnZGF0ZVRpbWUnIHx8IGZvcm1hdC50eXBlID09PSAnZGF0ZXRpbWUnIHx8IGZvcm1hdC50eXBlID09PSAnZGF0ZScgfHwgZm9ybWF0LnR5cGUgPT09ICd0aW1lJykpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmludGwuZ2V0RGF0ZUZvcm1hdChmb3JtYXQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW50bC5nZXROdW1iZXJGb3JtYXQoZm9ybWF0KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVmFsdWVGb3JtYXR0ZXIucHJvdG90eXBlLmdldFBhcnNlckZ1bmN0aW9uID0gZnVuY3Rpb24gKGZvcm1hdCkge1xuICAgICAgICBpZiAoZm9ybWF0LnR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmludGwuZ2V0RGF0ZVBhcnNlcihmb3JtYXQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW50bC5nZXROdW1iZXJQYXJzZXIoZm9ybWF0KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVmFsdWVGb3JtYXR0ZXIucHJvdG90eXBlLmZyb21WaWV3ID0gZnVuY3Rpb24gKHZhbHVlLCBmb3JtYXQsIHR5cGUpIHtcbiAgICAgICAgaWYgKCh0eXBlID09PSAnZGF0ZScgfHwgdHlwZSA9PT0gJ2RhdGV0aW1lJyB8fCB0eXBlID09PSAnbnVtYmVyJykgJiYgKCFpc051bGxPclVuZGVmaW5lZChmb3JtYXQpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZvcm1hdCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFZhbHVlRm9ybWF0dGVyLnByb3RvdHlwZS50b1ZpZXcgPSBmdW5jdGlvbiAodmFsdWUsIGZvcm1hdCkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gdmFsdWU7XG4gICAgICAgIGlmICghaXNOdWxsT3JVbmRlZmluZWQoZm9ybWF0KSAmJiAhaXNOdWxsT3JVbmRlZmluZWQodmFsdWUpKSB7XG4gICAgICAgICAgICByZXN1bHQgPSBmb3JtYXQodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBWYWx1ZUZvcm1hdHRlci5wcm90b3R5cGUuc2V0Q3VsdHVyZSA9IGZ1bmN0aW9uIChjdWx0dXJlTmFtZSkge1xuICAgICAgICBpZiAoIWlzTnVsbE9yVW5kZWZpbmVkKGN1bHR1cmVOYW1lKSkge1xuICAgICAgICAgICAgc2V0Q3VsdHVyZShjdWx0dXJlTmFtZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBWYWx1ZUZvcm1hdHRlcjtcbn0oKSk7XG5leHBvcnQgeyBWYWx1ZUZvcm1hdHRlciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/value-formatter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ColumnWidthService: () => (/* binding */ ColumnWidthService)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _base_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\n/* harmony import */ var _models_column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/column */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/models/column.js\");\n/* harmony import */ var _base_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _base_string_literals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../base/string-literals */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/string-literals.js\");\n\n\n\n\n\n\n/**\n * ColumnWidthService\n *\n * @hidden\n */\nvar ColumnWidthService = /** @class */ (function () {\n    function ColumnWidthService(parent) {\n        this.parent = parent;\n    }\n    ColumnWidthService.prototype.setWidthToColumns = function () {\n        var i = 0;\n        var indexes = this.parent.getColumnIndexesInView();\n        var wFlag = true;\n        var totalColumnsWidth = 0;\n        if (this.parent.allowGrouping) {\n            for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n                    wFlag = false;\n                    continue;\n                }\n                this.setColumnWidth(new _models_column__WEBPACK_IMPORTED_MODULE_1__.Column({ width: '30px' }), i);\n            }\n        }\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            this.setColumnWidth(new _models_column__WEBPACK_IMPORTED_MODULE_1__.Column({ width: '30px' }), i);\n            i++;\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n            this.setColumnWidth(new _models_column__WEBPACK_IMPORTED_MODULE_1__.Column({ width: '30px' }), i);\n            i++;\n        }\n        var columns = this.parent.getColumns();\n        for (var j = 0; j < columns.length; j++) {\n            this.setColumnWidth(columns[parseInt(j.toString(), 10)], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n            this.setColumnWidth(new _models_column__WEBPACK_IMPORTED_MODULE_1__.Column({ width: '30px' }), this.parent.groupSettings.columns.length + columns.length);\n        }\n        totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n        if (totalColumnsWidth !== 'auto') {\n            if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n                this.setMinwidthBycalculation(totalColumnsWidth);\n            }\n            var maxWidthColumns = columns.filter(function (a) {\n                return !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(a.maxWidth);\n            });\n            var header = this.parent.getHeaderTable();\n            var content = this.parent.getContentTable();\n            if (this.parent.allowResizing && this.parent.element.getBoundingClientRect().width > totalColumnsWidth &&\n                maxWidthColumns.length === columns.length && header && content) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([header, content], ['e-tableborder']);\n            }\n        }\n    };\n    ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n        var _this = this;\n        var difference = 0;\n        var collection = this.parent.getColumns().filter(function (a) {\n            if (_this.parent.allowResizing) {\n                return ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(a.width) || a.width === 'auto') && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(a.maxWidth);\n            }\n            else {\n                return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(a.width) || a.width === 'auto';\n            }\n        });\n        if (collection.length) {\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.parent.width) && this.parent.width !== 'auto' &&\n                typeof (this.parent.width) === 'string' && this.parent.width.indexOf('%') === -1) {\n                difference = parseInt(this.parent.width, 10) - tWidth;\n            }\n            else {\n                difference = this.parent.element.getBoundingClientRect().width - tWidth;\n            }\n            var tmWidth = 0;\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var cols = collection_1[_i];\n                tmWidth += !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(cols.minWidth) ?\n                    ((typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth)) : 0;\n            }\n            for (var i = 0; i < collection.length; i++) {\n                if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && (i !== collection.length - 1)) {\n                    this.setUndefinedColumnWidth(collection);\n                }\n                var index = this.parent.getColumnIndexByField(collection[parseInt(i.toString(), 10)].field) + this.parent.getIndentCount();\n                if (tWidth !== 0 && difference < tmWidth) {\n                    this.setWidth(collection[parseInt(i.toString(), 10)].minWidth, index);\n                }\n                else if (tWidth !== 0 && difference > tmWidth) {\n                    this.setWidth('', index, true);\n                }\n            }\n        }\n    };\n    ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n        for (var k = 0; k < collection.length; k++) {\n            if (k !== collection.length - 1) {\n                collection[parseInt(k.toString(), 10)].width = 200;\n                this.setWidth(200, this.parent.getColumnIndexByField(collection[parseInt(k.toString(), 10)].field));\n            }\n        }\n    };\n    ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n        if (this.parent.getColumns().length < 1) {\n            return;\n        }\n        var columnIndex = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n        var cWidth = this.getWidth(column);\n        var tgridWidth = this.getTableWidth(this.parent.getColumns());\n        if (cWidth !== null) {\n            this.setWidth(cWidth, columnIndex);\n            if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1 && tgridWidth !== 'auto') {\n                this.setMinwidthBycalculation(tgridWidth);\n            }\n            if (this.parent.allowResizing && (module === 'resize' || this.parent.getFrozenColumns())) {\n                var contentTable = this.parent.getContentTable();\n                this.setWidthToTable(this.parent.getFrozenColumns() && contentTable.style.width.indexOf('px') === -1 && tgridWidth < contentTable.clientWidth);\n            }\n            this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.columnWidthChanged, { index: columnIndex, width: cWidth, column: column, module: module });\n        }\n    };\n    ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n        if (this.parent.groupSettings.columns.length > index && (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.ispercentageWidth)(this.parent) &&\n            !(this.parent.resizeModule && this.parent.resizeModule.resizeProcess)) {\n            var elementWidth = this.parent.element.offsetWidth;\n            width = (30 / elementWidth * 100).toFixed(1) + '%';\n        }\n        var header = this.parent.getHeaderTable();\n        var content = this.parent.getContentTable();\n        var fWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(width);\n        var headerCol = header.querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_4__.colGroup)\n            .children[parseInt(index.toString(), 10)];\n        if (headerCol && !clear) {\n            headerCol.style.width = fWidth;\n        }\n        else if (headerCol && clear) {\n            headerCol.style.width = '';\n        }\n        var contentCol = content.querySelector(_base_string_literals__WEBPACK_IMPORTED_MODULE_4__.colGroup).children[parseInt(index.toString(), 10)];\n        if (contentCol && !clear) {\n            contentCol.style.width = fWidth;\n        }\n        else if (contentCol && clear) {\n            contentCol.style.width = '';\n        }\n        if (!this.parent.enableColumnVirtualization && this.parent.isEdit) {\n            var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n            var editTableCol = [];\n            for (var i = 0; i < edit.length; i++) {\n                if ((0,_base_util__WEBPACK_IMPORTED_MODULE_3__.parentsUntil)(edit[parseInt(i.toString(), 10)], 'e-grid').id === this.parent.element.id) {\n                    for (var j = 0; j < edit[parseInt(i.toString(), 10)].querySelector('colgroup').children.length; j++) {\n                        editTableCol.push(edit[parseInt(i.toString(), 10)].querySelector('colgroup').children[parseInt(j.toString(), 10)]);\n                    }\n                }\n            }\n            if (edit.length && editTableCol.length && editTableCol[parseInt(index.toString(), 10)]) {\n                editTableCol[parseInt(index.toString(), 10)].style.width = fWidth;\n            }\n        }\n        if (this.parent.isFrozenGrid() && this.parent.enableColumnVirtualization) {\n            this.refreshFrozenScrollbar();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n        var args = { cancel: false };\n        this.parent.notify(_base_constant__WEBPACK_IMPORTED_MODULE_2__.preventFrozenScrollRefresh, args);\n        if (args.cancel) {\n            return;\n        }\n        var scrollWidth = (0,_base_util__WEBPACK_IMPORTED_MODULE_3__.getScrollBarWidth)();\n        var movableScrollbar = this.parent.element.querySelector('.e-movablescrollbar');\n        var movableWidth = this.parent.getContent().firstElementChild.getBoundingClientRect().width;\n        if (this.parent.enableColumnVirtualization) {\n            var placeHolder = this.parent.getContent().querySelector('.e-virtualtrack');\n            if (placeHolder) {\n                movableWidth = placeHolder.scrollWidth;\n            }\n        }\n        if (this.parent.height !== 'auto') {\n            movableWidth = movableWidth + scrollWidth;\n        }\n        movableScrollbar.firstElementChild.style.width = movableWidth + 'px';\n    };\n    ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n        var previous = this.getHeightFromDirection(element, 'previous');\n        var next = this.getHeightFromDirection(element, 'next');\n        return previous + next;\n    };\n    ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n        var sibling = element[direction + 'ElementSibling'];\n        var result = 0;\n        var classList = [_base_string_literals__WEBPACK_IMPORTED_MODULE_4__.gridHeader, _base_string_literals__WEBPACK_IMPORTED_MODULE_4__.gridFooter, 'e-groupdroparea', 'e-gridpager', 'e-toolbar', 'e-temp-toolbar'];\n        while (sibling) {\n            if (classList.some(function (value) { return sibling.classList.contains(value); })) {\n                result += sibling.offsetHeight;\n            }\n            sibling = sibling[direction + 'ElementSibling'];\n        }\n        return result;\n    };\n    ColumnWidthService.prototype.isWidthUndefined = function () {\n        var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n            return (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.width) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(col.minWidth);\n        }).length;\n        return (this.parent.getColumns().length === isWidUndefCount);\n    };\n    ColumnWidthService.prototype.getWidth = function (column) {\n        if (this.parent.allowResizing && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.width)) {\n            if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.minWidth) && (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(column.maxWidth)\n                && !this.isWidthUndefined()) {\n                column.width = 200;\n            }\n            else if (column.maxWidth) {\n                column.width = column.maxWidth;\n            }\n        }\n        if (!column.width) {\n            return null;\n        }\n        var width = parseInt(column.width.toString(), 10);\n        if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n            return column.minWidth;\n        }\n        else if (column.maxWidth && width > parseInt(column.maxWidth.toString(), 10)) {\n            return column.maxWidth;\n        }\n        else {\n            return column.width;\n        }\n    };\n    ColumnWidthService.prototype.getTableWidth = function (columns, resetIndentWidth) {\n        var tWidth = 0;\n        var isAutoColumn = false;\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.visible !== false) {\n                var cWidth = this.getWidth(column);\n                if (column.width === 'auto' || !column.width) {\n                    if (this.parent.allowResizing && !resetIndentWidth) {\n                        if (!column.maxWidth) {\n                            isAutoColumn = true;\n                        }\n                    }\n                    else {\n                        cWidth = 0;\n                    }\n                }\n                if (cWidth !== null) {\n                    tWidth += parseInt(cWidth.toString(), 10);\n                }\n            }\n        }\n        tWidth = isAutoColumn ? 'auto' : tWidth;\n        return tWidth;\n    };\n    ColumnWidthService.prototype.setWidthToTable = function (isMaxWidth) {\n        var tWidth = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.formatUnit)(this.getTableWidth(this.parent.getColumns()));\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            this.setColumnWidth(new _models_column__WEBPACK_IMPORTED_MODULE_1__.Column({ width: '30px' }));\n        }\n        tWidth = (this.isAutoResize() || tWidth === 'auto' || isMaxWidth) ? '100%' : tWidth;\n        this.parent.getHeaderTable().style.width = tWidth;\n        this.parent.getContentTable().style.width = tWidth;\n        var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n        if (edit) {\n            edit.style.width = tWidth;\n        }\n    };\n    ColumnWidthService.prototype.isAutoResize = function () {\n        return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n    };\n    return ColumnWidthService;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/numeric-container.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/numeric-container.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NumericContainer: () => (/* binding */ NumericContainer)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n\n\n\n/**\n * `NumericContainer` module handles rendering and refreshing numeric container.\n */\nvar NumericContainer = /** @class */ (function () {\n    /**\n     * Constructor for numericContainer module\n     *\n     * @param {Pager} pagerModule - specifies the pagerModule\n     * @hidden\n     */\n    function NumericContainer(pagerModule) {\n        this.pagerModule = pagerModule;\n    }\n    /**\n     * The function is used to render numericContainer\n     *\n     * @returns {void}\n     * @hidden\n     */\n    NumericContainer.prototype.render = function () {\n        this.pagerElement = this.pagerModule.element;\n        this.renderNumericContainer();\n        this.refreshNumericLinks();\n        this.wireEvents();\n    };\n    /**\n     * Refreshes the numeric container of Pager.\n     *\n     * @returns {void}\n     */\n    NumericContainer.prototype.refresh = function () {\n        this.pagerModule.updateTotalPages();\n        if (this.links.length) {\n            this.updateLinksHtml();\n        }\n        this.refreshAriaAttrLabel();\n        this.updateStyles();\n    };\n    /**\n     * The function is used to refresh refreshNumericLinks\n     *\n     * @returns {void}\n     * @hidden\n     */\n    NumericContainer.prototype.refreshNumericLinks = function () {\n        var link;\n        var pagerObj = this.pagerModule;\n        var div = pagerObj.element.querySelector('.e-numericcontainer');\n        var frag = document.createDocumentFragment();\n        div.innerHTML = '';\n        for (var i = 1; i <= pagerObj.pageCount; i++) {\n            link = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('a', {\n                className: 'e-link e-numericitem e-spacing e-pager-default',\n                attrs: { tabindex: '-1', 'aria-label': pagerObj.getLocalizedLabel('Page') + i + pagerObj.getLocalizedLabel('Of') +\n                        pagerObj.totalPages + pagerObj.getLocalizedLabel('Pages'), href: '#' }\n            });\n            if (pagerObj.currentPage === i) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(link, ['e-currentitem', 'e-active'], ['e-pager-default']);\n                link.setAttribute('aria-current', 'page');\n            }\n            frag.appendChild(link);\n        }\n        div.appendChild(frag);\n        this.links = [].slice.call(div.childNodes);\n    };\n    /**\n     * Binding events to the element while component creation\n     *\n     * @returns {void}\n     * @hidden\n     */\n    NumericContainer.prototype.wireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.pagerElement, 'click', this.clickHandler, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.pagerElement, 'auxclick', this.auxiliaryClickHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy\n     *\n     * @returns {void}\n     * @hidden\n     */\n    NumericContainer.prototype.unwireEvents = function () {\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.pagerModule.element, 'click', this.clickHandler);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.pagerModule.element, 'auxclick', this.auxiliaryClickHandler);\n    };\n    /**\n     * To destroy the PagerMessage\n     *\n     * @function destroy\n     * @returns {void}\n     * @hidden\n     */\n    NumericContainer.prototype.destroy = function () {\n        this.unwireEvents();\n    };\n    NumericContainer.prototype.refreshAriaAttrLabel = function () {\n        var pagerObj = this.pagerModule;\n        var numericContainer = pagerObj.element.querySelector('.e-numericcontainer');\n        var links = numericContainer.querySelectorAll('a');\n        for (var i = 0; i < links.length; i++) {\n            if (links[parseInt(i.toString(), 10)].hasAttribute('aria-label') && links[parseInt(i.toString(), 10)].hasAttribute('index')) {\n                links[parseInt(i.toString(), 10)].setAttribute('aria-label', pagerObj.getLocalizedLabel('Page') + links[parseInt(i.toString(), 10)].getAttribute('index')\n                    + pagerObj.getLocalizedLabel('Of') + pagerObj.totalPages + pagerObj.getLocalizedLabel('Pages'));\n            }\n        }\n    };\n    NumericContainer.prototype.renderNumericContainer = function () {\n        this.element = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-pagercontainer', attrs: { 'role': 'navigation' }\n        });\n        this.renderFirstNPrev(this.element);\n        this.renderPrevPagerSet(this.element);\n        this.element.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-numericcontainer' }));\n        this.renderNextPagerSet(this.element);\n        this.renderNextNLast(this.element);\n        this.pagerModule.element.appendChild(this.element);\n    };\n    NumericContainer.prototype.renderFirstNPrev = function (pagerContainer) {\n        this.first = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-first e-icons e-icon-first',\n            attrs: {\n                title: this.pagerModule.getLocalizedLabel('firstPageTooltip'),\n                tabindex: '-1', role: 'button'\n            }\n        });\n        this.prev = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-prev e-icons e-icon-prev',\n            attrs: {\n                title: this.pagerModule.getLocalizedLabel('previousPageTooltip'),\n                tabindex: '-1', role: 'button'\n            }\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([this.first, this.prev], pagerContainer);\n    };\n    NumericContainer.prototype.renderPrevPagerSet = function (pagerContainer) {\n        var prevPager = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.PP = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('a', {\n            className: 'e-link e-pp e-spacing', innerHTML: '...',\n            attrs: {\n                title: this.pagerModule.getLocalizedLabel('previousPagerTooltip'),\n                'aria-label': this.pagerModule.getLocalizedLabel('previousPagerTooltip'),\n                tabindex: '-1',\n                href: '#'\n            }\n        });\n        prevPager.appendChild(this.PP);\n        pagerContainer.appendChild(prevPager);\n    };\n    NumericContainer.prototype.renderNextPagerSet = function (pagerContainer) {\n        var nextPager = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div');\n        this.NP = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('a', {\n            className: 'e-link e-np e-spacing',\n            innerHTML: '...', attrs: {\n                title: this.pagerModule.getLocalizedLabel('nextPagerTooltip'),\n                'aria-label': this.pagerModule.getLocalizedLabel('nextPagerTooltip'),\n                tabindex: '-1',\n                href: '#'\n            }\n        });\n        nextPager.appendChild(this.NP);\n        pagerContainer.appendChild(nextPager);\n    };\n    NumericContainer.prototype.renderNextNLast = function (pagerContainer) {\n        this.next = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-next e-icons e-icon-next',\n            attrs: {\n                title: this.pagerModule.getLocalizedLabel('nextPageTooltip'),\n                tabindex: '-1', role: 'button'\n            }\n        });\n        this.last = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-last e-icons e-icon-last',\n            attrs: {\n                title: this.pagerModule.getLocalizedLabel('lastPageTooltip'),\n                tabindex: '-1', role: 'button'\n            }\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([this.next, this.last], pagerContainer);\n    };\n    NumericContainer.prototype.clickHandler = function (e) {\n        var pagerObj = this.pagerModule;\n        this.target = e.target;\n        if (this.target.classList.contains('e-numericitem')) {\n            e.preventDefault();\n        }\n        pagerObj.previousPageNo = pagerObj.currentPage;\n        if (!this.target.classList.contains('e-disable') && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.target.getAttribute('index'))) {\n            pagerObj.currentPage = parseInt(this.target.getAttribute('index'), 10);\n            this.pagerModule.isInteracted = true;\n            pagerObj.dataBind();\n        }\n        return false;\n    };\n    NumericContainer.prototype.auxiliaryClickHandler = function (e) {\n        this.target = e.target;\n        if (this.target.classList.contains('e-numericitem') && (e.button === 1)) {\n            e.preventDefault();\n        }\n    };\n    NumericContainer.prototype.updateLinksHtml = function () {\n        var pagerObj = this.pagerModule;\n        var currentPageSet;\n        var isLastSet;\n        var pageNo;\n        var numItems = this.pagerElement.querySelectorAll('.e-numericitem:not(.e-hide):not([style*=\"display: none\"]):not(.e-np):not(.e-pp)');\n        pagerObj.currentPage = pagerObj.totalPages === 1 ? 1 : pagerObj.currentPage;\n        if (pagerObj.currentPage > pagerObj.totalPages && pagerObj.totalPages) {\n            pagerObj.currentPage = pagerObj.totalPages;\n        }\n        currentPageSet = parseInt((pagerObj.currentPage / pagerObj.pageCount).toString(), 10);\n        if (pagerObj.currentPage % pagerObj.pageCount === 0 && currentPageSet > 0) {\n            currentPageSet = currentPageSet - 1;\n        }\n        for (var i = 0; i < pagerObj.pageCount; i++) {\n            if (pagerObj.isPagerResized) {\n                var focusedItem = this.pagerElement.querySelector('.e-focus');\n                var focusedorTarget = this.target ? this.target : focusedItem ? focusedItem : null;\n                var prevFocused = false;\n                var nextFocused = false;\n                var firstFocused = false;\n                var lastFocused = false;\n                var numItemFocused = false;\n                var npFocused = false;\n                var ppFocused = false;\n                if (focusedorTarget) {\n                    var classList_1 = focusedorTarget.classList;\n                    if (classList_1.contains('e-icons')) {\n                        switch (true) {\n                            case classList_1.contains('e-prev'):\n                                prevFocused = true;\n                                break;\n                            case classList_1.contains('e-next'):\n                                nextFocused = true;\n                                break;\n                            case classList_1.contains('e-first'):\n                                firstFocused = true;\n                                break;\n                            case classList_1.contains('e-last'):\n                                lastFocused = true;\n                                break;\n                        }\n                    }\n                    else if (classList_1.contains('e-numericitem')) {\n                        switch (true) {\n                            case classList_1.contains('e-np'):\n                                npFocused = true;\n                                break;\n                            case classList_1.contains('e-pp'):\n                                ppFocused = true;\n                                break;\n                            default:\n                                numItemFocused = classList_1.contains('e-numericitem');\n                                break;\n                        }\n                    }\n                }\n                isLastSet = lastFocused || (this.pagerModule.keyAction === 'End');\n                numItems = this.pagerElement.querySelectorAll('.e-numericitem:not(.e-hide):not([style*=\"display: none\"]):not(.e-np):not(.e-pp)');\n                var isPageAvailable = Array.from(numItems).some(function (item) { return parseInt(item.getAttribute('index'), 10) === pagerObj.currentPage; });\n                //Setting pageNo to render based on key action or click action.\n                if (firstFocused || this.pagerModule.keyAction === 'Home') {\n                    pageNo = 1 + i;\n                }\n                else if (lastFocused || this.pagerModule.keyAction === 'End') {\n                    pageNo = (currentPageSet * pagerObj.pageCount) + 1 + i;\n                }\n                else if (nextFocused || this.pagerModule.keyAction === 'ArrowRight' || prevFocused || this.pagerModule.keyAction === 'ArrowLeft') {\n                    if (isPageAvailable) {\n                        pageNo = parseInt(numItems[0].getAttribute('index'), 10) + i;\n                    }\n                    else if (prevFocused || this.pagerModule.keyAction === 'ArrowLeft') {\n                        pageNo = parseInt(this.PP.getAttribute('index'), 10) + i;\n                    }\n                    else {\n                        pageNo = pagerObj.currentPage + i;\n                    }\n                }\n                else if (npFocused || ppFocused) {\n                    pageNo = pagerObj.currentPage + i;\n                }\n                else if (numItemFocused) {\n                    pageNo = (parseInt(numItems[0].getAttribute('index'), 10) + i);\n                }\n                else {\n                    pageNo = (currentPageSet * pagerObj.pageCount) + 1 + i;\n                }\n            }\n            else {\n                pageNo = (currentPageSet * pagerObj.pageCount) + 1 + i;\n            }\n            if (pageNo <= pagerObj.totalPages) {\n                this.links[parseInt(i.toString(), 10)].classList.remove('e-hide');\n                this.links[parseInt(i.toString(), 10)].style.display = '';\n                this.links[parseInt(i.toString(), 10)].setAttribute('index', pageNo.toString());\n                this.links[parseInt(i.toString(), 10)].innerHTML = !pagerObj.customText ? pageNo.toString() : pagerObj.customText + pageNo;\n                if (pagerObj.currentPage !== pageNo) {\n                    this.links[parseInt(i.toString(), 10)].classList.add('e-pager-default');\n                }\n                else {\n                    this.links[parseInt(i.toString(), 10)].classList.remove('e-pager-default');\n                }\n            }\n            else {\n                this.links[parseInt(i.toString(), 10)].innerHTML = !pagerObj.customText ? pageNo.toString() : pagerObj.customText + pageNo;\n                this.links[parseInt(i.toString(), 10)].style.display = 'none';\n            }\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.links[parseInt(i.toString(), 10)], [], ['e-currentitem', 'e-active']);\n            this.links[parseInt(i.toString(), 10)].removeAttribute('aria-current');\n        }\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.first, {\n            'index': '1',\n            'title': this.pagerModule.getLocalizedLabel('firstPageTooltip')\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.pagerElement.querySelector('.e-mfirst'), {\n            'index': '1',\n            'title': this.pagerModule.getLocalizedLabel('firstPageTooltip')\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.last, {\n            'index': pagerObj.totalPages.toString(),\n            'title': this.pagerModule.getLocalizedLabel('lastPageTooltip')\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.pagerElement.querySelector('.e-mlast'), {\n            'index': pagerObj.totalPages.toString(),\n            'title': this.pagerModule.getLocalizedLabel('lastPageTooltip')\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.prev, {\n            'index': (pagerObj.currentPage - 1).toString(),\n            'title': this.pagerModule.getLocalizedLabel('previousPageTooltip')\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.pagerElement.querySelector('.e-mprev'), {\n            'index': (pagerObj.currentPage - 1).toString(),\n            'title': this.pagerModule.getLocalizedLabel('previousPageTooltip')\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.next, {\n            'index': (pagerObj.currentPage + 1).toString(),\n            'title': this.pagerModule.getLocalizedLabel('nextPageTooltip')\n        });\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.pagerElement.querySelector('.e-mnext'), {\n            'index': (pagerObj.currentPage + 1).toString(),\n            'title': this.pagerModule.getLocalizedLabel('nextPageTooltip')\n        });\n        var ppIndex = (this.pagerModule.isPagerResized && numItems.length)\n            ? isLastSet\n                ? parseInt(numItems[0].getAttribute('index'), 10) - pagerObj.avgNumItems\n                : parseInt(numItems[0].getAttribute('index'), 10) - numItems.length\n            : parseInt(this.links[0].getAttribute('index'), 10) - pagerObj.pageCount;\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.PP, {\n            'index': ((ppIndex < 1) ? '1' : ppIndex.toString()),\n            'title': this.pagerModule.getLocalizedLabel('previousPagerTooltip'),\n            'aria-label': this.pagerModule.getLocalizedLabel('previousPagerTooltip')\n        });\n        var NPIndex = (this.pagerModule.isPagerResized && numItems.length)\n            ? parseInt(numItems[numItems.length - 1].getAttribute('index'), 10)\n            : parseInt(this.links[this.links.length - 1].getAttribute('index'), 10);\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.attributes)(this.NP, {\n            'index': (NPIndex + 1).toString(),\n            'title': this.pagerModule.getLocalizedLabel('nextPagerTooltip'),\n            'aria-label': this.pagerModule.getLocalizedLabel('nextPagerTooltip')\n        });\n        this.target = undefined;\n    };\n    NumericContainer.prototype.updateStyles = function () {\n        var _this = this;\n        this.updateFirstNPrevStyles();\n        this.updatePrevPagerSetStyles();\n        this.updateNextPagerSetStyles();\n        this.updateNextNLastStyles();\n        if (this.links.length) {\n            var currentPageIndex = this.links.findIndex(function (link) { return link.getAttribute('index') === _this.pagerModule.currentPage.toString(); });\n            var currentPage = (this.pagerModule.isPagerResized && currentPageIndex !== -1) ? currentPageIndex\n                : ((this.pagerModule.currentPage - 1) % this.pagerModule.pageCount);\n            if (this.links[parseInt(currentPage.toString(), 10)]) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.links[parseInt(currentPage.toString(), 10)], ['e-currentitem', 'e-active'], []);\n                this.links[parseInt(currentPage.toString(), 10)].setAttribute('aria-current', 'page');\n            }\n        }\n    };\n    NumericContainer.prototype.updateFirstNPrevStyles = function () {\n        var firstPage = ['e-firstpage', 'e-pager-default'];\n        var firstPageDisabled = ['e-firstpagedisabled', 'e-disable'];\n        var prevPage = ['e-prevpage', 'e-pager-default'];\n        var prevPageDisabled = ['e-prevpagedisabled', 'e-disable'];\n        if (this.pagerModule.totalPages > 0 && this.pagerModule.currentPage > 1) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.prev, prevPage, prevPageDisabled);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.first, firstPage, firstPageDisabled);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.pagerElement.querySelector('.e-mfirst'), firstPage, firstPageDisabled);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.pagerElement.querySelector('.e-mprev'), prevPage, prevPageDisabled);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.prev, prevPageDisabled, prevPage);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.first, firstPageDisabled, firstPage);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.pagerElement.querySelector('.e-mprev'), prevPageDisabled, prevPage);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.pagerElement.querySelector('.e-mfirst'), firstPageDisabled, firstPage);\n        }\n    };\n    NumericContainer.prototype.updatePrevPagerSetStyles = function () {\n        if (this.pagerModule.currentPage > this.pagerModule.pageCount || (this.pagerModule.isPagerResized\n            && this.links.findIndex(function (link) { return parseInt(link.getAttribute('index'), 10) === 1; }))) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.PP, ['e-numericitem', 'e-pager-default'], ['e-nextprevitemdisabled', 'e-disable']);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.PP, ['e-nextprevitemdisabled', 'e-disable'], ['e-numericitem', 'e-pager-default']);\n        }\n    };\n    NumericContainer.prototype.updateNextPagerSetStyles = function () {\n        var pagerObj = this.pagerModule;\n        var firstPage = this.links[0].innerHTML.replace(pagerObj.customText, '');\n        var numItems = this.pagerElement.querySelectorAll('.e-numericitem:not(.e-hide):not([style*=\"display: none\"]):not(.e-np):not(.e-pp)');\n        if (!firstPage.length || !this.links.length || (parseInt(firstPage, 10) + pagerObj.pageCount > pagerObj.totalPages)\n            || (pagerObj.isPagerResized && Array.from(numItems).some(function (item) { return parseInt(item.getAttribute('index'), 10) === pagerObj.totalPages; }))) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.NP, ['e-nextprevitemdisabled', 'e-disable'], ['e-numericitem', 'e-pager-default']);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.NP, ['e-numericitem', 'e-pager-default'], ['e-nextprevitemdisabled', 'e-disable']);\n        }\n    };\n    NumericContainer.prototype.updateNextNLastStyles = function () {\n        var lastPage = ['e-lastpage', 'e-pager-default'];\n        var lastPageDisabled = ['e-lastpagedisabled', 'e-disable'];\n        var nextPage = ['e-nextpage', 'e-pager-default'];\n        var nextPageDisabled = ['e-nextpagedisabled', 'e-disable'];\n        var pagerObj = this.pagerModule;\n        if (pagerObj.currentPage === pagerObj.totalPages || pagerObj.totalRecordsCount === 0) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.last, lastPageDisabled, lastPage);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.next, nextPageDisabled, nextPage);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.pagerElement.querySelector('.e-mlast'), lastPageDisabled, lastPage);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.pagerElement.querySelector('.e-mnext'), nextPageDisabled, nextPage);\n        }\n        else {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.last, lastPage, lastPageDisabled);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.next, nextPage, nextPageDisabled);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.pagerElement.querySelector('.e-mlast'), lastPage, lastPageDisabled);\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(this.pagerElement.querySelector('.e-mnext'), nextPage, nextPageDisabled);\n        }\n    };\n    return NumericContainer;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/numeric-container.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/pager-message.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/pager-message.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PagerMessage: () => (/* binding */ PagerMessage)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n\n/**\n * `PagerMessage` module is used to display pager information.\n */\nvar PagerMessage = /** @class */ (function () {\n    /**\n     * Constructor for externalMessage module\n     *\n     * @param {Pager} pagerModule - specifies the pager Module\n     * @hidden\n     */\n    function PagerMessage(pagerModule) {\n        this.pagerModule = pagerModule;\n    }\n    /**\n     * The function is used to render pager message\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PagerMessage.prototype.render = function () {\n        var div = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', { className: 'e-parentmsgbar' });\n        this.pageNoMsgElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', { className: 'e-pagenomsg' });\n        this.pageNoMsgElem.style.textAlign = 'right';\n        this.pageCountMsgElem = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('span', { className: 'e-pagecountmsg' });\n        this.pageCountMsgElem.style.textAlign = 'right';\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.append)([this.pageNoMsgElem, this.pageCountMsgElem], div);\n        this.pagerModule.element.appendChild(div);\n        this.refresh();\n    };\n    /**\n     * Refreshes the pager information.\n     *\n     * @returns {void}\n     */\n    PagerMessage.prototype.refresh = function () {\n        var pagerObj = this.pagerModule;\n        this.pageNoMsgElem.textContent = this.format(pagerObj.getLocalizedLabel('currentPageInfo'), [pagerObj.totalRecordsCount === 0 ? 0 :\n                pagerObj.currentPage, pagerObj.totalPages || 0, pagerObj.totalRecordsCount || 0]) + ' ';\n        this.pageCountMsgElem.textContent = this.format(pagerObj.getLocalizedLabel(pagerObj.totalRecordsCount <= 1 ? 'totalItemInfo' : 'totalItemsInfo'), [pagerObj.totalRecordsCount || 0, pagerObj.totalRecordsCount ? (pagerObj.pageSize * (pagerObj.currentPage - 1)) + 1 : 0,\n            pagerObj.pageSize * pagerObj.currentPage > pagerObj.totalRecordsCount ? pagerObj.totalRecordsCount :\n                pagerObj.pageSize * pagerObj.currentPage]);\n        this.pageNoMsgElem.parentElement.classList.remove('e-hide');\n    };\n    /**\n     * Hides the Pager information.\n     *\n     * @returns {void}\n     */\n    PagerMessage.prototype.hideMessage = function () {\n        if (this.pageNoMsgElem) {\n            this.pageNoMsgElem.style.display = 'none';\n        }\n        if (this.pageCountMsgElem) {\n            this.pageCountMsgElem.style.display = 'none';\n        }\n    };\n    /**\n     * Shows the Pager information.\n     *\n     * @returns {void}\n     */\n    PagerMessage.prototype.showMessage = function () {\n        if (!this.pageNoMsgElem) {\n            this.render();\n        }\n        this.pageNoMsgElem.style.display = '';\n        this.pageCountMsgElem.style.display = '';\n    };\n    /**\n     * To destroy the PagerMessage\n     *\n     * @function destroy\n     * @returns {void}\n     * @hidden\n     */\n    PagerMessage.prototype.destroy = function () {\n        //destroy\n    };\n    /**\n     * To format the PagerMessage\n     *\n     * @function format\n     * @param {string} str - specifies the string\n     * @param {number[]} args - specifies the argument\n     * @returns {string} returns the format string\n     * @hidden\n     */\n    PagerMessage.prototype.format = function (str, args) {\n        var regx;\n        var regExp = RegExp;\n        for (var i = 0; i < args.length; i++) {\n            regx = new regExp('\\\\{' + (i) + '\\\\}', 'gm');\n            if (this.isValidLocale(this.pagerModule.locale)) {\n                str = str.replace(regx, args[parseInt(i.toString(), 10)].toLocaleString(this.pagerModule.locale));\n            }\n            else {\n                str = str.replace(regx, args[parseInt(i.toString(), 10)].toString());\n            }\n        }\n        return str;\n    };\n    PagerMessage.prototype.isValidLocale = function (locale) {\n        try {\n            new Intl.NumberFormat(locale);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    return PagerMessage;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvcGFnZXIvcGFnZXItbWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2RDtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtRUFBYSxVQUFVLDZCQUE2QjtBQUN0RSw2QkFBNkIsbUVBQWEsV0FBVywwQkFBMEI7QUFDL0U7QUFDQSxnQ0FBZ0MsbUVBQWEsV0FBVyw2QkFBNkI7QUFDckY7QUFDQSxRQUFRLDREQUFNO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsVUFBVTtBQUN6QixpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QyxrQ0FBa0MsY0FBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haV90cmF2ZWwvLi9ub2RlX21vZHVsZXMvLnBucG0vQHN5bmNmdXNpb24rZWoyLWdyaWRzQDI5LjEuNDAvbm9kZV9tb2R1bGVzL0BzeW5jZnVzaW9uL2VqMi1ncmlkcy9zcmMvcGFnZXIvcGFnZXItbWVzc2FnZS5qcz8zOTg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIGFwcGVuZCB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1iYXNlJztcbi8qKlxuICogYFBhZ2VyTWVzc2FnZWAgbW9kdWxlIGlzIHVzZWQgdG8gZGlzcGxheSBwYWdlciBpbmZvcm1hdGlvbi5cbiAqL1xudmFyIFBhZ2VyTWVzc2FnZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RvciBmb3IgZXh0ZXJuYWxNZXNzYWdlIG1vZHVsZVxuICAgICAqXG4gICAgICogQHBhcmFtIHtQYWdlcn0gcGFnZXJNb2R1bGUgLSBzcGVjaWZpZXMgdGhlIHBhZ2VyIE1vZHVsZVxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBQYWdlck1lc3NhZ2UocGFnZXJNb2R1bGUpIHtcbiAgICAgICAgdGhpcy5wYWdlck1vZHVsZSA9IHBhZ2VyTW9kdWxlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGUgZnVuY3Rpb24gaXMgdXNlZCB0byByZW5kZXIgcGFnZXIgbWVzc2FnZVxuICAgICAqXG4gICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIFBhZ2VyTWVzc2FnZS5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZGl2ID0gY3JlYXRlRWxlbWVudCgnZGl2JywgeyBjbGFzc05hbWU6ICdlLXBhcmVudG1zZ2JhcicgfSk7XG4gICAgICAgIHRoaXMucGFnZU5vTXNnRWxlbSA9IGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCB7IGNsYXNzTmFtZTogJ2UtcGFnZW5vbXNnJyB9KTtcbiAgICAgICAgdGhpcy5wYWdlTm9Nc2dFbGVtLnN0eWxlLnRleHRBbGlnbiA9ICdyaWdodCc7XG4gICAgICAgIHRoaXMucGFnZUNvdW50TXNnRWxlbSA9IGNyZWF0ZUVsZW1lbnQoJ3NwYW4nLCB7IGNsYXNzTmFtZTogJ2UtcGFnZWNvdW50bXNnJyB9KTtcbiAgICAgICAgdGhpcy5wYWdlQ291bnRNc2dFbGVtLnN0eWxlLnRleHRBbGlnbiA9ICdyaWdodCc7XG4gICAgICAgIGFwcGVuZChbdGhpcy5wYWdlTm9Nc2dFbGVtLCB0aGlzLnBhZ2VDb3VudE1zZ0VsZW1dLCBkaXYpO1xuICAgICAgICB0aGlzLnBhZ2VyTW9kdWxlLmVsZW1lbnQuYXBwZW5kQ2hpbGQoZGl2KTtcbiAgICAgICAgdGhpcy5yZWZyZXNoKCk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZWZyZXNoZXMgdGhlIHBhZ2VyIGluZm9ybWF0aW9uLlxuICAgICAqXG4gICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICovXG4gICAgUGFnZXJNZXNzYWdlLnByb3RvdHlwZS5yZWZyZXNoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcGFnZXJPYmogPSB0aGlzLnBhZ2VyTW9kdWxlO1xuICAgICAgICB0aGlzLnBhZ2VOb01zZ0VsZW0udGV4dENvbnRlbnQgPSB0aGlzLmZvcm1hdChwYWdlck9iai5nZXRMb2NhbGl6ZWRMYWJlbCgnY3VycmVudFBhZ2VJbmZvJyksIFtwYWdlck9iai50b3RhbFJlY29yZHNDb3VudCA9PT0gMCA/IDAgOlxuICAgICAgICAgICAgICAgIHBhZ2VyT2JqLmN1cnJlbnRQYWdlLCBwYWdlck9iai50b3RhbFBhZ2VzIHx8IDAsIHBhZ2VyT2JqLnRvdGFsUmVjb3Jkc0NvdW50IHx8IDBdKSArICcgJztcbiAgICAgICAgdGhpcy5wYWdlQ291bnRNc2dFbGVtLnRleHRDb250ZW50ID0gdGhpcy5mb3JtYXQocGFnZXJPYmouZ2V0TG9jYWxpemVkTGFiZWwocGFnZXJPYmoudG90YWxSZWNvcmRzQ291bnQgPD0gMSA/ICd0b3RhbEl0ZW1JbmZvJyA6ICd0b3RhbEl0ZW1zSW5mbycpLCBbcGFnZXJPYmoudG90YWxSZWNvcmRzQ291bnQgfHwgMCwgcGFnZXJPYmoudG90YWxSZWNvcmRzQ291bnQgPyAocGFnZXJPYmoucGFnZVNpemUgKiAocGFnZXJPYmouY3VycmVudFBhZ2UgLSAxKSkgKyAxIDogMCxcbiAgICAgICAgICAgIHBhZ2VyT2JqLnBhZ2VTaXplICogcGFnZXJPYmouY3VycmVudFBhZ2UgPiBwYWdlck9iai50b3RhbFJlY29yZHNDb3VudCA/IHBhZ2VyT2JqLnRvdGFsUmVjb3Jkc0NvdW50IDpcbiAgICAgICAgICAgICAgICBwYWdlck9iai5wYWdlU2l6ZSAqIHBhZ2VyT2JqLmN1cnJlbnRQYWdlXSk7XG4gICAgICAgIHRoaXMucGFnZU5vTXNnRWxlbS5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2UtaGlkZScpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogSGlkZXMgdGhlIFBhZ2VyIGluZm9ybWF0aW9uLlxuICAgICAqXG4gICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICovXG4gICAgUGFnZXJNZXNzYWdlLnByb3RvdHlwZS5oaWRlTWVzc2FnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMucGFnZU5vTXNnRWxlbSkge1xuICAgICAgICAgICAgdGhpcy5wYWdlTm9Nc2dFbGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucGFnZUNvdW50TXNnRWxlbSkge1xuICAgICAgICAgICAgdGhpcy5wYWdlQ291bnRNc2dFbGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFNob3dzIHRoZSBQYWdlciBpbmZvcm1hdGlvbi5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHt2b2lkfVxuICAgICAqL1xuICAgIFBhZ2VyTWVzc2FnZS5wcm90b3R5cGUuc2hvd01lc3NhZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5wYWdlTm9Nc2dFbGVtKSB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlcigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucGFnZU5vTXNnRWxlbS5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICAgIHRoaXMucGFnZUNvdW50TXNnRWxlbS5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUbyBkZXN0cm95IHRoZSBQYWdlck1lc3NhZ2VcbiAgICAgKlxuICAgICAqIEBmdW5jdGlvbiBkZXN0cm95XG4gICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIFBhZ2VyTWVzc2FnZS5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy9kZXN0cm95XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBUbyBmb3JtYXQgdGhlIFBhZ2VyTWVzc2FnZVxuICAgICAqXG4gICAgICogQGZ1bmN0aW9uIGZvcm1hdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgLSBzcGVjaWZpZXMgdGhlIHN0cmluZ1xuICAgICAqIEBwYXJhbSB7bnVtYmVyW119IGFyZ3MgLSBzcGVjaWZpZXMgdGhlIGFyZ3VtZW50XG4gICAgICogQHJldHVybnMge3N0cmluZ30gcmV0dXJucyB0aGUgZm9ybWF0IHN0cmluZ1xuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBQYWdlck1lc3NhZ2UucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uIChzdHIsIGFyZ3MpIHtcbiAgICAgICAgdmFyIHJlZ3g7XG4gICAgICAgIHZhciByZWdFeHAgPSBSZWdFeHA7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgcmVneCA9IG5ldyByZWdFeHAoJ1xcXFx7JyArIChpKSArICdcXFxcfScsICdnbScpO1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNWYWxpZExvY2FsZSh0aGlzLnBhZ2VyTW9kdWxlLmxvY2FsZSkpIHtcbiAgICAgICAgICAgICAgICBzdHIgPSBzdHIucmVwbGFjZShyZWd4LCBhcmdzW3BhcnNlSW50KGkudG9TdHJpbmcoKSwgMTApXS50b0xvY2FsZVN0cmluZyh0aGlzLnBhZ2VyTW9kdWxlLmxvY2FsZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc3RyID0gc3RyLnJlcGxhY2UocmVneCwgYXJnc1twYXJzZUludChpLnRvU3RyaW5nKCksIDEwKV0udG9TdHJpbmcoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0cjtcbiAgICB9O1xuICAgIFBhZ2VyTWVzc2FnZS5wcm90b3R5cGUuaXNWYWxpZExvY2FsZSA9IGZ1bmN0aW9uIChsb2NhbGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG5ldyBJbnRsLk51bWJlckZvcm1hdChsb2NhbGUpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFBhZ2VyTWVzc2FnZTtcbn0oKSk7XG5leHBvcnQgeyBQYWdlck1lc3NhZ2UgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/pager-message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/pager.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/pager.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pager: () => (/* binding */ Pager)\n/* harmony export */ });\n/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-base@29.1.36/node_modules/@syncfusion/ej2-base/index.js\");\n/* harmony import */ var _numeric_container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./numeric-container */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/numeric-container.js\");\n/* harmony import */ var _pager_message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pager-message */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/pager-message.js\");\n/* harmony import */ var _grid_base_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../grid/base/util */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js\");\n/* harmony import */ var _grid_base_constant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../grid/base/constant */ \"(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/grid/base/constant.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\n/**\n * Represents the `Pager` component.\n * ```html\n * <div id=\"pager\"/>\n * ```\n * ```typescript\n * <script>\n *   var pagerObj = new Pager({ totalRecordsCount: 50, pageSize:10 });\n *   pagerObj.appendTo(\"#pager\");\n * </script>\n * ```\n */\nvar Pager = /** @class */ (function (_super) {\n    __extends(Pager, _super);\n    /**\n     * Constructor for creating the component.\n     *\n     * @param {PagerModel} options - specifies the options\n     * @param {string} element - specifies the element\n     * @param {string} parent - specifies the pager parent\n     * @hidden\n     */\n    function Pager(options, element, parent) {\n        var _this = _super.call(this, options, element) || this;\n        /** @hidden */\n        _this.hasParent = false;\n        _this.checkAll = true;\n        _this.pageRefresh = 'pager-refresh';\n        _this.firstPagerFocus = false;\n        /** @hidden */\n        _this.isCancel = false;\n        /** @hidden */\n        _this.isInteracted = false;\n        _this.parent = parent;\n        return _this;\n    }\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} returns the modules declaration\n     * @hidden\n     */\n    Pager.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.enableExternalMessage) {\n            modules.push({\n                member: 'externalMessage',\n                args: [this],\n                name: 'ExternalMessage'\n            });\n        }\n        if (this.checkpagesizes()) {\n            modules.push({\n                member: 'pagerdropdown',\n                args: [this],\n                name: 'PagerDropDown'\n            });\n        }\n        return modules;\n    };\n    /**\n     * Initialize the event handler\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Pager.prototype.preRender = function () {\n        //preRender\n        this.defaultConstants = {\n            currentPageInfo: '{0} of {1} pages',\n            totalItemsInfo: '({0} items)',\n            totalItemInfo: '({0} item)',\n            firstPageTooltip: 'Go to first page',\n            lastPageTooltip: 'Go to last page',\n            nextPageTooltip: 'Go to next page',\n            previousPageTooltip: 'Go to previous page',\n            nextPagerTooltip: 'Go to next pager items',\n            previousPagerTooltip: 'Go to previous pager items',\n            pagerDropDown: 'Items per page',\n            pagerAllDropDown: 'Items',\n            CurrentPageInfo: '{0} of {1} pages',\n            TotalItemsInfo: '({0} items)',\n            FirstPageTooltip: 'Go to first page',\n            LastPageTooltip: 'Go to last page',\n            NextPageTooltip: 'Go to next page',\n            PreviousPageTooltip: 'Go to previous page',\n            NextPagerTooltip: 'Go to next pager items',\n            PreviousPagerTooltip: 'Go to previous pager items',\n            PagerDropDown: 'Items per page',\n            PagerAllDropDown: 'Items',\n            All: 'All',\n            Container: 'Pager Container',\n            Information: 'Pager Information',\n            ExternalMsg: 'Pager external message',\n            Page: 'Page ',\n            Of: ' of ',\n            Pages: ' Pages'\n        };\n        this.containerModule = new _numeric_container__WEBPACK_IMPORTED_MODULE_1__.NumericContainer(this);\n        this.pagerMessageModule = new _pager_message__WEBPACK_IMPORTED_MODULE_2__.PagerMessage(this);\n    };\n    /**\n     * To Initialize the component rendering\n     *\n     * @returns {void}\n     */\n    Pager.prototype.render = function () {\n        this.element.setAttribute('data-role', 'pager');\n        this.element.setAttribute('tabindex', '-1');\n        this.initLocalization();\n        if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n            this.element.classList.add('e-mac-safari');\n        }\n        if (this.cssClass) {\n            if (this.cssClass.indexOf(' ') !== -1) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], this.cssClass.split(' '));\n            }\n            else {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([this.element], [this.cssClass]);\n            }\n        }\n        if (!this.hasParent) {\n            this.element.setAttribute('tabindex', '0');\n        }\n        if (this.enableQueryString) {\n            var pageValue = new URL(window.location.href).searchParams.get('page');\n            if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pageValue) && window.location.href.indexOf('?page=') > 0) {\n                var currentPageValue = parseInt(pageValue, 10);\n                if (this.hasParent) {\n                    this.parent\n                        .setProperties({ pageSettings: { currentPage: currentPageValue } }, true);\n                }\n                this.currentPage = currentPageValue;\n            }\n        }\n        if (this.template) {\n            if (this.isReactTemplate()) {\n                this.on(this.pageRefresh, this.pagerTemplate, this);\n                this.notify(this.pageRefresh, {});\n            }\n            else {\n                this.pagerTemplate();\n            }\n        }\n        else {\n            this.updateRTL();\n            this.totalRecordsCount = this.totalRecordsCount || 0;\n            this.renderFirstPrevDivForDevice();\n            this.containerModule.render();\n            if (this.enablePagerMessage) {\n                this.pagerMessageModule.render();\n            }\n            this.renderNextLastDivForDevice();\n            if (this.checkpagesizes() && this.pagerdropdownModule) {\n                this.pagerdropdownModule.render();\n            }\n            this.addAriaLabel();\n            if (this.enableExternalMessage && this.externalMessageModule) {\n                this.externalMessageModule.render();\n            }\n            this.refresh();\n            this.trigger('created', { 'currentPage': this.currentPage, 'totalRecordsCount': this.totalRecordsCount });\n        }\n        this.wireEvents();\n        this.addListener();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} returns the persist data\n     * @hidden\n     */\n    Pager.prototype.getPersistData = function () {\n        var keyEntity = ['currentPage', 'pageSize'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * To destroy the Pager component.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Pager.prototype.destroy = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        if (this.isReactTemplate()) {\n            this.off(this.pageRefresh, this.pagerTemplate);\n            if (!this.hasParent) {\n                this.destroyTemplate(['pagerTemplate']);\n            }\n        }\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.containerModule.destroy();\n        this.pagerMessageModule.destroy();\n        if (!this.isReactTemplate()) {\n            this.element.innerHTML = '';\n        }\n    };\n    /**\n     * Destroys the given template reference.\n     *\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     * @param {any} index - Defines the index\n     */\n    // eslint-disable-next-line\n    Pager.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Pager.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {PagerModel} newProp - specifies the new property\n     * @param {PagerModel} oldProp - specifies the old propety\n     * @returns {void}\n     * @hidden\n     */\n    Pager.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (this.isDestroyed) {\n            return;\n        }\n        if ((newProp.pageSize === this.getLocalizedLabel('All')) && oldProp.pageSize === this.totalRecordsCount) {\n            this.pageSize = this.totalRecordsCount;\n            return;\n        }\n        if (newProp.pageCount !== oldProp.pageCount) {\n            this.containerModule.refreshNumericLinks();\n            this.containerModule.refresh();\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'currentPage':\n                    if (this.checkGoToPage(newProp.currentPage, oldProp.currentPage)) {\n                        this.currentPageChanged(newProp, oldProp);\n                    }\n                    break;\n                case 'pageSize':\n                case 'totalRecordsCount':\n                case 'customText':\n                    if (this.checkpagesizes() && this.pagerdropdownModule) {\n                        if (oldProp.pageSize !== newProp.pageSize) {\n                            this.currentPage = 1;\n                        }\n                        this.pagerdropdownModule.setDropDownValue('value', this.pageSize);\n                    }\n                    if (newProp.pageSize !== oldProp.pageSize) {\n                        this.pageSize = newProp.pageSize;\n                        this.currentPageChanged(newProp, oldProp);\n                        if (this.isCancel && this.hasParent) {\n                            this.parent\n                                .setProperties({ pageSettings: { pageSize: oldProp.pageSize } }, true);\n                        }\n                    }\n                    else {\n                        this.refresh();\n                    }\n                    break;\n                case 'pageSizes':\n                    if (this.checkpagesizes() && this.pagerdropdownModule) {\n                        this.pagerdropdownModule.destroy();\n                        this.pagerdropdownModule.render();\n                    }\n                    this.refresh();\n                    break;\n                case 'template':\n                    this.templateFn = this.compile(this.template);\n                    this.refresh();\n                    break;\n                case 'locale':\n                    this.initLocalization();\n                    this.refresh();\n                    break;\n                case 'enableExternalMessage':\n                    if (this.enableExternalMessage && this.externalMessageModule) {\n                        this.externalMessageModule.render();\n                    }\n                    break;\n                case 'externalMessage':\n                    if (this.externalMessageModule) {\n                        this.externalMessageModule.refresh();\n                    }\n                    break;\n                case 'enableRtl':\n                    this.updateRTL();\n                    break;\n                case 'enablePagerMessage':\n                    if (this.enablePagerMessage) {\n                        this.pagerMessageModule.showMessage();\n                    }\n                    else {\n                        this.pagerMessageModule.hideMessage();\n                    }\n                    break;\n            }\n        }\n        this.resizePager();\n    };\n    Pager.prototype.wireEvents = function () {\n        if (!this.hasParent) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focusin', this.onFocusIn, this);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(this.element, 'focusout', this.onFocusOut, this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(window, 'resize', this.resizePager, this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.add(window, 'load', this.resizePager, this);\n    };\n    Pager.prototype.unwireEvents = function () {\n        if (!this.hasParent) {\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n            _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        }\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focusin', this.onFocusIn);\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(this.element, 'focusout', this.onFocusOut);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(window, 'resize', this.resizePager);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.EventHandler.remove(window, 'load', this.resizePager);\n    };\n    Pager.prototype.onFocusIn = function (e) {\n        var focusedTabIndexElement = this.getFocusedTabindexElement();\n        if ((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(focusedTabIndexElement)) {\n            var target = e.target;\n            var dropDownPage = this.getDropDownPage();\n            if (!this.hasParent) {\n                this.element.tabIndex = -1;\n            }\n            if (target === this.element && !this.hasParent) {\n                var focusablePagerElements = this.getFocusablePagerElements(this.element, []);\n                this.addFocus(focusablePagerElements[0], true);\n                return;\n            }\n            if (target === this.element) {\n                this.element.tabIndex = 0;\n                return;\n            }\n            if (target !== dropDownPage && !target.classList.contains('e-disable')) {\n                this.addFocus(target, true);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Pager.prototype.onFocusOut = function (e) {\n        var focusedElement = this.getFocusedElement();\n        var dropDownPage = this.getDropDownPage();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(focusedElement)) {\n            this.removeFocus(focusedElement, true);\n        }\n        if (this.pageSizes && dropDownPage && dropDownPage.classList.contains('e-input-focus')) {\n            this.removeFocus(dropDownPage, true);\n        }\n        this.setTabIndexForFocusLastElement();\n        if (!this.hasParent) {\n            this.element.tabIndex = 0;\n        }\n        if (this.hasParent) {\n            this.element.tabIndex = -1;\n        }\n    };\n    Pager.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) {\n                var focusablePagerElements = this.getFocusablePagerElements(this.element, []);\n                if (focusablePagerElements.length > 0) {\n                    focusablePagerElements[0].focus();\n                }\n            }\n        }\n    };\n    Pager.prototype.keyPressHandler = function (e) {\n        var presskey = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.extend)(e, { cancel: false });\n        this.notify(_grid_base_constant__WEBPACK_IMPORTED_MODULE_3__.keyPressed, presskey);\n        if (presskey.cancel === true) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Pager.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        if (!this.hasParent) {\n            this.on(_grid_base_constant__WEBPACK_IMPORTED_MODULE_3__.keyPressed, this.onKeyPress, this);\n        }\n    };\n    Pager.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        if (!this.hasParent) {\n            this.off(_grid_base_constant__WEBPACK_IMPORTED_MODULE_3__.keyPressed, this.onKeyPress);\n        }\n    };\n    Pager.prototype.onKeyPress = function (e) {\n        if (!this.hasParent) {\n            if (this.checkPagerHasFocus()) {\n                this.changePagerFocus(e);\n            }\n            else {\n                e.preventDefault();\n                this.setPagerFocus();\n            }\n        }\n    };\n    /**\n     * @returns {boolean} - Return the true value if pager has focus\n     * @hidden */\n    Pager.prototype.checkPagerHasFocus = function () {\n        return this.getFocusedTabindexElement() ? true : false;\n    };\n    /**\n     * @returns {void}\n     * @hidden */\n    Pager.prototype.setPagerContainerFocus = function () {\n        this.element.focus();\n    };\n    /**\n     * @returns {void}\n     * @hidden */\n    Pager.prototype.setPagerFocus = function () {\n        var focusablePagerElements = this.getFocusablePagerElements(this.element, []);\n        if (focusablePagerElements.length > 0) {\n            focusablePagerElements[0].focus();\n        }\n    };\n    Pager.prototype.setPagerFocusForActiveElement = function () {\n        var currentActivePage = this.getActiveElement();\n        if (currentActivePage) {\n            currentActivePage.focus();\n        }\n    };\n    Pager.prototype.setTabIndexForFocusLastElement = function () {\n        var focusablePagerElements = this.getFocusablePagerElements(this.element, []);\n        var dropDownPage = this.getDropDownPage();\n        if (this.pageSizes && dropDownPage && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(dropDownPage.offsetParent)) {\n            dropDownPage.tabIndex = 0;\n        }\n        else if (focusablePagerElements.length > 0) {\n            focusablePagerElements[focusablePagerElements.length - 1].tabIndex = 0;\n        }\n    };\n    /**\n     * @param {KeyboardEventArgs} e - Keyboard Event Args\n     * @returns {void}\n     * @hidden */\n    Pager.prototype.changePagerFocus = function (e) {\n        this.keyAction = e.key;\n        if (e.shiftKey && e.keyCode === 9) {\n            this.changeFocusByShiftTab(e);\n        }\n        else if (e.keyCode === 9) {\n            this.changeFocusByTab(e);\n        }\n        else if (e.keyCode === 13 || e.keyCode === 32) {\n            this.navigateToPageByEnterOrSpace(e);\n        }\n        else if (e.keyCode === 37 || e.keyCode === 39 || e.keyCode === 35 || e.keyCode === 36) {\n            this.navigateToPageByKey(e);\n        }\n        this.keyAction = '';\n    };\n    Pager.prototype.getFocusedTabindexElement = function () {\n        var focusedTabIndexElement;\n        var tabindexElements = this.element.querySelectorAll('[tabindex]:not([tabindex=\"-1\"])');\n        for (var i = 0; i < tabindexElements.length; i++) {\n            var element = tabindexElements[parseInt(i.toString(), 10)];\n            if (element && (element.classList.contains('e-focused') || element.classList.contains('e-input-focus'))) {\n                focusedTabIndexElement = element;\n                break;\n            }\n        }\n        return focusedTabIndexElement;\n    };\n    Pager.prototype.changeFocusByTab = function (e) {\n        var currentItemPagerFocus = this.getFocusedTabindexElement();\n        var focusablePagerElements = this.getFocusablePagerElements(this.element, []);\n        var dropDownPage = this.getDropDownPage();\n        if (focusablePagerElements.length > 0) {\n            if (this.pageSizes && dropDownPage && currentItemPagerFocus === focusablePagerElements[focusablePagerElements.length - 1]) {\n                dropDownPage.tabIndex = 0;\n            }\n            else {\n                for (var i = 0; i < focusablePagerElements.length; i++) {\n                    if (currentItemPagerFocus === focusablePagerElements[parseInt(i.toString(), 10)]) {\n                        var incrementNumber = i + 1;\n                        if (incrementNumber < focusablePagerElements.length) {\n                            e.preventDefault();\n                            focusablePagerElements[parseInt(incrementNumber.toString(), 10)].focus();\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    Pager.prototype.changeFocusByShiftTab = function (e) {\n        var currentItemPagerFocus = this.getFocusedTabindexElement();\n        var focusablePagerElements = this.getFocusablePagerElements(this.element, []);\n        var dropDownPage = this.getDropDownPage();\n        if (this.pageSizes && dropDownPage && dropDownPage.classList.contains('e-input-focus')) {\n            dropDownPage.tabIndex = -1;\n            this.addFocus(focusablePagerElements[focusablePagerElements.length - 1], true);\n        }\n        else if (focusablePagerElements.length > 0) {\n            for (var i = 0; i < focusablePagerElements.length; i++) {\n                if (currentItemPagerFocus === focusablePagerElements[parseInt(i.toString(), 10)]) {\n                    var decrementNumber = i - 1;\n                    if (decrementNumber >= 0) {\n                        e.preventDefault();\n                        focusablePagerElements[parseInt(decrementNumber.toString(), 10)].focus();\n                    }\n                    else if (this.hasParent) {\n                        var rows = this.parent.getRows();\n                        var lastRow = rows[rows.length - 1];\n                        var lastCell = lastRow.lastChild;\n                        e.preventDefault();\n                        lastCell.focus();\n                        this.firstPagerFocus = true;\n                    }\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden */\n    Pager.prototype.checkFirstPagerFocus = function () {\n        if (this.firstPagerFocus) {\n            this.firstPagerFocus = false;\n            return true;\n        }\n        return false;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Pager.prototype.navigateToPageByEnterOrSpace = function (e) {\n        var currentItemPagerFocus = this.getFocusedElement();\n        if (currentItemPagerFocus) {\n            this.goToPage(parseInt(currentItemPagerFocus.getAttribute('index'), 10));\n            var currentActivePage = this.getActiveElement();\n            var selectedClass = this.getClass(currentItemPagerFocus);\n            var classElement = this.getElementByClass(selectedClass);\n            if ((selectedClass === 'e-first' || selectedClass === 'e-prev' || selectedClass === 'e-next'\n                || selectedClass === 'e-last' || selectedClass === 'e-pp' || selectedClass === 'e-np')\n                && classElement && !classElement.classList.contains('e-disable')) {\n                classElement.focus();\n            }\n            else if (this.checkFocusInAdaptiveMode(currentItemPagerFocus)) {\n                this.changeFocusInAdaptiveMode(currentItemPagerFocus);\n            }\n            else {\n                if (currentActivePage) {\n                    currentActivePage.focus();\n                }\n            }\n        }\n    };\n    Pager.prototype.navigateToPageByKey = function (e) {\n        var actionClass = e.keyCode === 37 ? '.e-prev' : e.keyCode === 39 ? '.e-next'\n            : e.keyCode === 35 ? '.e-last' : e.keyCode === 36 ? '.e-first' : '';\n        var pagingItem = this.element.querySelector(actionClass);\n        var currentItemPagerFocus = this.getFocusedElement();\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(pagingItem) && pagingItem.hasAttribute('index')\n            && !isNaN(parseInt(pagingItem.getAttribute('index'), 10))) {\n            this.goToPage(parseInt(pagingItem.getAttribute('index'), 10));\n            var currentActivePage = this.getActiveElement();\n            if (this.checkFocusInAdaptiveMode(currentItemPagerFocus)) {\n                this.changeFocusInAdaptiveMode(currentItemPagerFocus);\n            }\n            else {\n                if (currentActivePage) {\n                    currentActivePage.focus();\n                }\n            }\n        }\n    };\n    Pager.prototype.checkFocusInAdaptiveMode = function (element) {\n        var selectedClass = this.getClass(element);\n        return selectedClass === 'e-mfirst' || selectedClass === 'e-mprev' || selectedClass === 'e-mnext'\n            || selectedClass === 'e-mlast' ? true : false;\n    };\n    Pager.prototype.changeFocusInAdaptiveMode = function (element) {\n        var selectedClass = this.getClass(element);\n        var classElement = this.getElementByClass(selectedClass);\n        if (classElement && classElement.classList.contains('e-disable')) {\n            if (selectedClass === 'e-mnext' || selectedClass === 'e-mlast') {\n                var mPrev = this.element.querySelector('.e-mprev');\n                mPrev.focus();\n            }\n            else {\n                this.setPagerFocus();\n            }\n        }\n    };\n    Pager.prototype.removeTabindexLastElements = function () {\n        var tabIndexElements = this.element.querySelectorAll('[tabindex]:not([tabindex=\"-1\"])');\n        if (tabIndexElements.length > 1) {\n            for (var i = 1; i < tabIndexElements.length; i++) {\n                var element = tabIndexElements[parseInt(i.toString(), 10)];\n                if (element) {\n                    element.tabIndex = -1;\n                }\n            }\n        }\n    };\n    Pager.prototype.getActiveElement = function () {\n        return this.element.querySelector('.e-active');\n    };\n    /**\n     * @returns {Element} - Returns DropDown Page\n     * @hidden */\n    Pager.prototype.getDropDownPage = function () {\n        var dropDownPageHolder = this.element.querySelector('.e-pagerdropdown');\n        var dropDownPage;\n        if (dropDownPageHolder) {\n            dropDownPage = dropDownPageHolder.children[0];\n        }\n        return dropDownPage;\n    };\n    Pager.prototype.getFocusedElement = function () {\n        return this.element.querySelector('.e-focused');\n    };\n    Pager.prototype.getClass = function (element) {\n        var currentClass;\n        var classList = ['e-mfirst', 'e-mprev', 'e-first', 'e-prev', 'e-pp',\n            'e-np', 'e-next', 'e-last', 'e-mnext', 'e-mlast'];\n        for (var i = 0; i < classList.length; i++) {\n            if (element && element.classList.contains(classList[parseInt(i.toString(), 10)])) {\n                currentClass = classList[parseInt(i.toString(), 10)];\n                return currentClass;\n            }\n        }\n        return currentClass;\n    };\n    Pager.prototype.getElementByClass = function (className) {\n        return this.element.querySelector('.' + className);\n    };\n    /**\n     * @param {Element} element - Pager element\n     * @param {Element[]} previousElements - Iterating pager element\n     * @returns {Element[]} - Returns focusable pager element\n     * @hidden */\n    Pager.prototype.getFocusablePagerElements = function (element, previousElements) {\n        var target = element;\n        var targetChildrens = target.children;\n        var pagerElements = previousElements;\n        for (var i = 0; i < targetChildrens.length; i++) {\n            var element_1 = targetChildrens[parseInt(i.toString(), 10)];\n            if (element_1.children.length > 0 && !element_1.classList.contains('e-pagesizes')) {\n                pagerElements = this.getFocusablePagerElements(element_1, pagerElements);\n            }\n            else {\n                var tabindexElement = targetChildrens[parseInt(i.toString(), 10)];\n                if (tabindexElement.hasAttribute('tabindex') && !element_1.classList.contains('e-disable')\n                    && element_1.style.display !== 'none'\n                    && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element_1.offsetParent)) {\n                    pagerElements.push(tabindexElement);\n                }\n            }\n        }\n        return pagerElements;\n    };\n    Pager.prototype.addFocus = function (element, addFocusClass) {\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(element)) {\n            if (addFocusClass) {\n                (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.addClass)([element], ['e-focused', 'e-focus']);\n            }\n            element.tabIndex = 0;\n        }\n    };\n    Pager.prototype.removeFocus = function (element, removeFocusClass) {\n        if (removeFocusClass) {\n            (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.removeClass)([element], ['e-focused', 'e-focus']);\n        }\n        element.tabIndex = -1;\n    };\n    /**\n     * Gets the localized label by locale keyword.\n     *\n     * @param  {string} key - specifies the key\n     * @returns {string} returns the localized label\n     */\n    Pager.prototype.getLocalizedLabel = function (key) {\n        return this.localeObj.getConstant(key);\n    };\n    /**\n     * Navigate to target page by given number.\n     *\n     * @param  {number} pageNo - Defines page number.\n     * @returns {void}\n     */\n    Pager.prototype.goToPage = function (pageNo) {\n        if (this.checkGoToPage(pageNo)) {\n            this.currentPage = pageNo;\n            this.isInteracted = false;\n            this.dataBind();\n        }\n    };\n    /**\n     * @param {number} pageSize - specifies the pagesize\n     * @returns {void}\n     * @hidden\n     */\n    Pager.prototype.setPageSize = function (pageSize) {\n        this.pageSize = pageSize;\n        this.dataBind();\n    };\n    Pager.prototype.checkpagesizes = function () {\n        if (this.pageSizes === true || this.pageSizes.length) {\n            return true;\n        }\n        return false;\n    };\n    Pager.prototype.checkGoToPage = function (newPageNo, oldPageNo) {\n        if (newPageNo !== this.currentPage) {\n            this.previousPageNo = this.currentPage;\n        }\n        if (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(oldPageNo)) {\n            this.previousPageNo = oldPageNo;\n        }\n        if (this.previousPageNo !== newPageNo && (newPageNo >= 1 && newPageNo <= this.totalPages)) {\n            return true;\n        }\n        return false;\n    };\n    Pager.prototype.currentPageChanged = function (newProp, oldProp) {\n        if (this.enableQueryString) {\n            this.updateQueryString(this.currentPage);\n        }\n        if (newProp.currentPage !== oldProp.currentPage || newProp.pageSize !== oldProp.pageSize) {\n            var args = {\n                currentPage: this.currentPage,\n                newProp: newProp, oldProp: oldProp, cancel: false, isInteracted: this.isInteracted\n            };\n            this.trigger('click', args);\n            if (!args.cancel) {\n                this.isCancel = false;\n                this.refresh();\n            }\n            else {\n                this.isCancel = true;\n                if (oldProp && oldProp.pageSize) {\n                    this.setProperties({ pageSize: oldProp.pageSize }, true);\n                    if (this.pagerdropdownModule) {\n                        this.pagerdropdownModule.setDropDownValue('value', oldProp.pageSize);\n                        this.pagerdropdownModule['dropDownListObject'].text = oldProp.pageSize + '';\n                    }\n                }\n            }\n        }\n    };\n    Pager.prototype.pagerTemplate = function () {\n        if (this.isReactTemplate() && this.hasParent) {\n            return;\n        }\n        var result;\n        this.element.classList.add('e-pagertemplate');\n        this.compile(this.template);\n        var data = {\n            currentPage: this.currentPage, pageSize: this.pageSize, pageCount: this.pageCount,\n            totalRecordsCount: this.totalRecordsCount, totalPages: this.totalPages\n        };\n        var tempId = this.element.parentElement.id + '_template';\n        if (this.isReactTemplate() && !this.isVue) {\n            this.getPagerTemplate()(data, this, 'pagerTemplate', tempId, null, null, this.element);\n            this.renderReactTemplates();\n        }\n        else {\n            result = this.isVue ? this.getPagerTemplate()(data, this, 'pagerTemplate', null, null, null, null, this.root)\n                : this.getPagerTemplate()(data);\n            (0,_grid_base_util__WEBPACK_IMPORTED_MODULE_4__.appendChildren)(this.element, result);\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Pager.prototype.updateTotalPages = function () {\n        this.totalPages = this.isAllPage ? 1 : (this.totalRecordsCount % this.pageSize === 0) ? (this.totalRecordsCount / this.pageSize) :\n            (parseInt((this.totalRecordsCount / this.pageSize).toString(), 10) + 1);\n    };\n    /**\n     * @returns {Function} returns the function\n     * @hidden\n     */\n    Pager.prototype.getPagerTemplate = function () {\n        return this.templateFn;\n    };\n    /**\n     * @param {string | Function} template - specifies the template\n     * @returns {Function} returns the function\n     * @hidden\n     */\n    Pager.prototype.compile = function (template) {\n        if (template) {\n            try {\n                if (typeof template === 'function') {\n                    this.templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n                }\n                else {\n                    if (document.querySelectorAll(template).length) {\n                        this.templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(document.querySelector(template).innerHTML.trim());\n                    }\n                    else {\n                        this.templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n                    }\n                }\n            }\n            catch (e) {\n                this.templateFn = (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.compile)(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Refreshes page count, pager information and external message.\n     *\n     * @returns {void}\n     */\n    Pager.prototype.refresh = function () {\n        if (this.template) {\n            if (this.isReactTemplate()) {\n                this.updateTotalPages();\n                this.notify(this.pageRefresh, {});\n            }\n            else {\n                if (this.parent && this.parent.isAngular) {\n                    this.parent.destroyTemplate(['pagerTemplate']);\n                }\n                else {\n                    this.element.innerHTML = '';\n                }\n                this.updateTotalPages();\n                this.pagerTemplate();\n            }\n        }\n        else {\n            this.updateRTL();\n            var focusedTabIndexElement = this.getFocusedTabindexElement();\n            this.containerModule.refresh();\n            this.removeTabindexLastElements();\n            if (focusedTabIndexElement && focusedTabIndexElement.classList.contains('e-disable')) {\n                if (this.checkFocusInAdaptiveMode(focusedTabIndexElement)) {\n                    this.changeFocusInAdaptiveMode(focusedTabIndexElement);\n                }\n                else {\n                    this.setPagerFocusForActiveElement();\n                }\n            }\n            if (this.enablePagerMessage) {\n                this.pagerMessageModule.refresh();\n            }\n            if (this.pagerdropdownModule) {\n                this.pagerdropdownModule.refresh();\n            }\n            if (this.enableExternalMessage && this.externalMessageModule) {\n                this.externalMessageModule.refresh();\n            }\n            this.setTabIndexForFocusLastElement();\n            this.resizePager();\n        }\n    };\n    Pager.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Pager.prototype.initLocalization = function () {\n        this.localeObj = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.L10n(this.getModuleName(), this.defaultConstants, this.locale);\n    };\n    Pager.prototype.updateQueryString = function (value) {\n        var updatedUrl = this.getUpdatedURL(window.location.href, 'page', value.toString());\n        window.history.pushState({ path: updatedUrl }, '', updatedUrl);\n    };\n    Pager.prototype.getUpdatedURL = function (uri, key, value) {\n        var regExp = RegExp;\n        var regx = new regExp('([?|&])' + key + '=.*?(&|#|$)', 'i');\n        if (uri.match(regx)) {\n            return uri.replace(regx, '$1' + key + '=' + value + '$2');\n        }\n        else {\n            var hash = '';\n            if (uri.indexOf('#') !== -1) {\n                hash = uri.replace(/.*#/, '#');\n                uri = uri.replace(/#.*/, '');\n            }\n            return uri + (uri.indexOf('?') !== -1 ? '&' : '?') + key + '=' + value + hash;\n        }\n    };\n    Pager.prototype.renderFirstPrevDivForDevice = function () {\n        this.element.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-mfirst e-icons e-icon-first',\n            attrs: { title: this.getLocalizedLabel('firstPageTooltip'), tabindex: '-1' }\n        }));\n        this.element.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-mprev e-icons e-icon-prev',\n            attrs: { title: this.getLocalizedLabel('previousPageTooltip'), tabindex: '-1' }\n        }));\n    };\n    Pager.prototype.renderNextLastDivForDevice = function () {\n        this.element.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-mnext e-icons e-icon-next',\n            attrs: { title: this.getLocalizedLabel('nextPageTooltip'), tabindex: '-1' }\n        }));\n        this.element.appendChild((0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n            className: 'e-mlast e-icons e-icon-last',\n            attrs: { title: this.getLocalizedLabel('lastPageTooltip'), tabindex: '-1' }\n        }));\n    };\n    Pager.prototype.addAriaLabel = function () {\n        var classList = ['.e-mfirst', '.e-mprev', '.e-mnext', '.e-mlast'];\n        if (!_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Browser.isDevice) {\n            for (var i = 0; i < classList.length; i++) {\n                var element = this.element.querySelector(classList[parseInt(i.toString(), 10)]);\n                element.setAttribute('aria-label', element.getAttribute('title'));\n            }\n        }\n    };\n    Pager.prototype.isReactTemplate = function () {\n        return (this.isReact || this.isVue) && this.template && typeof (this.template) !== 'string' && !(this.template.prototype && this.template.prototype.CSPTemplate);\n    };\n    /**\n     * Loop through all the inner elements of pager to calculate the required width for pager child elements.\n     *\n     * @returns {number} returns the actual width occupied by pager elements.\n     */\n    Pager.prototype.calculateActualWidth = function () {\n        var pagerElements = this.element.querySelectorAll(\n        /* tslint:disable-next-line:max-line-length */\n        '.e-mfirst, .e-mprev, .e-icon-first, .e-icon-prev, .e-pp:not(.e-disable), .e-numericitem:not(.e-hide), .e-numericitem.e-active.e-hide, .e-np:not(.e-disable), .e-icon-next, .e-icon-last, .e-parentmsgbar, .e-mnext, .e-mlast, .e-pagerdropdown, .e-pagerconstant');\n        var actualWidth = 0;\n        for (var i = 0; i < pagerElements.length; i++) {\n            if (getComputedStyle(pagerElements[parseInt(i.toString(), 10)]).display !== 'none') {\n                actualWidth += pagerElements[parseInt(i.toString(), 10)].offsetWidth\n                    + parseFloat(getComputedStyle(pagerElements[parseInt(i.toString(), 10)]).marginLeft)\n                    + parseFloat(getComputedStyle(pagerElements[parseInt(i.toString(), 10)]).marginRight);\n            }\n        }\n        var pagerContainer = this.element.querySelector('.e-pagercontainer');\n        actualWidth += parseFloat(getComputedStyle(pagerContainer).marginLeft)\n            + parseFloat(getComputedStyle(pagerContainer).marginRight);\n        return actualWidth;\n    };\n    /**\n     * Resize pager component by hiding pager component's numeric items based on total width available for pager.\n     *\n     * @returns {void}\n     */\n    Pager.prototype.resizePager = function () {\n        var _this = this;\n        var isStyleApplied = this.element.classList.contains('e-pager') ? getComputedStyle(this.element).getPropertyValue('border-style').includes('solid') : null;\n        if (!(this.template) && isStyleApplied) {\n            var pagerContainer = this.element.querySelector('.e-pagercontainer');\n            var actualWidth = this.calculateActualWidth();\n            var pagerWidth = this.element.clientWidth\n                - parseFloat(getComputedStyle(this.element).paddingLeft)\n                - parseFloat(getComputedStyle(this.element).paddingRight)\n                - parseFloat(getComputedStyle(this.element).marginLeft)\n                - parseFloat(getComputedStyle(this.element).marginRight);\n            var numItems = pagerContainer.querySelectorAll('.e-numericitem:not(.e-hide):not([style*=\"display: none\"]):not(.e-np):not(.e-pp)');\n            var hiddenNumItems = pagerContainer.querySelectorAll('.e-numericitem.e-hide:not([style*=\"display: none\"])');\n            var hideFrom = numItems.length;\n            var showFrom = 1;\n            var bufferWidth = (!(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)((0,_grid_base_util__WEBPACK_IMPORTED_MODULE_4__.parentsUntil)(this.element, 'e-bigger'))) ? 10 : 5;\n            var NP = pagerContainer.querySelector('.e-np');\n            var PP = pagerContainer.querySelector('.e-pp');\n            var detailItems = this.element.querySelectorAll('.e-parentmsgbar:not(.e-hide):not([style*=\"display: none\"]), .e-pagesizes:not(.e-hide):not([style*=\"display: none\"])');\n            var totDetailWidth_1 = 0;\n            if (detailItems.length) {\n                detailItems.forEach(function (item) {\n                    totDetailWidth_1 += item.offsetWidth;\n                });\n                this.averageDetailWidth = totDetailWidth_1 / detailItems.length;\n            }\n            var totalWidth = 0;\n            /**\n             * Loop to calculate average width of numeric item.\n             */\n            for (var i = 0; i < numItems.length; i++) {\n                totalWidth += numItems[parseInt(i.toString(), 10)].offsetWidth\n                    + parseFloat(getComputedStyle(numItems[parseInt(i.toString(), 10)]).marginLeft)\n                    + parseFloat(getComputedStyle(numItems[parseInt(i.toString(), 10)]).marginRight);\n            }\n            var numericItemWidth = totalWidth / numItems.length;\n            /**\n             * Condition to hide numeric items when calculated actual width exceeds available pager space.\n             */\n            if (pagerWidth > 0 && (actualWidth >= (pagerWidth - (numericItemWidth ? numericItemWidth : 0)))) {\n                this.isPagerResized = true;\n                if (this.currentPage !== this.totalPages) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(NP, ['e-numericitem', 'e-pager-default'], ['e-nextprevitemdisabled', 'e-disable']);\n                }\n                actualWidth = this.calculateActualWidth();\n                var diff = Math.abs((actualWidth) - pagerWidth);\n                // To calculate number of numeric items need to be hidden.\n                var numToHide = Math.ceil(diff / (numericItemWidth));\n                numToHide = (numToHide === 0) ? 1 : (numToHide > numItems.length) ? (numItems.length - 1) : numToHide;\n                for (var i = 1; i <= numToHide; i++) {\n                    var hideIndex = hideFrom - parseInt(i.toString(), 10);\n                    numItems = pagerContainer.querySelectorAll('.e-numericitem:not(.e-hide):not([style*=\"display: none\"]):not(.e-np):not(.e-pp)');\n                    if (this.currentPage !== 1 && ((parseInt(numItems[Math.abs(hideIndex)].getAttribute('index'), 10) === this.currentPage)\n                        || parseInt(numItems[numItems.length - 1].getAttribute('index'), 10) === this.currentPage)) {\n                        hideIndex = 0;\n                        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(PP, ['e-numericitem', 'e-pager-default'], ['e-nextprevitemdisabled', 'e-disable']);\n                    }\n                    if (numItems[Math.abs(hideIndex)] && !(numItems[Math.abs(hideIndex)].classList.contains('e-currentitem'))) {\n                        numItems[Math.abs(hideIndex)].classList.add('e-hide');\n                    }\n                }\n                numItems = pagerContainer.querySelectorAll('.e-numericitem:not(.e-hide):not([style*=\"display: none\"]):not(.e-np):not(.e-pp)');\n                // To hide Pager message elements when no more numeric items available to hide.\n                if (numItems.length <= 1 && detailItems.length && window.innerWidth >= 768) {\n                    var pagerDetailItemsWidth = this.calculateActualWidth();\n                    if ((pagerDetailItemsWidth) > (pagerWidth - bufferWidth)) {\n                        var detailtoHide = Math.floor((pagerWidth - (pagerDetailItemsWidth - totDetailWidth_1))\n                            / this.averageDetailWidth);\n                        detailtoHide = detailItems.length - detailtoHide;\n                        for (var i = 0; i < (detailtoHide > detailItems.length ? detailItems.length : detailtoHide); i++) {\n                            detailItems[parseInt(i.toString(), 10)].classList.add('e-hide');\n                        }\n                    }\n                }\n            }\n            /**\n             * Condition to show numeric items when space availble in pager at dom.\n             */\n            else if (actualWidth < (pagerWidth) && hiddenNumItems.length) {\n                var diff = Math.abs(pagerWidth - (actualWidth));\n                var hiddenDetailItems = this.element.querySelectorAll('.e-parentmsgbar.e-hide, .e-pagesizes.e-hide');\n                // To show Pager message elements.\n                if (hiddenDetailItems.length && (diff > (this.averageDetailWidth + (this.averageDetailWidth / 4)))) {\n                    hiddenDetailItems[(hiddenDetailItems.length - 1)].classList.remove('e-hide');\n                }\n                if ((diff > (numericItemWidth * 2) && !hiddenDetailItems.length && window.innerWidth >= 768)) {\n                    // To calculate number of numeric items need to be shown.\n                    var numToShow = Math.floor((diff) / (numericItemWidth + bufferWidth));\n                    numToShow = (numToShow > hiddenNumItems.length) ? hiddenNumItems.length : (numToShow - 1);\n                    //Seggregating hidden num items as less index and greater index values than current page value.\n                    var lesserIndexItems = Array.from(hiddenNumItems).filter(function (item) { return parseInt(item.getAttribute('index'), 10) < _this.currentPage; }).sort(function (a, b) { return parseInt(b.getAttribute('index'), 10) - parseInt(a.getAttribute('index'), 10); });\n                    var greaterIndexItems = Array.from(hiddenNumItems).filter(function (item) { return parseInt(item.getAttribute('index'), 10) > _this.currentPage; });\n                    var showItems = (lesserIndexItems.length && lesserIndexItems)\n                        || (greaterIndexItems.length && greaterIndexItems);\n                    for (var i = 1; i <= numToShow; i++) {\n                        var showItem = showItems && showItems[Math.abs(showFrom - i)];\n                        if (showItem) {\n                            showItem.classList.remove('e-hide');\n                            if (showItem === showItems[showItems.length - 1]) {\n                                showItems = null;\n                            }\n                        }\n                    }\n                }\n            }\n            numItems = pagerContainer.querySelectorAll('.e-numericitem:not(.e-hide):not([style*=\"display: none\"]):not(.e-np):not(.e-pp)');\n            if (numItems.length) {\n                if (parseInt(numItems[numItems.length - 1].getAttribute('index'), 10) === this.totalPages) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(NP, ['e-nextprevitemdisabled', 'e-disable'], ['e-numericitem', 'e-pager-default']);\n                }\n                if (parseInt(numItems[0].getAttribute('index'), 10) === 1) {\n                    (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.classList)(PP, ['e-nextprevitemdisabled', 'e-disable'], ['e-numericitem', 'e-pager-default']);\n                }\n                var isLastSet = Array.from(numItems).some(function (item) { return parseInt(item.getAttribute('index'), 10) === _this.totalPages; });\n                var ppIndex = (parseInt(numItems[0].getAttribute('index'), 10) - (isLastSet && !(0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.isNullOrUndefined)(this.avgNumItems) ? this.avgNumItems : numItems.length));\n                PP.setAttribute('index', (ppIndex < 1) ? '1' : ppIndex.toString());\n                NP.setAttribute('index', (parseInt(numItems[numItems.length - 1].getAttribute('index'), 10) + 1).toString());\n                this.avgNumItems = isLastSet ? this.avgNumItems : numItems.length;\n            }\n            /**\n             * Condition to add adaptive class name and set pagermessage content with \"/\" when media query css has been applied.\n             */\n            if (((this.element.offsetWidth < 769) && window.getComputedStyle(this.element.querySelector('.e-mfirst')).getPropertyValue('display') !== 'none') && this.pageSizes) {\n                this.element.querySelector('.e-pagesizes').classList.remove('e-hide');\n                this.element.querySelector('.e-parentmsgbar').classList.remove('e-hide');\n                this.element.classList.add('e-adaptive');\n                this.element.querySelector('.e-pagenomsg').innerHTML = this.element.offsetWidth < 481 ? (this.currentPage + ' / ' + this.totalPages) : this.pagerMessageModule.format(this.getLocalizedLabel('currentPageInfo'), [this.totalRecordsCount === 0 ? 0 :\n                        this.currentPage, this.totalPages || 0, this.totalRecordsCount || 0]) + ' ';\n            }\n            else {\n                this.element.classList.remove('e-adaptive');\n                this.element.querySelector('.e-pagenomsg').innerHTML = this.pagerMessageModule.format(this.getLocalizedLabel('currentPageInfo'), [this.totalRecordsCount === 0 ? 0 :\n                        this.currentPage, this.totalPages || 0, this.totalRecordsCount || 0]) + ' ';\n            }\n        }\n    };\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Pager.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Pager.prototype, \"enableExternalMessage\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(true)\n    ], Pager.prototype, \"enablePagerMessage\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(12)\n    ], Pager.prototype, \"pageSize\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(10)\n    ], Pager.prototype, \"pageCount\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(1)\n    ], Pager.prototype, \"currentPage\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Pager.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Pager.prototype, \"externalMessage\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)(false)\n    ], Pager.prototype, \"pageSizes\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)()\n    ], Pager.prototype, \"template\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Pager.prototype, \"customText\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Pager.prototype, \"click\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Property)('')\n    ], Pager.prototype, \"cssClass\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Pager.prototype, \"dropDownChanged\", void 0);\n    __decorate([\n        (0,_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Event)()\n    ], Pager.prototype, \"created\", void 0);\n    Pager = __decorate([\n        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.NotifyPropertyChanges\n    ], Pager);\n    return Pager;\n}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__.Component));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@syncfusion+ej2-grids@29.1.40/node_modules/@syncfusion/ej2-grids/src/pager/pager.js\n");

/***/ })

};
;